def int01(a, b, c, d, x, y, start, end):
    output = a*(a*(a*(c*(c*(c*(end**7/28 - start**7/28) + d*(end**6/8 - start**6/8) + 5*end**6/24 - 5*start**6/24 + y*(-end**6/8 + start**6/8)) + d*(d*(3*end**5/20 - 3*start**5/20) + end**5/2 - start**5/2 + y*(-3*end**5/10 + 3*start**5/10)) + 2*end**5/5 - 2*start**5/5 + y*(-end**5/2 + start**5/2 + y*(3*end**5/20 - 3*start**5/20))) + d*(d*(d*(end**4/16 - start**4/16) + 5*end**4/16 - 5*start**4/16 + y*(-3*end**4/16 + 3*start**4/16)) + end**4/2 - start**4/2 + y*(-5*end**4/8 + 5*start**4/8 + y*(3*end**4/16 - 3*start**4/16))) + end**4/4 - start**4/4 + y*(-end**4/2 + start**4/2 + y*(5*end**4/16 - 5*start**4/16 + y*(-end**4/16 + start**4/16)))) + b*(c*(c*(c*(end**6/8 - start**6/8) + d*(9*end**5/20 - 9*start**5/20) + 3*end**5/4 - 3*start**5/4 + y*(-9*end**5/20 + 9*start**5/20)) + d*(d*(9*end**4/16 - 9*start**4/16) + 15*end**4/8 - 15*start**4/8 + y*(-9*end**4/8 + 9*start**4/8)) + 3*end**4/2 - 3*start**4/2 + y*(-15*end**4/8 + 15*start**4/8 + y*(9*end**4/16 - 9*start**4/16))) + d*(d*(d*(end**3/4 - start**3/4) + 5*end**3/4 - 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)) + 2*end**3 - 2*start**3 + y*(-5*end**3/2 + 5*start**3/2 + y*(3*end**3/4 - 3*start**3/4))) + end**3 - start**3 + y*(-2*end**3 + 2*start**3 + y*(5*end**3/4 - 5*start**3/4 + y*(-end**3/4 + start**3/4)))) + c*(c*(c*(5*end**6/24 - 5*start**6/24 + x*(-end**6/8 + start**6/8)) + d*(3*end**5/4 - 3*start**5/4 + x*(-9*end**5/20 + 9*start**5/20)) + 5*end**5/4 - 5*start**5/4 + x*(-3*end**5/4 + 3*start**5/4 + y*(9*end**5/20 - 9*start**5/20)) + y*(-3*end**5/4 + 3*start**5/4)) + d*(d*(15*end**4/16 - 15*start**4/16 + x*(-9*end**4/16 + 9*start**4/16)) + 25*end**4/8 - 25*start**4/8 + x*(-15*end**4/8 + 15*start**4/8 + y*(9*end**4/8 - 9*start**4/8)) + y*(-15*end**4/8 + 15*start**4/8)) + 5*end**4/2 - 5*start**4/2 + x*(-3*end**4/2 + 3*start**4/2 + y*(15*end**4/8 - 15*start**4/8 + y*(-9*end**4/16 + 9*start**4/16))) + y*(-25*end**4/8 + 25*start**4/8 + y*(15*end**4/16 - 15*start**4/16))) + d*(d*(d*(5*end**3/12 - 5*start**3/12 + x*(-end**3/4 + start**3/4)) + 25*end**3/12 - 25*start**3/12 + x*(-5*end**3/4 + 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4)) + y*(-5*end**3/4 + 5*start**3/4)) + 10*end**3/3 - 10*start**3/3 + x*(-2*end**3 + 2*start**3 + y*(5*end**3/2 - 5*start**3/2 + y*(-3*end**3/4 + 3*start**3/4))) + y*(-25*end**3/6 + 25*start**3/6 + y*(5*end**3/4 - 5*start**3/4))) + 5*end**3/3 - 5*start**3/3 + x*(-end**3 + start**3 + y*(2*end**3 - 2*start**3 + y*(-5*end**3/4 + 5*start**3/4 + y*(end**3/4 - start**3/4)))) + y*(-10*end**3/3 + 10*start**3/3 + y*(25*end**3/12 - 25*start**3/12 + y*(-5*end**3/12 + 5*start**3/12)))) + b*(b*(c*(c*(c*(3*end**5/20 - 3*start**5/20) + d*(9*end**4/16 - 9*start**4/16) + 15*end**4/16 - 15*start**4/16 + y*(-9*end**4/16 + 9*start**4/16)) + d*(d*(3*end**3/4 - 3*start**3/4) + 5*end**3/2 - 5*start**3/2 + y*(-3*end**3/2 + 3*start**3/2)) + 2*end**3 - 2*start**3 + y*(-5*end**3/2 + 5*start**3/2 + y*(3*end**3/4 - 3*start**3/4))) + d*(d*(d*(3*end**2/8 - 3*start**2/8) + 15*end**2/8 - 15*start**2/8 + y*(-9*end**2/8 + 9*start**2/8)) + 3*end**2 - 3*start**2 + y*(-15*end**2/4 + 15*start**2/4 + y*(9*end**2/8 - 9*start**2/8))) + 3*end**2/2 - 3*start**2/2 + y*(-3*end**2 + 3*start**2 + y*(15*end**2/8 - 15*start**2/8 + y*(-3*end**2/8 + 3*start**2/8)))) + c*(c*(c*(end**5/2 - start**5/2 + x*(-3*end**5/10 + 3*start**5/10)) + d*(15*end**4/8 - 15*start**4/8 + x*(-9*end**4/8 + 9*start**4/8)) + 25*end**4/8 - 25*start**4/8 + x*(-15*end**4/8 + 15*start**4/8 + y*(9*end**4/8 - 9*start**4/8)) + y*(-15*end**4/8 + 15*start**4/8)) + d*(d*(5*end**3/2 - 5*start**3/2 + x*(-3*end**3/2 + 3*start**3/2)) + 25*end**3/3 - 25*start**3/3 + x*(-5*end**3 + 5*start**3 + y*(3*end**3 - 3*start**3)) + y*(-5*end**3 + 5*start**3)) + 20*end**3/3 - 20*start**3/3 + x*(-4*end**3 + 4*start**3 + y*(5*end**3 - 5*start**3 + y*(-3*end**3/2 + 3*start**3/2))) + y*(-25*end**3/3 + 25*start**3/3 + y*(5*end**3/2 - 5*start**3/2))) + d*(d*(d*(5*end**2/4 - 5*start**2/4 + x*(-3*end**2/4 + 3*start**2/4)) + 25*end**2/4 - 25*start**2/4 + x*(-15*end**2/4 + 15*start**2/4 + y*(9*end**2/4 - 9*start**2/4)) + y*(-15*end**2/4 + 15*start**2/4)) + 10*end**2 - 10*start**2 + x*(-6*end**2 + 6*start**2 + y*(15*end**2/2 - 15*start**2/2 + y*(-9*end**2/4 + 9*start**2/4))) + y*(-25*end**2/2 + 25*start**2/2 + y*(15*end**2/4 - 15*start**2/4))) + 5*end**2 - 5*start**2 + x*(-3*end**2 + 3*start**2 + y*(6*end**2 - 6*start**2 + y*(-15*end**2/4 + 15*start**2/4 + y*(3*end**2/4 - 3*start**2/4)))) + y*(-10*end**2 + 10*start**2 + y*(25*end**2/4 - 25*start**2/4 + y*(-5*end**2/4 + 5*start**2/4)))) + c*(c*(c*(2*end**5/5 - 2*start**5/5 + x*(-end**5/2 + start**5/2 + x*(3*end**5/20 - 3*start**5/20))) + d*(3*end**4/2 - 3*start**4/2 + x*(-15*end**4/8 + 15*start**4/8 + x*(9*end**4/16 - 9*start**4/16))) + 5*end**4/2 - 5*start**4/2 + x*(-25*end**4/8 + 25*start**4/8 + x*(15*end**4/16 - 15*start**4/16 + y*(-9*end**4/16 + 9*start**4/16)) + y*(15*end**4/8 - 15*start**4/8)) + y*(-3*end**4/2 + 3*start**4/2)) + d*(d*(2*end**3 - 2*start**3 + x*(-5*end**3/2 + 5*start**3/2 + x*(3*end**3/4 - 3*start**3/4))) + 20*end**3/3 - 20*start**3/3 + x*(-25*end**3/3 + 25*start**3/3 + x*(5*end**3/2 - 5*start**3/2 + y*(-3*end**3/2 + 3*start**3/2)) + y*(5*end**3 - 5*start**3)) + y*(-4*end**3 + 4*start**3)) + 16*end**3/3 - 16*start**3/3 + x*(-20*end**3/3 + 20*start**3/3 + x*(2*end**3 - 2*start**3 + y*(-5*end**3/2 + 5*start**3/2 + y*(3*end**3/4 - 3*start**3/4))) + y*(25*end**3/3 - 25*start**3/3 + y*(-5*end**3/2 + 5*start**3/2))) + y*(-20*end**3/3 + 20*start**3/3 + y*(2*end**3 - 2*start**3))) + d*(d*(d*(end**2 - start**2 + x*(-5*end**2/4 + 5*start**2/4 + x*(3*end**2/8 - 3*start**2/8))) + 5*end**2 - 5*start**2 + x*(-25*end**2/4 + 25*start**2/4 + x*(15*end**2/8 - 15*start**2/8 + y*(-9*end**2/8 + 9*start**2/8)) + y*(15*end**2/4 - 15*start**2/4)) + y*(-3*end**2 + 3*start**2)) + 8*end**2 - 8*start**2 + x*(-10*end**2 + 10*start**2 + x*(3*end**2 - 3*start**2 + y*(-15*end**2/4 + 15*start**2/4 + y*(9*end**2/8 - 9*start**2/8))) + y*(25*end**2/2 - 25*start**2/2 + y*(-15*end**2/4 + 15*start**2/4))) + y*(-10*end**2 + 10*start**2 + y*(3*end**2 - 3*start**2))) + 4*end**2 - 4*start**2 + x*(-5*end**2 + 5*start**2 + x*(3*end**2/2 - 3*start**2/2 + y*(-3*end**2 + 3*start**2 + y*(15*end**2/8 - 15*start**2/8 + y*(-3*end**2/8 + 3*start**2/8)))) + y*(10*end**2 - 10*start**2 + y*(-25*end**2/4 + 25*start**2/4 + y*(5*end**2/4 - 5*start**2/4)))) + y*(-8*end**2 + 8*start**2 + y*(5*end**2 - 5*start**2 + y*(-end**2 + start**2)))) + b*(b*(b*(c*(c*(c*(end**4/16 - start**4/16) + d*(end**3/4 - start**3/4) + 5*end**3/12 - 5*start**3/12 + y*(-end**3/4 + start**3/4)) + d*(d*(3*end**2/8 - 3*start**2/8) + 5*end**2/4 - 5*start**2/4 + y*(-3*end**2/4 + 3*start**2/4)) + end**2 - start**2 + y*(-5*end**2/4 + 5*start**2/4 + y*(3*end**2/8 - 3*start**2/8))) + d*(d*(d*(end/4 - start/4) + 5*end/4 - 5*start/4 + y*(-3*end/4 + 3*start/4)) + 2*end - 2*start + y*(-5*end/2 + 5*start/2 + y*(3*end/4 - 3*start/4))) + end - start + y*(-2*end + 2*start + y*(5*end/4 - 5*start/4 + y*(-end/4 + start/4)))) + c*(c*(c*(5*end**4/16 - 5*start**4/16 + x*(-3*end**4/16 + 3*start**4/16)) + d*(5*end**3/4 - 5*start**3/4 + x*(-3*end**3/4 + 3*start**3/4)) + 25*end**3/12 - 25*start**3/12 + x*(-5*end**3/4 + 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4)) + y*(-5*end**3/4 + 5*start**3/4)) + d*(d*(15*end**2/8 - 15*start**2/8 + x*(-9*end**2/8 + 9*start**2/8)) + 25*end**2/4 - 25*start**2/4 + x*(-15*end**2/4 + 15*start**2/4 + y*(9*end**2/4 - 9*start**2/4)) + y*(-15*end**2/4 + 15*start**2/4)) + 5*end**2 - 5*start**2 + x*(-3*end**2 + 3*start**2 + y*(15*end**2/4 - 15*start**2/4 + y*(-9*end**2/8 + 9*start**2/8))) + y*(-25*end**2/4 + 25*start**2/4 + y*(15*end**2/8 - 15*start**2/8))) + d*(d*(d*(5*end/4 - 5*start/4 + x*(-3*end/4 + 3*start/4)) + 25*end/4 - 25*start/4 + x*(-15*end/4 + 15*start/4 + y*(9*end/4 - 9*start/4)) + y*(-15*end/4 + 15*start/4)) + 10*end - 10*start + x*(-6*end + 6*start + y*(15*end/2 - 15*start/2 + y*(-9*end/4 + 9*start/4))) + y*(-25*end/2 + 25*start/2 + y*(15*end/4 - 15*start/4))) + 5*end - 5*start + x*(-3*end + 3*start + y*(6*end - 6*start + y*(-15*end/4 + 15*start/4 + y*(3*end/4 - 3*start/4)))) + y*(-10*end + 10*start + y*(25*end/4 - 25*start/4 + y*(-5*end/4 + 5*start/4)))) + c*(c*(c*(end**4/2 - start**4/2 + x*(-5*end**4/8 + 5*start**4/8 + x*(3*end**4/16 - 3*start**4/16))) + d*(2*end**3 - 2*start**3 + x*(-5*end**3/2 + 5*start**3/2 + x*(3*end**3/4 - 3*start**3/4))) + 10*end**3/3 - 10*start**3/3 + x*(-25*end**3/6 + 25*start**3/6 + x*(5*end**3/4 - 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)) + y*(5*end**3/2 - 5*start**3/2)) + y*(-2*end**3 + 2*start**3)) + d*(d*(3*end**2 - 3*start**2 + x*(-15*end**2/4 + 15*start**2/4 + x*(9*end**2/8 - 9*start**2/8))) + 10*end**2 - 10*start**2 + x*(-25*end**2/2 + 25*start**2/2 + x*(15*end**2/4 - 15*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)) + y*(15*end**2/2 - 15*start**2/2)) + y*(-6*end**2 + 6*start**2)) + 8*end**2 - 8*start**2 + x*(-10*end**2 + 10*start**2 + x*(3*end**2 - 3*start**2 + y*(-15*end**2/4 + 15*start**2/4 + y*(9*end**2/8 - 9*start**2/8))) + y*(25*end**2/2 - 25*start**2/2 + y*(-15*end**2/4 + 15*start**2/4))) + y*(-10*end**2 + 10*start**2 + y*(3*end**2 - 3*start**2))) + d*(d*(d*(2*end - 2*start + x*(-5*end/2 + 5*start/2 + x*(3*end/4 - 3*start/4))) + 10*end - 10*start + x*(-25*end/2 + 25*start/2 + x*(15*end/4 - 15*start/4 + y*(-9*end/4 + 9*start/4)) + y*(15*end/2 - 15*start/2)) + y*(-6*end + 6*start)) + 16*end - 16*start + x*(-20*end + 20*start + x*(6*end - 6*start + y*(-15*end/2 + 15*start/2 + y*(9*end/4 - 9*start/4))) + y*(25*end - 25*start + y*(-15*end/2 + 15*start/2))) + y*(-20*end + 20*start + y*(6*end - 6*start))) + 8*end - 8*start + x*(-10*end + 10*start + x*(3*end - 3*start + y*(-6*end + 6*start + y*(15*end/4 - 15*start/4 + y*(-3*end/4 + 3*start/4)))) + y*(20*end - 20*start + y*(-25*end/2 + 25*start/2 + y*(5*end/2 - 5*start/2)))) + y*(-16*end + 16*start + y*(10*end - 10*start + y*(-2*end + 2*start)))) + c*(c*(c*(end**4/4 - start**4/4 + x*(-end**4/2 + start**4/2 + x*(5*end**4/16 - 5*start**4/16 + x*(-end**4/16 + start**4/16)))) + d*(end**3 - start**3 + x*(-2*end**3 + 2*start**3 + x*(5*end**3/4 - 5*start**3/4 + x*(-end**3/4 + start**3/4)))) + 5*end**3/3 - 5*start**3/3 + x*(-10*end**3/3 + 10*start**3/3 + x*(25*end**3/12 - 25*start**3/12 + x*(-5*end**3/12 + 5*start**3/12 + y*(end**3/4 - start**3/4)) + y*(-5*end**3/4 + 5*start**3/4)) + y*(2*end**3 - 2*start**3)) + y*(-end**3 + start**3)) + d*(d*(3*end**2/2 - 3*start**2/2 + x*(-3*end**2 + 3*start**2 + x*(15*end**2/8 - 15*start**2/8 + x*(-3*end**2/8 + 3*start**2/8)))) + 5*end**2 - 5*start**2 + x*(-10*end**2 + 10*start**2 + x*(25*end**2/4 - 25*start**2/4 + x*(-5*end**2/4 + 5*start**2/4 + y*(3*end**2/4 - 3*start**2/4)) + y*(-15*end**2/4 + 15*start**2/4)) + y*(6*end**2 - 6*start**2)) + y*(-3*end**2 + 3*start**2)) + 4*end**2 - 4*start**2 + x*(-8*end**2 + 8*start**2 + x*(5*end**2 - 5*start**2 + x*(-end**2 + start**2 + y*(5*end**2/4 - 5*start**2/4 + y*(-3*end**2/8 + 3*start**2/8))) + y*(-25*end**2/4 + 25*start**2/4 + y*(15*end**2/8 - 15*start**2/8))) + y*(10*end**2 - 10*start**2 + y*(-3*end**2 + 3*start**2))) + y*(-5*end**2 + 5*start**2 + y*(3*end**2/2 - 3*start**2/2))) + d*(d*(d*(end - start + x*(-2*end + 2*start + x*(5*end/4 - 5*start/4 + x*(-end/4 + start/4)))) + 5*end - 5*start + x*(-10*end + 10*start + x*(25*end/4 - 25*start/4 + x*(-5*end/4 + 5*start/4 + y*(3*end/4 - 3*start/4)) + y*(-15*end/4 + 15*start/4)) + y*(6*end - 6*start)) + y*(-3*end + 3*start)) + 8*end - 8*start + x*(-16*end + 16*start + x*(10*end - 10*start + x*(-2*end + 2*start + y*(5*end/2 - 5*start/2 + y*(-3*end/4 + 3*start/4))) + y*(-25*end/2 + 25*start/2 + y*(15*end/4 - 15*start/4))) + y*(20*end - 20*start + y*(-6*end + 6*start))) + y*(-10*end + 10*start + y*(3*end - 3*start))) + 4*end - 4*start + x*(-8*end + 8*start + x*(5*end - 5*start + x*(-end + start + y*(2*end - 2*start + y*(-5*end/4 + 5*start/4 + y*(end/4 - start/4)))) + y*(-10*end + 10*start + y*(25*end/4 - 25*start/4 + y*(-5*end/4 + 5*start/4)))) + y*(16*end - 16*start + y*(-10*end + 10*start + y*(2*end - 2*start)))) + y*(-8*end + 8*start + y*(5*end - 5*start + y*(-end + start)))


    return output


def int02(a, b, c, d, x, y, start, end):
    output =a*(a*(a*(c*(c*(c*(-3*end**7/28 + 3*start**7/28) + d*(-3*end**6/8 + 3*start**6/8) - 5*end**6/24 + 5*start**6/24 + y*(3*end**6/8 - 3*start**6/8)) + d*(d*(-9*end**5/20 + 9*start**5/20) - end**5/2 + start**5/2 + y*(9*end**5/10 - 9*start**5/10)) + y*(end**5/2 - start**5/2 + y*(-9*end**5/20 + 9*start**5/20))) + d*(d*(d*(-3*end**4/16 + 3*start**4/16) - 5*end**4/16 + 5*start**4/16 + y*(9*end**4/16 - 9*start**4/16)) + y*(5*end**4/8 - 5*start**4/8 + y*(-9*end**4/16 + 9*start**4/16))) + end**4/8 - start**4/8 + y**2*(-5*end**4/16 + 5*start**4/16 + y*(3*end**4/16 - 3*start**4/16))) + b*(c*(c*(c*(-3*end**6/8 + 3*start**6/8) + d*(-27*end**5/20 + 27*start**5/20) - 3*end**5/4 + 3*start**5/4 + y*(27*end**5/20 - 27*start**5/20)) + d*(d*(-27*end**4/16 + 27*start**4/16) - 15*end**4/8 + 15*start**4/8 + y*(27*end**4/8 - 27*start**4/8)) + y*(15*end**4/8 - 15*start**4/8 + y*(-27*end**4/16 + 27*start**4/16))) + d*(d*(d*(-3*end**3/4 + 3*start**3/4) - 5*end**3/4 + 5*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(5*end**3/2 - 5*start**3/2 + y*(-9*end**3/4 + 9*start**3/4))) + end**3/2 - start**3/2 + y**2*(-5*end**3/4 + 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4))) + c*(c*(c*(-5*end**6/8 + 5*start**6/8 + x*(3*end**6/8 - 3*start**6/8)) + d*(-9*end**5/4 + 9*start**5/4 + x*(27*end**5/20 - 27*start**5/20)) - 5*end**5/4 + 5*start**5/4 + x*(3*end**5/4 - 3*start**5/4 + y*(-27*end**5/20 + 27*start**5/20)) + y*(9*end**5/4 - 9*start**5/4)) + d*(d*(-45*end**4/16 + 45*start**4/16 + x*(27*end**4/16 - 27*start**4/16)) - 25*end**4/8 + 25*start**4/8 + x*(15*end**4/8 - 15*start**4/8 + y*(-27*end**4/8 + 27*start**4/8)) + y*(45*end**4/8 - 45*start**4/8)) + x*y*(-15*end**4/8 + 15*start**4/8 + y*(27*end**4/16 - 27*start**4/16)) + y*(25*end**4/8 - 25*start**4/8 + y*(-45*end**4/16 + 45*start**4/16))) + d*(d*(d*(-5*end**3/4 + 5*start**3/4 + x*(3*end**3/4 - 3*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(5*end**3/4 - 5*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + y*(15*end**3/4 - 15*start**3/4)) + x*y*(-5*end**3/2 + 5*start**3/2 + y*(9*end**3/4 - 9*start**3/4)) + y*(25*end**3/6 - 25*start**3/6 + y*(-15*end**3/4 + 15*start**3/4))) + 5*end**3/6 - 5*start**3/6 + x*(-end**3/2 + start**3/2 + y**2*(5*end**3/4 - 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4))) + y**2*(-25*end**3/12 + 25*start**3/12 + y*(5*end**3/4 - 5*start**3/4))) + b*(b*(c*(c*(c*(-9*end**5/20 + 9*start**5/20) + d*(-27*end**4/16 + 27*start**4/16) - 15*end**4/16 + 15*start**4/16 + y*(27*end**4/16 - 27*start**4/16)) + d*(d*(-9*end**3/4 + 9*start**3/4) - 5*end**3/2 + 5*start**3/2 + y*(9*end**3/2 - 9*start**3/2)) + y*(5*end**3/2 - 5*start**3/2 + y*(-9*end**3/4 + 9*start**3/4))) + d*(d*(d*(-9*end**2/8 + 9*start**2/8) - 15*end**2/8 + 15*start**2/8 + y*(27*end**2/8 - 27*start**2/8)) + y*(15*end**2/4 - 15*start**2/4 + y*(-27*end**2/8 + 27*start**2/8))) + 3*end**2/4 - 3*start**2/4 + y**2*(-15*end**2/8 + 15*start**2/8 + y*(9*end**2/8 - 9*start**2/8))) + c*(c*(c*(-3*end**5/2 + 3*start**5/2 + x*(9*end**5/10 - 9*start**5/10)) + d*(-45*end**4/8 + 45*start**4/8 + x*(27*end**4/8 - 27*start**4/8)) - 25*end**4/8 + 25*start**4/8 + x*(15*end**4/8 - 15*start**4/8 + y*(-27*end**4/8 + 27*start**4/8)) + y*(45*end**4/8 - 45*start**4/8)) + d*(d*(-15*end**3/2 + 15*start**3/2 + x*(9*end**3/2 - 9*start**3/2)) - 25*end**3/3 + 25*start**3/3 + x*(5*end**3 - 5*start**3 + y*(-9*end**3 + 9*start**3)) + y*(15*end**3 - 15*start**3)) + x*y*(-5*end**3 + 5*start**3 + y*(9*end**3/2 - 9*start**3/2)) + y*(25*end**3/3 - 25*start**3/3 + y*(-15*end**3/2 + 15*start**3/2))) + d*(d*(d*(-15*end**2/4 + 15*start**2/4 + x*(9*end**2/4 - 9*start**2/4)) - 25*end**2/4 + 25*start**2/4 + x*(15*end**2/4 - 15*start**2/4 + y*(-27*end**2/4 + 27*start**2/4)) + y*(45*end**2/4 - 45*start**2/4)) + x*y*(-15*end**2/2 + 15*start**2/2 + y*(27*end**2/4 - 27*start**2/4)) + y*(25*end**2/2 - 25*start**2/2 + y*(-45*end**2/4 + 45*start**2/4))) + 5*end**2/2 - 5*start**2/2 + x*(-3*end**2/2 + 3*start**2/2 + y**2*(15*end**2/4 - 15*start**2/4 + y*(-9*end**2/4 + 9*start**2/4))) + y**2*(-25*end**2/4 + 25*start**2/4 + y*(15*end**2/4 - 15*start**2/4))) + c*(c*(c*(-6*end**5/5 + 6*start**5/5 + x*(3*end**5/2 - 3*start**5/2 + x*(-9*end**5/20 + 9*start**5/20))) + d*(-9*end**4/2 + 9*start**4/2 + x*(45*end**4/8 - 45*start**4/8 + x*(-27*end**4/16 + 27*start**4/16))) - 5*end**4/2 + 5*start**4/2 + x*(25*end**4/8 - 25*start**4/8 + x*(-15*end**4/16 + 15*start**4/16 + y*(27*end**4/16 - 27*start**4/16)) + y*(-45*end**4/8 + 45*start**4/8)) + y*(9*end**4/2 - 9*start**4/2)) + d*(d*(-6*end**3 + 6*start**3 + x*(15*end**3/2 - 15*start**3/2 + x*(-9*end**3/4 + 9*start**3/4))) - 20*end**3/3 + 20*start**3/3 + x*(25*end**3/3 - 25*start**3/3 + x*(-5*end**3/2 + 5*start**3/2 + y*(9*end**3/2 - 9*start**3/2)) + y*(-15*end**3 + 15*start**3)) + y*(12*end**3 - 12*start**3)) + x*(x*y*(5*end**3/2 - 5*start**3/2 + y*(-9*end**3/4 + 9*start**3/4)) + y*(-25*end**3/3 + 25*start**3/3 + y*(15*end**3/2 - 15*start**3/2))) + y*(20*end**3/3 - 20*start**3/3 + y*(-6*end**3 + 6*start**3))) + d*(d*(d*(-3*end**2 + 3*start**2 + x*(15*end**2/4 - 15*start**2/4 + x*(-9*end**2/8 + 9*start**2/8))) - 5*end**2 + 5*start**2 + x*(25*end**2/4 - 25*start**2/4 + x*(-15*end**2/8 + 15*start**2/8 + y*(27*end**2/8 - 27*start**2/8)) + y*(-45*end**2/4 + 45*start**2/4)) + y*(9*end**2 - 9*start**2)) + x*(x*y*(15*end**2/4 - 15*start**2/4 + y*(-27*end**2/8 + 27*start**2/8)) + y*(-25*end**2/2 + 25*start**2/2 + y*(45*end**2/4 - 45*start**2/4))) + y*(10*end**2 - 10*start**2 + y*(-9*end**2 + 9*start**2))) + 2*end**2 - 2*start**2 + x*(-5*end**2/2 + 5*start**2/2 + x*(3*end**2/4 - 3*start**2/4 + y**2*(-15*end**2/8 + 15*start**2/8 + y*(9*end**2/8 - 9*start**2/8))) + y**2*(25*end**2/4 - 25*start**2/4 + y*(-15*end**2/4 + 15*start**2/4))) + y**2*(-5*end**2 + 5*start**2 + y*(3*end**2 - 3*start**2))) + b*(b*(b*(c*(c*(c*(-3*end**4/16 + 3*start**4/16) + d*(-3*end**3/4 + 3*start**3/4) - 5*end**3/12 + 5*start**3/12 + y*(3*end**3/4 - 3*start**3/4)) + d*(d*(-9*end**2/8 + 9*start**2/8) - 5*end**2/4 + 5*start**2/4 + y*(9*end**2/4 - 9*start**2/4)) + y*(5*end**2/4 - 5*start**2/4 + y*(-9*end**2/8 + 9*start**2/8))) + d*(d*(d*(-3*end/4 + 3*start/4) - 5*end/4 + 5*start/4 + y*(9*end/4 - 9*start/4)) + y*(5*end/2 - 5*start/2 + y*(-9*end/4 + 9*start/4))) + end/2 - start/2 + y**2*(-5*end/4 + 5*start/4 + y*(3*end/4 - 3*start/4))) + c*(c*(c*(-15*end**4/16 + 15*start**4/16 + x*(9*end**4/16 - 9*start**4/16)) + d*(-15*end**3/4 + 15*start**3/4 + x*(9*end**3/4 - 9*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(5*end**3/4 - 5*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + y*(15*end**3/4 - 15*start**3/4)) + d*(d*(-45*end**2/8 + 45*start**2/8 + x*(27*end**2/8 - 27*start**2/8)) - 25*end**2/4 + 25*start**2/4 + x*(15*end**2/4 - 15*start**2/4 + y*(-27*end**2/4 + 27*start**2/4)) + y*(45*end**2/4 - 45*start**2/4)) + x*y*(-15*end**2/4 + 15*start**2/4 + y*(27*end**2/8 - 27*start**2/8)) + y*(25*end**2/4 - 25*start**2/4 + y*(-45*end**2/8 + 45*start**2/8))) + d*(d*(d*(-15*end/4 + 15*start/4 + x*(9*end/4 - 9*start/4)) - 25*end/4 + 25*start/4 + x*(15*end/4 - 15*start/4 + y*(-27*end/4 + 27*start/4)) + y*(45*end/4 - 45*start/4)) + x*y*(-15*end/2 + 15*start/2 + y*(27*end/4 - 27*start/4)) + y*(25*end/2 - 25*start/2 + y*(-45*end/4 + 45*start/4))) + 5*end/2 - 5*start/2 + x*(-3*end/2 + 3*start/2 + y**2*(15*end/4 - 15*start/4 + y*(-9*end/4 + 9*start/4))) + y**2*(-25*end/4 + 25*start/4 + y*(15*end/4 - 15*start/4))) + c*(c*(c*(-3*end**4/2 + 3*start**4/2 + x*(15*end**4/8 - 15*start**4/8 + x*(-9*end**4/16 + 9*start**4/16))) + d*(-6*end**3 + 6*start**3 + x*(15*end**3/2 - 15*start**3/2 + x*(-9*end**3/4 + 9*start**3/4))) - 10*end**3/3 + 10*start**3/3 + x*(25*end**3/6 - 25*start**3/6 + x*(-5*end**3/4 + 5*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(-15*end**3/2 + 15*start**3/2)) + y*(6*end**3 - 6*start**3)) + d*(d*(-9*end**2 + 9*start**2 + x*(45*end**2/4 - 45*start**2/4 + x*(-27*end**2/8 + 27*start**2/8))) - 10*end**2 + 10*start**2 + x*(25*end**2/2 - 25*start**2/2 + x*(-15*end**2/4 + 15*start**2/4 + y*(27*end**2/4 - 27*start**2/4)) + y*(-45*end**2/2 + 45*start**2/2)) + y*(18*end**2 - 18*start**2)) + x*(x*y*(15*end**2/4 - 15*start**2/4 + y*(-27*end**2/8 + 27*start**2/8)) + y*(-25*end**2/2 + 25*start**2/2 + y*(45*end**2/4 - 45*start**2/4))) + y*(10*end**2 - 10*start**2 + y*(-9*end**2 + 9*start**2))) + d*(d*(d*(-6*end + 6*start + x*(15*end/2 - 15*start/2 + x*(-9*end/4 + 9*start/4))) - 10*end + 10*start + x*(25*end/2 - 25*start/2 + x*(-15*end/4 + 15*start/4 + y*(27*end/4 - 27*start/4)) + y*(-45*end/2 + 45*start/2)) + y*(18*end - 18*start)) + x*(x*y*(15*end/2 - 15*start/2 + y*(-27*end/4 + 27*start/4)) + y*(-25*end + 25*start + y*(45*end/2 - 45*start/2))) + y*(20*end - 20*start + y*(-18*end + 18*start))) + 4*end - 4*start + x*(-5*end + 5*start + x*(3*end/2 - 3*start/2 + y**2*(-15*end/4 + 15*start/4 + y*(9*end/4 - 9*start/4))) + y**2*(25*end/2 - 25*start/2 + y*(-15*end/2 + 15*start/2))) + y**2*(-10*end + 10*start + y*(6*end - 6*start))) + c*(c*(c*(-3*end**4/4 + 3*start**4/4 + x*(3*end**4/2 - 3*start**4/2 + x*(-15*end**4/16 + 15*start**4/16 + x*(3*end**4/16 - 3*start**4/16)))) + d*(-3*end**3 + 3*start**3 + x*(6*end**3 - 6*start**3 + x*(-15*end**3/4 + 15*start**3/4 + x*(3*end**3/4 - 3*start**3/4)))) - 5*end**3/3 + 5*start**3/3 + x*(10*end**3/3 - 10*start**3/3 + x*(-25*end**3/12 + 25*start**3/12 + x*(5*end**3/12 - 5*start**3/12 + y*(-3*end**3/4 + 3*start**3/4)) + y*(15*end**3/4 - 15*start**3/4)) + y*(-6*end**3 + 6*start**3)) + y*(3*end**3 - 3*start**3)) + d*(d*(-9*end**2/2 + 9*start**2/2 + x*(9*end**2 - 9*start**2 + x*(-45*end**2/8 + 45*start**2/8 + x*(9*end**2/8 - 9*start**2/8)))) - 5*end**2 + 5*start**2 + x*(10*end**2 - 10*start**2 + x*(-25*end**2/4 + 25*start**2/4 + x*(5*end**2/4 - 5*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)) + y*(45*end**2/4 - 45*start**2/4)) + y*(-18*end**2 + 18*start**2)) + y*(9*end**2 - 9*start**2)) + x*(x*(x*y*(-5*end**2/4 + 5*start**2/4 + y*(9*end**2/8 - 9*start**2/8)) + y*(25*end**2/4 - 25*start**2/4 + y*(-45*end**2/8 + 45*start**2/8))) + y*(-10*end**2 + 10*start**2 + y*(9*end**2 - 9*start**2))) + y*(5*end**2 - 5*start**2 + y*(-9*end**2/2 + 9*start**2/2))) + d*(d*(d*(-3*end + 3*start + x*(6*end - 6*start + x*(-15*end/4 + 15*start/4 + x*(3*end/4 - 3*start/4)))) - 5*end + 5*start + x*(10*end - 10*start + x*(-25*end/4 + 25*start/4 + x*(5*end/4 - 5*start/4 + y*(-9*end/4 + 9*start/4)) + y*(45*end/4 - 45*start/4)) + y*(-18*end + 18*start)) + y*(9*end - 9*start)) + x*(x*(x*y*(-5*end/2 + 5*start/2 + y*(9*end/4 - 9*start/4)) + y*(25*end/2 - 25*start/2 + y*(-45*end/4 + 45*start/4))) + y*(-20*end + 20*start + y*(18*end - 18*start))) + y*(10*end - 10*start + y*(-9*end + 9*start))) + 2*end - 2*start + x*(-4*end + 4*start + x*(5*end/2 - 5*start/2 + x*(-end/2 + start/2 + y**2*(5*end/4 - 5*start/4 + y*(-3*end/4 + 3*start/4))) + y**2*(-25*end/4 + 25*start/4 + y*(15*end/4 - 15*start/4))) + y**2*(10*end - 10*start + y*(-6*end + 6*start))) + y**2*(-5*end + 5*start + y*(3*end - 3*start))



    return output


def int03(a, b, c, d, x, y, start, end):
    output = a*(a*(a*(c*(c*(c*(3*end**7/28 - 3*start**7/28) + d*(3*end**6/8 - 3*start**6/8) - 5*end**6/24 + 5*start**6/24 + y*(-3*end**6/8 + 3*start**6/8)) + d*(d*(9*end**5/20 - 9*start**5/20) - end**5/2 + start**5/2 + y*(-9*end**5/10 + 9*start**5/10)) + y*(end**5/2 - start**5/2 + y*(9*end**5/20 - 9*start**5/20))) + d*(d*(d*(3*end**4/16 - 3*start**4/16) - 5*end**4/16 + 5*start**4/16 + y*(-9*end**4/16 + 9*start**4/16)) + y*(5*end**4/8 - 5*start**4/8 + y*(9*end**4/16 - 9*start**4/16))) + end**4/8 - start**4/8 + y**2*(-5*end**4/16 + 5*start**4/16 + y*(-3*end**4/16 + 3*start**4/16))) + b*(c*(c*(c*(3*end**6/8 - 3*start**6/8) + d*(27*end**5/20 - 27*start**5/20) - 3*end**5/4 + 3*start**5/4 + y*(-27*end**5/20 + 27*start**5/20)) + d*(d*(27*end**4/16 - 27*start**4/16) - 15*end**4/8 + 15*start**4/8 + y*(-27*end**4/8 + 27*start**4/8)) + y*(15*end**4/8 - 15*start**4/8 + y*(27*end**4/16 - 27*start**4/16))) + d*(d*(d*(3*end**3/4 - 3*start**3/4) - 5*end**3/4 + 5*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + y*(5*end**3/2 - 5*start**3/2 + y*(9*end**3/4 - 9*start**3/4))) + end**3/2 - start**3/2 + y**2*(-5*end**3/4 + 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4))) + c*(c*(c*(5*end**6/8 - 5*start**6/8 + x*(-3*end**6/8 + 3*start**6/8)) + d*(9*end**5/4 - 9*start**5/4 + x*(-27*end**5/20 + 27*start**5/20)) - 5*end**5/4 + 5*start**5/4 + x*(3*end**5/4 - 3*start**5/4 + y*(27*end**5/20 - 27*start**5/20)) + y*(-9*end**5/4 + 9*start**5/4)) + d*(d*(45*end**4/16 - 45*start**4/16 + x*(-27*end**4/16 + 27*start**4/16)) - 25*end**4/8 + 25*start**4/8 + x*(15*end**4/8 - 15*start**4/8 + y*(27*end**4/8 - 27*start**4/8)) + y*(-45*end**4/8 + 45*start**4/8)) + x*y*(-15*end**4/8 + 15*start**4/8 + y*(-27*end**4/16 + 27*start**4/16)) + y*(25*end**4/8 - 25*start**4/8 + y*(45*end**4/16 - 45*start**4/16))) + d*(d*(d*(5*end**3/4 - 5*start**3/4 + x*(-3*end**3/4 + 3*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(5*end**3/4 - 5*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(-15*end**3/4 + 15*start**3/4)) + x*y*(-5*end**3/2 + 5*start**3/2 + y*(-9*end**3/4 + 9*start**3/4)) + y*(25*end**3/6 - 25*start**3/6 + y*(15*end**3/4 - 15*start**3/4))) + 5*end**3/6 - 5*start**3/6 + x*(-end**3/2 + start**3/2 + y**2*(5*end**3/4 - 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4))) + y**2*(-25*end**3/12 + 25*start**3/12 + y*(-5*end**3/4 + 5*start**3/4))) + b*(b*(c*(c*(c*(9*end**5/20 - 9*start**5/20) + d*(27*end**4/16 - 27*start**4/16) - 15*end**4/16 + 15*start**4/16 + y*(-27*end**4/16 + 27*start**4/16)) + d*(d*(9*end**3/4 - 9*start**3/4) - 5*end**3/2 + 5*start**3/2 + y*(-9*end**3/2 + 9*start**3/2)) + y*(5*end**3/2 - 5*start**3/2 + y*(9*end**3/4 - 9*start**3/4))) + d*(d*(d*(9*end**2/8 - 9*start**2/8) - 15*end**2/8 + 15*start**2/8 + y*(-27*end**2/8 + 27*start**2/8)) + y*(15*end**2/4 - 15*start**2/4 + y*(27*end**2/8 - 27*start**2/8))) + 3*end**2/4 - 3*start**2/4 + y**2*(-15*end**2/8 + 15*start**2/8 + y*(-9*end**2/8 + 9*start**2/8))) + c*(c*(c*(3*end**5/2 - 3*start**5/2 + x*(-9*end**5/10 + 9*start**5/10)) + d*(45*end**4/8 - 45*start**4/8 + x*(-27*end**4/8 + 27*start**4/8)) - 25*end**4/8 + 25*start**4/8 + x*(15*end**4/8 - 15*start**4/8 + y*(27*end**4/8 - 27*start**4/8)) + y*(-45*end**4/8 + 45*start**4/8)) + d*(d*(15*end**3/2 - 15*start**3/2 + x*(-9*end**3/2 + 9*start**3/2)) - 25*end**3/3 + 25*start**3/3 + x*(5*end**3 - 5*start**3 + y*(9*end**3 - 9*start**3)) + y*(-15*end**3 + 15*start**3)) + x*y*(-5*end**3 + 5*start**3 + y*(-9*end**3/2 + 9*start**3/2)) + y*(25*end**3/3 - 25*start**3/3 + y*(15*end**3/2 - 15*start**3/2))) + d*(d*(d*(15*end**2/4 - 15*start**2/4 + x*(-9*end**2/4 + 9*start**2/4)) - 25*end**2/4 + 25*start**2/4 + x*(15*end**2/4 - 15*start**2/4 + y*(27*end**2/4 - 27*start**2/4)) + y*(-45*end**2/4 + 45*start**2/4)) + x*y*(-15*end**2/2 + 15*start**2/2 + y*(-27*end**2/4 + 27*start**2/4)) + y*(25*end**2/2 - 25*start**2/2 + y*(45*end**2/4 - 45*start**2/4))) + 5*end**2/2 - 5*start**2/2 + x*(-3*end**2/2 + 3*start**2/2 + y**2*(15*end**2/4 - 15*start**2/4 + y*(9*end**2/4 - 9*start**2/4))) + y**2*(-25*end**2/4 + 25*start**2/4 + y*(-15*end**2/4 + 15*start**2/4))) + c*(c*(c*(6*end**5/5 - 6*start**5/5 + x*(-3*end**5/2 + 3*start**5/2 + x*(9*end**5/20 - 9*start**5/20))) + d*(9*end**4/2 - 9*start**4/2 + x*(-45*end**4/8 + 45*start**4/8 + x*(27*end**4/16 - 27*start**4/16))) - 5*end**4/2 + 5*start**4/2 + x*(25*end**4/8 - 25*start**4/8 + x*(-15*end**4/16 + 15*start**4/16 + y*(-27*end**4/16 + 27*start**4/16)) + y*(45*end**4/8 - 45*start**4/8)) + y*(-9*end**4/2 + 9*start**4/2)) + d*(d*(6*end**3 - 6*start**3 + x*(-15*end**3/2 + 15*start**3/2 + x*(9*end**3/4 - 9*start**3/4))) - 20*end**3/3 + 20*start**3/3 + x*(25*end**3/3 - 25*start**3/3 + x*(-5*end**3/2 + 5*start**3/2 + y*(-9*end**3/2 + 9*start**3/2)) + y*(15*end**3 - 15*start**3)) + y*(-12*end**3 + 12*start**3)) + x*(x*y*(5*end**3/2 - 5*start**3/2 + y*(9*end**3/4 - 9*start**3/4)) + y*(-25*end**3/3 + 25*start**3/3 + y*(-15*end**3/2 + 15*start**3/2))) + y*(20*end**3/3 - 20*start**3/3 + y*(6*end**3 - 6*start**3))) + d*(d*(d*(3*end**2 - 3*start**2 + x*(-15*end**2/4 + 15*start**2/4 + x*(9*end**2/8 - 9*start**2/8))) - 5*end**2 + 5*start**2 + x*(25*end**2/4 - 25*start**2/4 + x*(-15*end**2/8 + 15*start**2/8 + y*(-27*end**2/8 + 27*start**2/8)) + y*(45*end**2/4 - 45*start**2/4)) + y*(-9*end**2 + 9*start**2)) + x*(x*y*(15*end**2/4 - 15*start**2/4 + y*(27*end**2/8 - 27*start**2/8)) + y*(-25*end**2/2 + 25*start**2/2 + y*(-45*end**2/4 + 45*start**2/4))) + y*(10*end**2 - 10*start**2 + y*(9*end**2 - 9*start**2))) + 2*end**2 - 2*start**2 + x*(-5*end**2/2 + 5*start**2/2 + x*(3*end**2/4 - 3*start**2/4 + y**2*(-15*end**2/8 + 15*start**2/8 + y*(-9*end**2/8 + 9*start**2/8))) + y**2*(25*end**2/4 - 25*start**2/4 + y*(15*end**2/4 - 15*start**2/4))) + y**2*(-5*end**2 + 5*start**2 + y*(-3*end**2 + 3*start**2))) + b*(b*(b*(c*(c*(c*(3*end**4/16 - 3*start**4/16) + d*(3*end**3/4 - 3*start**3/4) - 5*end**3/12 + 5*start**3/12 + y*(-3*end**3/4 + 3*start**3/4)) + d*(d*(9*end**2/8 - 9*start**2/8) - 5*end**2/4 + 5*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)) + y*(5*end**2/4 - 5*start**2/4 + y*(9*end**2/8 - 9*start**2/8))) + d*(d*(d*(3*end/4 - 3*start/4) - 5*end/4 + 5*start/4 + y*(-9*end/4 + 9*start/4)) + y*(5*end/2 - 5*start/2 + y*(9*end/4 - 9*start/4))) + end/2 - start/2 + y**2*(-5*end/4 + 5*start/4 + y*(-3*end/4 + 3*start/4))) + c*(c*(c*(15*end**4/16 - 15*start**4/16 + x*(-9*end**4/16 + 9*start**4/16)) + d*(15*end**3/4 - 15*start**3/4 + x*(-9*end**3/4 + 9*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(5*end**3/4 - 5*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(-15*end**3/4 + 15*start**3/4)) + d*(d*(45*end**2/8 - 45*start**2/8 + x*(-27*end**2/8 + 27*start**2/8)) - 25*end**2/4 + 25*start**2/4 + x*(15*end**2/4 - 15*start**2/4 + y*(27*end**2/4 - 27*start**2/4)) + y*(-45*end**2/4 + 45*start**2/4)) + x*y*(-15*end**2/4 + 15*start**2/4 + y*(-27*end**2/8 + 27*start**2/8)) + y*(25*end**2/4 - 25*start**2/4 + y*(45*end**2/8 - 45*start**2/8))) + d*(d*(d*(15*end/4 - 15*start/4 + x*(-9*end/4 + 9*start/4)) - 25*end/4 + 25*start/4 + x*(15*end/4 - 15*start/4 + y*(27*end/4 - 27*start/4)) + y*(-45*end/4 + 45*start/4)) + x*y*(-15*end/2 + 15*start/2 + y*(-27*end/4 + 27*start/4)) + y*(25*end/2 - 25*start/2 + y*(45*end/4 - 45*start/4))) + 5*end/2 - 5*start/2 + x*(-3*end/2 + 3*start/2 + y**2*(15*end/4 - 15*start/4 + y*(9*end/4 - 9*start/4))) + y**2*(-25*end/4 + 25*start/4 + y*(-15*end/4 + 15*start/4))) + c*(c*(c*(3*end**4/2 - 3*start**4/2 + x*(-15*end**4/8 + 15*start**4/8 + x*(9*end**4/16 - 9*start**4/16))) + d*(6*end**3 - 6*start**3 + x*(-15*end**3/2 + 15*start**3/2 + x*(9*end**3/4 - 9*start**3/4))) - 10*end**3/3 + 10*start**3/3 + x*(25*end**3/6 - 25*start**3/6 + x*(-5*end**3/4 + 5*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + y*(15*end**3/2 - 15*start**3/2)) + y*(-6*end**3 + 6*start**3)) + d*(d*(9*end**2 - 9*start**2 + x*(-45*end**2/4 + 45*start**2/4 + x*(27*end**2/8 - 27*start**2/8))) - 10*end**2 + 10*start**2 + x*(25*end**2/2 - 25*start**2/2 + x*(-15*end**2/4 + 15*start**2/4 + y*(-27*end**2/4 + 27*start**2/4)) + y*(45*end**2/2 - 45*start**2/2)) + y*(-18*end**2 + 18*start**2)) + x*(x*y*(15*end**2/4 - 15*start**2/4 + y*(27*end**2/8 - 27*start**2/8)) + y*(-25*end**2/2 + 25*start**2/2 + y*(-45*end**2/4 + 45*start**2/4))) + y*(10*end**2 - 10*start**2 + y*(9*end**2 - 9*start**2))) + d*(d*(d*(6*end - 6*start + x*(-15*end/2 + 15*start/2 + x*(9*end/4 - 9*start/4))) - 10*end + 10*start + x*(25*end/2 - 25*start/2 + x*(-15*end/4 + 15*start/4 + y*(-27*end/4 + 27*start/4)) + y*(45*end/2 - 45*start/2)) + y*(-18*end + 18*start)) + x*(x*y*(15*end/2 - 15*start/2 + y*(27*end/4 - 27*start/4)) + y*(-25*end + 25*start + y*(-45*end/2 + 45*start/2))) + y*(20*end - 20*start + y*(18*end - 18*start))) + 4*end - 4*start + x*(-5*end + 5*start + x*(3*end/2 - 3*start/2 + y**2*(-15*end/4 + 15*start/4 + y*(-9*end/4 + 9*start/4))) + y**2*(25*end/2 - 25*start/2 + y*(15*end/2 - 15*start/2))) + y**2*(-10*end + 10*start + y*(-6*end + 6*start))) + c*(c*(c*(3*end**4/4 - 3*start**4/4 + x*(-3*end**4/2 + 3*start**4/2 + x*(15*end**4/16 - 15*start**4/16 + x*(-3*end**4/16 + 3*start**4/16)))) + d*(3*end**3 - 3*start**3 + x*(-6*end**3 + 6*start**3 + x*(15*end**3/4 - 15*start**3/4 + x*(-3*end**3/4 + 3*start**3/4)))) - 5*end**3/3 + 5*start**3/3 + x*(10*end**3/3 - 10*start**3/3 + x*(-25*end**3/12 + 25*start**3/12 + x*(5*end**3/12 - 5*start**3/12 + y*(3*end**3/4 - 3*start**3/4)) + y*(-15*end**3/4 + 15*start**3/4)) + y*(6*end**3 - 6*start**3)) + y*(-3*end**3 + 3*start**3)) + d*(d*(9*end**2/2 - 9*start**2/2 + x*(-9*end**2 + 9*start**2 + x*(45*end**2/8 - 45*start**2/8 + x*(-9*end**2/8 + 9*start**2/8)))) - 5*end**2 + 5*start**2 + x*(10*end**2 - 10*start**2 + x*(-25*end**2/4 + 25*start**2/4 + x*(5*end**2/4 - 5*start**2/4 + y*(9*end**2/4 - 9*start**2/4)) + y*(-45*end**2/4 + 45*start**2/4)) + y*(18*end**2 - 18*start**2)) + y*(-9*end**2 + 9*start**2)) + x*(x*(x*y*(-5*end**2/4 + 5*start**2/4 + y*(-9*end**2/8 + 9*start**2/8)) + y*(25*end**2/4 - 25*start**2/4 + y*(45*end**2/8 - 45*start**2/8))) + y*(-10*end**2 + 10*start**2 + y*(-9*end**2 + 9*start**2))) + y*(5*end**2 - 5*start**2 + y*(9*end**2/2 - 9*start**2/2))) + d*(d*(d*(3*end - 3*start + x*(-6*end + 6*start + x*(15*end/4 - 15*start/4 + x*(-3*end/4 + 3*start/4)))) - 5*end + 5*start + x*(10*end - 10*start + x*(-25*end/4 + 25*start/4 + x*(5*end/4 - 5*start/4 + y*(9*end/4 - 9*start/4)) + y*(-45*end/4 + 45*start/4)) + y*(18*end - 18*start)) + y*(-9*end + 9*start)) + x*(x*(x*y*(-5*end/2 + 5*start/2 + y*(-9*end/4 + 9*start/4)) + y*(25*end/2 - 25*start/2 + y*(45*end/4 - 45*start/4))) + y*(-20*end + 20*start + y*(-18*end + 18*start))) + y*(10*end - 10*start + y*(9*end - 9*start))) + 2*end - 2*start + x*(-4*end + 4*start + x*(5*end/2 - 5*start/2 + x*(-end/2 + start/2 + y**2*(5*end/4 - 5*start/4 + y*(3*end/4 - 3*start/4))) + y**2*(-25*end/4 + 25*start/4 + y*(-15*end/4 + 15*start/4))) + y**2*(10*end - 10*start + y*(6*end - 6*start))) + y**2*(-5*end + 5*start + y*(-3*end + 3*start))



    return output


def int04(a, b, c, d, x, y, start, end):
    output = a*(a*(a*(c*(c*(c*(-end**7/28 + start**7/28) + d*(-end**6/8 + start**6/8) + 5*end**6/24 - 5*start**6/24 + y*(end**6/8 - start**6/8)) + d*(d*(-3*end**5/20 + 3*start**5/20) + end**5/2 - start**5/2 + y*(3*end**5/10 - 3*start**5/10)) - 2*end**5/5 + 2*start**5/5 + y*(-end**5/2 + start**5/2 + y*(-3*end**5/20 + 3*start**5/20))) + d*(d*(d*(-end**4/16 + start**4/16) + 5*end**4/16 - 5*start**4/16 + y*(3*end**4/16 - 3*start**4/16)) - end**4/2 + start**4/2 + y*(-5*end**4/8 + 5*start**4/8 + y*(-3*end**4/16 + 3*start**4/16))) + end**4/4 - start**4/4 + y*(end**4/2 - start**4/2 + y*(5*end**4/16 - 5*start**4/16 + y*(end**4/16 - start**4/16)))) + b*(c*(c*(c*(-end**6/8 + start**6/8) + d*(-9*end**5/20 + 9*start**5/20) + 3*end**5/4 - 3*start**5/4 + y*(9*end**5/20 - 9*start**5/20)) + d*(d*(-9*end**4/16 + 9*start**4/16) + 15*end**4/8 - 15*start**4/8 + y*(9*end**4/8 - 9*start**4/8)) - 3*end**4/2 + 3*start**4/2 + y*(-15*end**4/8 + 15*start**4/8 + y*(-9*end**4/16 + 9*start**4/16))) + d*(d*(d*(-end**3/4 + start**3/4) + 5*end**3/4 - 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4)) - 2*end**3 + 2*start**3 + y*(-5*end**3/2 + 5*start**3/2 + y*(-3*end**3/4 + 3*start**3/4))) + end**3 - start**3 + y*(2*end**3 - 2*start**3 + y*(5*end**3/4 - 5*start**3/4 + y*(end**3/4 - start**3/4)))) + c*(c*(c*(-5*end**6/24 + 5*start**6/24 + x*(end**6/8 - start**6/8)) + d*(-3*end**5/4 + 3*start**5/4 + x*(9*end**5/20 - 9*start**5/20)) + 5*end**5/4 - 5*start**5/4 + x*(-3*end**5/4 + 3*start**5/4 + y*(-9*end**5/20 + 9*start**5/20)) + y*(3*end**5/4 - 3*start**5/4)) + d*(d*(-15*end**4/16 + 15*start**4/16 + x*(9*end**4/16 - 9*start**4/16)) + 25*end**4/8 - 25*start**4/8 + x*(-15*end**4/8 + 15*start**4/8 + y*(-9*end**4/8 + 9*start**4/8)) + y*(15*end**4/8 - 15*start**4/8)) - 5*end**4/2 + 5*start**4/2 + x*(3*end**4/2 - 3*start**4/2 + y*(15*end**4/8 - 15*start**4/8 + y*(9*end**4/16 - 9*start**4/16))) + y*(-25*end**4/8 + 25*start**4/8 + y*(-15*end**4/16 + 15*start**4/16))) + d*(d*(d*(-5*end**3/12 + 5*start**3/12 + x*(end**3/4 - start**3/4)) + 25*end**3/12 - 25*start**3/12 + x*(-5*end**3/4 + 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)) + y*(5*end**3/4 - 5*start**3/4)) - 10*end**3/3 + 10*start**3/3 + x*(2*end**3 - 2*start**3 + y*(5*end**3/2 - 5*start**3/2 + y*(3*end**3/4 - 3*start**3/4))) + y*(-25*end**3/6 + 25*start**3/6 + y*(-5*end**3/4 + 5*start**3/4))) + 5*end**3/3 - 5*start**3/3 + x*(-end**3 + start**3 + y*(-2*end**3 + 2*start**3 + y*(-5*end**3/4 + 5*start**3/4 + y*(-end**3/4 + start**3/4)))) + y*(10*end**3/3 - 10*start**3/3 + y*(25*end**3/12 - 25*start**3/12 + y*(5*end**3/12 - 5*start**3/12)))) + b*(b*(c*(c*(c*(-3*end**5/20 + 3*start**5/20) + d*(-9*end**4/16 + 9*start**4/16) + 15*end**4/16 - 15*start**4/16 + y*(9*end**4/16 - 9*start**4/16)) + d*(d*(-3*end**3/4 + 3*start**3/4) + 5*end**3/2 - 5*start**3/2 + y*(3*end**3/2 - 3*start**3/2)) - 2*end**3 + 2*start**3 + y*(-5*end**3/2 + 5*start**3/2 + y*(-3*end**3/4 + 3*start**3/4))) + d*(d*(d*(-3*end**2/8 + 3*start**2/8) + 15*end**2/8 - 15*start**2/8 + y*(9*end**2/8 - 9*start**2/8)) - 3*end**2 + 3*start**2 + y*(-15*end**2/4 + 15*start**2/4 + y*(-9*end**2/8 + 9*start**2/8))) + 3*end**2/2 - 3*start**2/2 + y*(3*end**2 - 3*start**2 + y*(15*end**2/8 - 15*start**2/8 + y*(3*end**2/8 - 3*start**2/8)))) + c*(c*(c*(-end**5/2 + start**5/2 + x*(3*end**5/10 - 3*start**5/10)) + d*(-15*end**4/8 + 15*start**4/8 + x*(9*end**4/8 - 9*start**4/8)) + 25*end**4/8 - 25*start**4/8 + x*(-15*end**4/8 + 15*start**4/8 + y*(-9*end**4/8 + 9*start**4/8)) + y*(15*end**4/8 - 15*start**4/8)) + d*(d*(-5*end**3/2 + 5*start**3/2 + x*(3*end**3/2 - 3*start**3/2)) + 25*end**3/3 - 25*start**3/3 + x*(-5*end**3 + 5*start**3 + y*(-3*end**3 + 3*start**3)) + y*(5*end**3 - 5*start**3)) - 20*end**3/3 + 20*start**3/3 + x*(4*end**3 - 4*start**3 + y*(5*end**3 - 5*start**3 + y*(3*end**3/2 - 3*start**3/2))) + y*(-25*end**3/3 + 25*start**3/3 + y*(-5*end**3/2 + 5*start**3/2))) + d*(d*(d*(-5*end**2/4 + 5*start**2/4 + x*(3*end**2/4 - 3*start**2/4)) + 25*end**2/4 - 25*start**2/4 + x*(-15*end**2/4 + 15*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)) + y*(15*end**2/4 - 15*start**2/4)) - 10*end**2 + 10*start**2 + x*(6*end**2 - 6*start**2 + y*(15*end**2/2 - 15*start**2/2 + y*(9*end**2/4 - 9*start**2/4))) + y*(-25*end**2/2 + 25*start**2/2 + y*(-15*end**2/4 + 15*start**2/4))) + 5*end**2 - 5*start**2 + x*(-3*end**2 + 3*start**2 + y*(-6*end**2 + 6*start**2 + y*(-15*end**2/4 + 15*start**2/4 + y*(-3*end**2/4 + 3*start**2/4)))) + y*(10*end**2 - 10*start**2 + y*(25*end**2/4 - 25*start**2/4 + y*(5*end**2/4 - 5*start**2/4)))) + c*(c*(c*(-2*end**5/5 + 2*start**5/5 + x*(end**5/2 - start**5/2 + x*(-3*end**5/20 + 3*start**5/20))) + d*(-3*end**4/2 + 3*start**4/2 + x*(15*end**4/8 - 15*start**4/8 + x*(-9*end**4/16 + 9*start**4/16))) + 5*end**4/2 - 5*start**4/2 + x*(-25*end**4/8 + 25*start**4/8 + x*(15*end**4/16 - 15*start**4/16 + y*(9*end**4/16 - 9*start**4/16)) + y*(-15*end**4/8 + 15*start**4/8)) + y*(3*end**4/2 - 3*start**4/2)) + d*(d*(-2*end**3 + 2*start**3 + x*(5*end**3/2 - 5*start**3/2 + x*(-3*end**3/4 + 3*start**3/4))) + 20*end**3/3 - 20*start**3/3 + x*(-25*end**3/3 + 25*start**3/3 + x*(5*end**3/2 - 5*start**3/2 + y*(3*end**3/2 - 3*start**3/2)) + y*(-5*end**3 + 5*start**3)) + y*(4*end**3 - 4*start**3)) - 16*end**3/3 + 16*start**3/3 + x*(20*end**3/3 - 20*start**3/3 + x*(-2*end**3 + 2*start**3 + y*(-5*end**3/2 + 5*start**3/2 + y*(-3*end**3/4 + 3*start**3/4))) + y*(25*end**3/3 - 25*start**3/3 + y*(5*end**3/2 - 5*start**3/2))) + y*(-20*end**3/3 + 20*start**3/3 + y*(-2*end**3 + 2*start**3))) + d*(d*(d*(-end**2 + start**2 + x*(5*end**2/4 - 5*start**2/4 + x*(-3*end**2/8 + 3*start**2/8))) + 5*end**2 - 5*start**2 + x*(-25*end**2/4 + 25*start**2/4 + x*(15*end**2/8 - 15*start**2/8 + y*(9*end**2/8 - 9*start**2/8)) + y*(-15*end**2/4 + 15*start**2/4)) + y*(3*end**2 - 3*start**2)) - 8*end**2 + 8*start**2 + x*(10*end**2 - 10*start**2 + x*(-3*end**2 + 3*start**2 + y*(-15*end**2/4 + 15*start**2/4 + y*(-9*end**2/8 + 9*start**2/8))) + y*(25*end**2/2 - 25*start**2/2 + y*(15*end**2/4 - 15*start**2/4))) + y*(-10*end**2 + 10*start**2 + y*(-3*end**2 + 3*start**2))) + 4*end**2 - 4*start**2 + x*(-5*end**2 + 5*start**2 + x*(3*end**2/2 - 3*start**2/2 + y*(3*end**2 - 3*start**2 + y*(15*end**2/8 - 15*start**2/8 + y*(3*end**2/8 - 3*start**2/8)))) + y*(-10*end**2 + 10*start**2 + y*(-25*end**2/4 + 25*start**2/4 + y*(-5*end**2/4 + 5*start**2/4)))) + y*(8*end**2 - 8*start**2 + y*(5*end**2 - 5*start**2 + y*(end**2 - start**2)))) + b*(b*(b*(c*(c*(c*(-end**4/16 + start**4/16) + d*(-end**3/4 + start**3/4) + 5*end**3/12 - 5*start**3/12 + y*(end**3/4 - start**3/4)) + d*(d*(-3*end**2/8 + 3*start**2/8) + 5*end**2/4 - 5*start**2/4 + y*(3*end**2/4 - 3*start**2/4)) - end**2 + start**2 + y*(-5*end**2/4 + 5*start**2/4 + y*(-3*end**2/8 + 3*start**2/8))) + d*(d*(d*(-end/4 + start/4) + 5*end/4 - 5*start/4 + y*(3*end/4 - 3*start/4)) - 2*end + 2*start + y*(-5*end/2 + 5*start/2 + y*(-3*end/4 + 3*start/4))) + end - start + y*(2*end - 2*start + y*(5*end/4 - 5*start/4 + y*(end/4 - start/4)))) + c*(c*(c*(-5*end**4/16 + 5*start**4/16 + x*(3*end**4/16 - 3*start**4/16)) + d*(-5*end**3/4 + 5*start**3/4 + x*(3*end**3/4 - 3*start**3/4)) + 25*end**3/12 - 25*start**3/12 + x*(-5*end**3/4 + 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)) + y*(5*end**3/4 - 5*start**3/4)) + d*(d*(-15*end**2/8 + 15*start**2/8 + x*(9*end**2/8 - 9*start**2/8)) + 25*end**2/4 - 25*start**2/4 + x*(-15*end**2/4 + 15*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)) + y*(15*end**2/4 - 15*start**2/4)) - 5*end**2 + 5*start**2 + x*(3*end**2 - 3*start**2 + y*(15*end**2/4 - 15*start**2/4 + y*(9*end**2/8 - 9*start**2/8))) + y*(-25*end**2/4 + 25*start**2/4 + y*(-15*end**2/8 + 15*start**2/8))) + d*(d*(d*(-5*end/4 + 5*start/4 + x*(3*end/4 - 3*start/4)) + 25*end/4 - 25*start/4 + x*(-15*end/4 + 15*start/4 + y*(-9*end/4 + 9*start/4)) + y*(15*end/4 - 15*start/4)) - 10*end + 10*start + x*(6*end - 6*start + y*(15*end/2 - 15*start/2 + y*(9*end/4 - 9*start/4))) + y*(-25*end/2 + 25*start/2 + y*(-15*end/4 + 15*start/4))) + 5*end - 5*start + x*(-3*end + 3*start + y*(-6*end + 6*start + y*(-15*end/4 + 15*start/4 + y*(-3*end/4 + 3*start/4)))) + y*(10*end - 10*start + y*(25*end/4 - 25*start/4 + y*(5*end/4 - 5*start/4)))) + c*(c*(c*(-end**4/2 + start**4/2 + x*(5*end**4/8 - 5*start**4/8 + x*(-3*end**4/16 + 3*start**4/16))) + d*(-2*end**3 + 2*start**3 + x*(5*end**3/2 - 5*start**3/2 + x*(-3*end**3/4 + 3*start**3/4))) + 10*end**3/3 - 10*start**3/3 + x*(-25*end**3/6 + 25*start**3/6 + x*(5*end**3/4 - 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4)) + y*(-5*end**3/2 + 5*start**3/2)) + y*(2*end**3 - 2*start**3)) + d*(d*(-3*end**2 + 3*start**2 + x*(15*end**2/4 - 15*start**2/4 + x*(-9*end**2/8 + 9*start**2/8))) + 10*end**2 - 10*start**2 + x*(-25*end**2/2 + 25*start**2/2 + x*(15*end**2/4 - 15*start**2/4 + y*(9*end**2/4 - 9*start**2/4)) + y*(-15*end**2/2 + 15*start**2/2)) + y*(6*end**2 - 6*start**2)) - 8*end**2 + 8*start**2 + x*(10*end**2 - 10*start**2 + x*(-3*end**2 + 3*start**2 + y*(-15*end**2/4 + 15*start**2/4 + y*(-9*end**2/8 + 9*start**2/8))) + y*(25*end**2/2 - 25*start**2/2 + y*(15*end**2/4 - 15*start**2/4))) + y*(-10*end**2 + 10*start**2 + y*(-3*end**2 + 3*start**2))) + d*(d*(d*(-2*end + 2*start + x*(5*end/2 - 5*start/2 + x*(-3*end/4 + 3*start/4))) + 10*end - 10*start + x*(-25*end/2 + 25*start/2 + x*(15*end/4 - 15*start/4 + y*(9*end/4 - 9*start/4)) + y*(-15*end/2 + 15*start/2)) + y*(6*end - 6*start)) - 16*end + 16*start + x*(20*end - 20*start + x*(-6*end + 6*start + y*(-15*end/2 + 15*start/2 + y*(-9*end/4 + 9*start/4))) + y*(25*end - 25*start + y*(15*end/2 - 15*start/2))) + y*(-20*end + 20*start + y*(-6*end + 6*start))) + 8*end - 8*start + x*(-10*end + 10*start + x*(3*end - 3*start + y*(6*end - 6*start + y*(15*end/4 - 15*start/4 + y*(3*end/4 - 3*start/4)))) + y*(-20*end + 20*start + y*(-25*end/2 + 25*start/2 + y*(-5*end/2 + 5*start/2)))) + y*(16*end - 16*start + y*(10*end - 10*start + y*(2*end - 2*start)))) + c*(c*(c*(-end**4/4 + start**4/4 + x*(end**4/2 - start**4/2 + x*(-5*end**4/16 + 5*start**4/16 + x*(end**4/16 - start**4/16)))) + d*(-end**3 + start**3 + x*(2*end**3 - 2*start**3 + x*(-5*end**3/4 + 5*start**3/4 + x*(end**3/4 - start**3/4)))) + 5*end**3/3 - 5*start**3/3 + x*(-10*end**3/3 + 10*start**3/3 + x*(25*end**3/12 - 25*start**3/12 + x*(-5*end**3/12 + 5*start**3/12 + y*(-end**3/4 + start**3/4)) + y*(5*end**3/4 - 5*start**3/4)) + y*(-2*end**3 + 2*start**3)) + y*(end**3 - start**3)) + d*(d*(-3*end**2/2 + 3*start**2/2 + x*(3*end**2 - 3*start**2 + x*(-15*end**2/8 + 15*start**2/8 + x*(3*end**2/8 - 3*start**2/8)))) + 5*end**2 - 5*start**2 + x*(-10*end**2 + 10*start**2 + x*(25*end**2/4 - 25*start**2/4 + x*(-5*end**2/4 + 5*start**2/4 + y*(-3*end**2/4 + 3*start**2/4)) + y*(15*end**2/4 - 15*start**2/4)) + y*(-6*end**2 + 6*start**2)) + y*(3*end**2 - 3*start**2)) - 4*end**2 + 4*start**2 + x*(8*end**2 - 8*start**2 + x*(-5*end**2 + 5*start**2 + x*(end**2 - start**2 + y*(5*end**2/4 - 5*start**2/4 + y*(3*end**2/8 - 3*start**2/8))) + y*(-25*end**2/4 + 25*start**2/4 + y*(-15*end**2/8 + 15*start**2/8))) + y*(10*end**2 - 10*start**2 + y*(3*end**2 - 3*start**2))) + y*(-5*end**2 + 5*start**2 + y*(-3*end**2/2 + 3*start**2/2))) + d*(d*(d*(-end + start + x*(2*end - 2*start + x*(-5*end/4 + 5*start/4 + x*(end/4 - start/4)))) + 5*end - 5*start + x*(-10*end + 10*start + x*(25*end/4 - 25*start/4 + x*(-5*end/4 + 5*start/4 + y*(-3*end/4 + 3*start/4)) + y*(15*end/4 - 15*start/4)) + y*(-6*end + 6*start)) + y*(3*end - 3*start)) - 8*end + 8*start + x*(16*end - 16*start + x*(-10*end + 10*start + x*(2*end - 2*start + y*(5*end/2 - 5*start/2 + y*(3*end/4 - 3*start/4))) + y*(-25*end/2 + 25*start/2 + y*(-15*end/4 + 15*start/4))) + y*(20*end - 20*start + y*(6*end - 6*start))) + y*(-10*end + 10*start + y*(-3*end + 3*start))) + 4*end - 4*start + x*(-8*end + 8*start + x*(5*end - 5*start + x*(-end + start + y*(-2*end + 2*start + y*(-5*end/4 + 5*start/4 + y*(-end/4 + start/4)))) + y*(10*end - 10*start + y*(25*end/4 - 25*start/4 + y*(5*end/4 - 5*start/4)))) + y*(-16*end + 16*start + y*(-10*end + 10*start + y*(-2*end + 2*start)))) + y*(8*end - 8*start + y*(5*end - 5*start + y*(end - start)))



    return output


def int05(a, b, c, d, x, y, start, end):
    output = a*(a*(a*(c*(c*(c*(-3*end**7/28 + 3*start**7/28) + d*(-3*end**6/8 + 3*start**6/8) - 5*end**6/8 + 5*start**6/8 + y*(3*end**6/8 - 3*start**6/8)) + d*(d*(-9*end**5/20 + 9*start**5/20) - 3*end**5/2 + 3*start**5/2 + y*(9*end**5/10 - 9*start**5/10)) - 6*end**5/5 + 6*start**5/5 + y*(3*end**5/2 - 3*start**5/2 + y*(-9*end**5/20 + 9*start**5/20))) + d*(d*(d*(-3*end**4/16 + 3*start**4/16) - 15*end**4/16 + 15*start**4/16 + y*(9*end**4/16 - 9*start**4/16)) - 3*end**4/2 + 3*start**4/2 + y*(15*end**4/8 - 15*start**4/8 + y*(-9*end**4/16 + 9*start**4/16))) - 3*end**4/4 + 3*start**4/4 + y*(3*end**4/2 - 3*start**4/2 + y*(-15*end**4/16 + 15*start**4/16 + y*(3*end**4/16 - 3*start**4/16)))) + b*(c*(c*(c*(-3*end**6/8 + 3*start**6/8) + d*(-27*end**5/20 + 27*start**5/20) - 9*end**5/4 + 9*start**5/4 + y*(27*end**5/20 - 27*start**5/20)) + d*(d*(-27*end**4/16 + 27*start**4/16) - 45*end**4/8 + 45*start**4/8 + y*(27*end**4/8 - 27*start**4/8)) - 9*end**4/2 + 9*start**4/2 + y*(45*end**4/8 - 45*start**4/8 + y*(-27*end**4/16 + 27*start**4/16))) + d*(d*(d*(-3*end**3/4 + 3*start**3/4) - 15*end**3/4 + 15*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) - 6*end**3 + 6*start**3 + y*(15*end**3/2 - 15*start**3/2 + y*(-9*end**3/4 + 9*start**3/4))) - 3*end**3 + 3*start**3 + y*(6*end**3 - 6*start**3 + y*(-15*end**3/4 + 15*start**3/4 + y*(3*end**3/4 - 3*start**3/4)))) + c*(c*(c*(-5*end**6/24 + 5*start**6/24 + x*(3*end**6/8 - 3*start**6/8)) + d*(-3*end**5/4 + 3*start**5/4 + x*(27*end**5/20 - 27*start**5/20)) - 5*end**5/4 + 5*start**5/4 + x*(9*end**5/4 - 9*start**5/4 + y*(-27*end**5/20 + 27*start**5/20)) + y*(3*end**5/4 - 3*start**5/4)) + d*(d*(-15*end**4/16 + 15*start**4/16 + x*(27*end**4/16 - 27*start**4/16)) - 25*end**4/8 + 25*start**4/8 + x*(45*end**4/8 - 45*start**4/8 + y*(-27*end**4/8 + 27*start**4/8)) + y*(15*end**4/8 - 15*start**4/8)) - 5*end**4/2 + 5*start**4/2 + x*(9*end**4/2 - 9*start**4/2 + y*(-45*end**4/8 + 45*start**4/8 + y*(27*end**4/16 - 27*start**4/16))) + y*(25*end**4/8 - 25*start**4/8 + y*(-15*end**4/16 + 15*start**4/16))) + d*(d*(d*(-5*end**3/12 + 5*start**3/12 + x*(3*end**3/4 - 3*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(15*end**3/4 - 15*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + y*(5*end**3/4 - 5*start**3/4)) - 10*end**3/3 + 10*start**3/3 + x*(6*end**3 - 6*start**3 + y*(-15*end**3/2 + 15*start**3/2 + y*(9*end**3/4 - 9*start**3/4))) + y*(25*end**3/6 - 25*start**3/6 + y*(-5*end**3/4 + 5*start**3/4))) - 5*end**3/3 + 5*start**3/3 + x*(3*end**3 - 3*start**3 + y*(-6*end**3 + 6*start**3 + y*(15*end**3/4 - 15*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)))) + y*(10*end**3/3 - 10*start**3/3 + y*(-25*end**3/12 + 25*start**3/12 + y*(5*end**3/12 - 5*start**3/12)))) + b*(b*(c*(c*(c*(-9*end**5/20 + 9*start**5/20) + d*(-27*end**4/16 + 27*start**4/16) - 45*end**4/16 + 45*start**4/16 + y*(27*end**4/16 - 27*start**4/16)) + d*(d*(-9*end**3/4 + 9*start**3/4) - 15*end**3/2 + 15*start**3/2 + y*(9*end**3/2 - 9*start**3/2)) - 6*end**3 + 6*start**3 + y*(15*end**3/2 - 15*start**3/2 + y*(-9*end**3/4 + 9*start**3/4))) + d*(d*(d*(-9*end**2/8 + 9*start**2/8) - 45*end**2/8 + 45*start**2/8 + y*(27*end**2/8 - 27*start**2/8)) - 9*end**2 + 9*start**2 + y*(45*end**2/4 - 45*start**2/4 + y*(-27*end**2/8 + 27*start**2/8))) - 9*end**2/2 + 9*start**2/2 + y*(9*end**2 - 9*start**2 + y*(-45*end**2/8 + 45*start**2/8 + y*(9*end**2/8 - 9*start**2/8)))) + c*(c*(c*(-end**5/2 + start**5/2 + x*(9*end**5/10 - 9*start**5/10)) + d*(-15*end**4/8 + 15*start**4/8 + x*(27*end**4/8 - 27*start**4/8)) - 25*end**4/8 + 25*start**4/8 + x*(45*end**4/8 - 45*start**4/8 + y*(-27*end**4/8 + 27*start**4/8)) + y*(15*end**4/8 - 15*start**4/8)) + d*(d*(-5*end**3/2 + 5*start**3/2 + x*(9*end**3/2 - 9*start**3/2)) - 25*end**3/3 + 25*start**3/3 + x*(15*end**3 - 15*start**3 + y*(-9*end**3 + 9*start**3)) + y*(5*end**3 - 5*start**3)) - 20*end**3/3 + 20*start**3/3 + x*(12*end**3 - 12*start**3 + y*(-15*end**3 + 15*start**3 + y*(9*end**3/2 - 9*start**3/2))) + y*(25*end**3/3 - 25*start**3/3 + y*(-5*end**3/2 + 5*start**3/2))) + d*(d*(d*(-5*end**2/4 + 5*start**2/4 + x*(9*end**2/4 - 9*start**2/4)) - 25*end**2/4 + 25*start**2/4 + x*(45*end**2/4 - 45*start**2/4 + y*(-27*end**2/4 + 27*start**2/4)) + y*(15*end**2/4 - 15*start**2/4)) - 10*end**2 + 10*start**2 + x*(18*end**2 - 18*start**2 + y*(-45*end**2/2 + 45*start**2/2 + y*(27*end**2/4 - 27*start**2/4))) + y*(25*end**2/2 - 25*start**2/2 + y*(-15*end**2/4 + 15*start**2/4))) - 5*end**2 + 5*start**2 + x*(9*end**2 - 9*start**2 + y*(-18*end**2 + 18*start**2 + y*(45*end**2/4 - 45*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)))) + y*(10*end**2 - 10*start**2 + y*(-25*end**2/4 + 25*start**2/4 + y*(5*end**2/4 - 5*start**2/4)))) + c*(c*(c*x*(end**5/2 - start**5/2 + x*(-9*end**5/20 + 9*start**5/20)) + d*x*(15*end**4/8 - 15*start**4/8 + x*(-27*end**4/16 + 27*start**4/16)) + x*(25*end**4/8 - 25*start**4/8 + x*(-45*end**4/16 + 45*start**4/16 + y*(27*end**4/16 - 27*start**4/16)) + y*(-15*end**4/8 + 15*start**4/8))) + d*(d*x*(5*end**3/2 - 5*start**3/2 + x*(-9*end**3/4 + 9*start**3/4)) + x*(25*end**3/3 - 25*start**3/3 + x*(-15*end**3/2 + 15*start**3/2 + y*(9*end**3/2 - 9*start**3/2)) + y*(-5*end**3 + 5*start**3))) + x*(20*end**3/3 - 20*start**3/3 + x*(-6*end**3 + 6*start**3 + y*(15*end**3/2 - 15*start**3/2 + y*(-9*end**3/4 + 9*start**3/4))) + y*(-25*end**3/3 + 25*start**3/3 + y*(5*end**3/2 - 5*start**3/2)))) + d*(d*(d*x*(5*end**2/4 - 5*start**2/4 + x*(-9*end**2/8 + 9*start**2/8)) + x*(25*end**2/4 - 25*start**2/4 + x*(-45*end**2/8 + 45*start**2/8 + y*(27*end**2/8 - 27*start**2/8)) + y*(-15*end**2/4 + 15*start**2/4))) + x*(10*end**2 - 10*start**2 + x*(-9*end**2 + 9*start**2 + y*(45*end**2/4 - 45*start**2/4 + y*(-27*end**2/8 + 27*start**2/8))) + y*(-25*end**2/2 + 25*start**2/2 + y*(15*end**2/4 - 15*start**2/4)))) + x*(5*end**2 - 5*start**2 + x*(-9*end**2/2 + 9*start**2/2 + y*(9*end**2 - 9*start**2 + y*(-45*end**2/8 + 45*start**2/8 + y*(9*end**2/8 - 9*start**2/8)))) + y*(-10*end**2 + 10*start**2 + y*(25*end**2/4 - 25*start**2/4 + y*(-5*end**2/4 + 5*start**2/4))))) + b*(b*(b*(c*(c*(c*(-3*end**4/16 + 3*start**4/16) + d*(-3*end**3/4 + 3*start**3/4) - 5*end**3/4 + 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4)) + d*(d*(-9*end**2/8 + 9*start**2/8) - 15*end**2/4 + 15*start**2/4 + y*(9*end**2/4 - 9*start**2/4)) - 3*end**2 + 3*start**2 + y*(15*end**2/4 - 15*start**2/4 + y*(-9*end**2/8 + 9*start**2/8))) + d*(d*(d*(-3*end/4 + 3*start/4) - 15*end/4 + 15*start/4 + y*(9*end/4 - 9*start/4)) - 6*end + 6*start + y*(15*end/2 - 15*start/2 + y*(-9*end/4 + 9*start/4))) - 3*end + 3*start + y*(6*end - 6*start + y*(-15*end/4 + 15*start/4 + y*(3*end/4 - 3*start/4)))) + c*(c*(c*(-5*end**4/16 + 5*start**4/16 + x*(9*end**4/16 - 9*start**4/16)) + d*(-5*end**3/4 + 5*start**3/4 + x*(9*end**3/4 - 9*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(15*end**3/4 - 15*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + y*(5*end**3/4 - 5*start**3/4)) + d*(d*(-15*end**2/8 + 15*start**2/8 + x*(27*end**2/8 - 27*start**2/8)) - 25*end**2/4 + 25*start**2/4 + x*(45*end**2/4 - 45*start**2/4 + y*(-27*end**2/4 + 27*start**2/4)) + y*(15*end**2/4 - 15*start**2/4)) - 5*end**2 + 5*start**2 + x*(9*end**2 - 9*start**2 + y*(-45*end**2/4 + 45*start**2/4 + y*(27*end**2/8 - 27*start**2/8))) + y*(25*end**2/4 - 25*start**2/4 + y*(-15*end**2/8 + 15*start**2/8))) + d*(d*(d*(-5*end/4 + 5*start/4 + x*(9*end/4 - 9*start/4)) - 25*end/4 + 25*start/4 + x*(45*end/4 - 45*start/4 + y*(-27*end/4 + 27*start/4)) + y*(15*end/4 - 15*start/4)) - 10*end + 10*start + x*(18*end - 18*start + y*(-45*end/2 + 45*start/2 + y*(27*end/4 - 27*start/4))) + y*(25*end/2 - 25*start/2 + y*(-15*end/4 + 15*start/4))) - 5*end + 5*start + x*(9*end - 9*start + y*(-18*end + 18*start + y*(45*end/4 - 45*start/4 + y*(-9*end/4 + 9*start/4)))) + y*(10*end - 10*start + y*(-25*end/4 + 25*start/4 + y*(5*end/4 - 5*start/4)))) + c*(c*(c*x*(5*end**4/8 - 5*start**4/8 + x*(-9*end**4/16 + 9*start**4/16)) + d*x*(5*end**3/2 - 5*start**3/2 + x*(-9*end**3/4 + 9*start**3/4)) + x*(25*end**3/6 - 25*start**3/6 + x*(-15*end**3/4 + 15*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(-5*end**3/2 + 5*start**3/2))) + d*(d*x*(15*end**2/4 - 15*start**2/4 + x*(-27*end**2/8 + 27*start**2/8)) + x*(25*end**2/2 - 25*start**2/2 + x*(-45*end**2/4 + 45*start**2/4 + y*(27*end**2/4 - 27*start**2/4)) + y*(-15*end**2/2 + 15*start**2/2))) + x*(10*end**2 - 10*start**2 + x*(-9*end**2 + 9*start**2 + y*(45*end**2/4 - 45*start**2/4 + y*(-27*end**2/8 + 27*start**2/8))) + y*(-25*end**2/2 + 25*start**2/2 + y*(15*end**2/4 - 15*start**2/4)))) + d*(d*(d*x*(5*end/2 - 5*start/2 + x*(-9*end/4 + 9*start/4)) + x*(25*end/2 - 25*start/2 + x*(-45*end/4 + 45*start/4 + y*(27*end/4 - 27*start/4)) + y*(-15*end/2 + 15*start/2))) + x*(20*end - 20*start + x*(-18*end + 18*start + y*(45*end/2 - 45*start/2 + y*(-27*end/4 + 27*start/4))) + y*(-25*end + 25*start + y*(15*end/2 - 15*start/2)))) + x*(10*end - 10*start + x*(-9*end + 9*start + y*(18*end - 18*start + y*(-45*end/4 + 45*start/4 + y*(9*end/4 - 9*start/4)))) + y*(-20*end + 20*start + y*(25*end/2 - 25*start/2 + y*(-5*end/2 + 5*start/2))))) + c*(c*(c*(end**4/8 - start**4/8 + x**2*(-5*end**4/16 + 5*start**4/16 + x*(3*end**4/16 - 3*start**4/16))) + d*(end**3/2 - start**3/2 + x**2*(-5*end**3/4 + 5*start**3/4 + x*(3*end**3/4 - 3*start**3/4))) + 5*end**3/6 - 5*start**3/6 + x**2*(-25*end**3/12 + 25*start**3/12 + x*(5*end**3/4 - 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)) + y*(5*end**3/4 - 5*start**3/4)) + y*(-end**3/2 + start**3/2)) + d*(d*(3*end**2/4 - 3*start**2/4 + x**2*(-15*end**2/8 + 15*start**2/8 + x*(9*end**2/8 - 9*start**2/8))) + 5*end**2/2 - 5*start**2/2 + x**2*(-25*end**2/4 + 25*start**2/4 + x*(15*end**2/4 - 15*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)) + y*(15*end**2/4 - 15*start**2/4)) + y*(-3*end**2/2 + 3*start**2/2)) + 2*end**2 - 2*start**2 + x**2*(-5*end**2 + 5*start**2 + x*(3*end**2 - 3*start**2 + y*(-15*end**2/4 + 15*start**2/4 + y*(9*end**2/8 - 9*start**2/8))) + y*(25*end**2/4 - 25*start**2/4 + y*(-15*end**2/8 + 15*start**2/8))) + y*(-5*end**2/2 + 5*start**2/2 + y*(3*end**2/4 - 3*start**2/4))) + d*(d*(d*(end/2 - start/2 + x**2*(-5*end/4 + 5*start/4 + x*(3*end/4 - 3*start/4))) + 5*end/2 - 5*start/2 + x**2*(-25*end/4 + 25*start/4 + x*(15*end/4 - 15*start/4 + y*(-9*end/4 + 9*start/4)) + y*(15*end/4 - 15*start/4)) + y*(-3*end/2 + 3*start/2)) + 4*end - 4*start + x**2*(-10*end + 10*start + x*(6*end - 6*start + y*(-15*end/2 + 15*start/2 + y*(9*end/4 - 9*start/4))) + y*(25*end/2 - 25*start/2 + y*(-15*end/4 + 15*start/4))) + y*(-5*end + 5*start + y*(3*end/2 - 3*start/2))) + 2*end - 2*start + x**2*(-5*end + 5*start + x*(3*end - 3*start + y*(-6*end + 6*start + y*(15*end/4 - 15*start/4 + y*(-3*end/4 + 3*start/4)))) + y*(10*end - 10*start + y*(-25*end/4 + 25*start/4 + y*(5*end/4 - 5*start/4)))) + y*(-4*end + 4*start + y*(5*end/2 - 5*start/2 + y*(-end/2 + start/2)))



    return output


def int06(a, b, c, d, x, y, start, end):
    output = a*(a*(a*(c*(c*(c*(9*end**7/28 - 9*start**7/28) + d*(9*end**6/8 - 9*start**6/8) + 5*end**6/8 - 5*start**6/8 + y*(-9*end**6/8 + 9*start**6/8)) + d*(d*(27*end**5/20 - 27*start**5/20) + 3*end**5/2 - 3*start**5/2 + y*(-27*end**5/10 + 27*start**5/10)) + y*(-3*end**5/2 + 3*start**5/2 + y*(27*end**5/20 - 27*start**5/20))) + d*(d*(d*(9*end**4/16 - 9*start**4/16) + 15*end**4/16 - 15*start**4/16 + y*(-27*end**4/16 + 27*start**4/16)) + y*(-15*end**4/8 + 15*start**4/8 + y*(27*end**4/16 - 27*start**4/16))) - 3*end**4/8 + 3*start**4/8 + y**2*(15*end**4/16 - 15*start**4/16 + y*(-9*end**4/16 + 9*start**4/16))) + b*(c*(c*(c*(9*end**6/8 - 9*start**6/8) + d*(81*end**5/20 - 81*start**5/20) + 9*end**5/4 - 9*start**5/4 + y*(-81*end**5/20 + 81*start**5/20)) + d*(d*(81*end**4/16 - 81*start**4/16) + 45*end**4/8 - 45*start**4/8 + y*(-81*end**4/8 + 81*start**4/8)) + y*(-45*end**4/8 + 45*start**4/8 + y*(81*end**4/16 - 81*start**4/16))) + d*(d*(d*(9*end**3/4 - 9*start**3/4) + 15*end**3/4 - 15*start**3/4 + y*(-27*end**3/4 + 27*start**3/4)) + y*(-15*end**3/2 + 15*start**3/2 + y*(27*end**3/4 - 27*start**3/4))) - 3*end**3/2 + 3*start**3/2 + y**2*(15*end**3/4 - 15*start**3/4 + y*(-9*end**3/4 + 9*start**3/4))) + c*(c*(c*(5*end**6/8 - 5*start**6/8 + x*(-9*end**6/8 + 9*start**6/8)) + d*(9*end**5/4 - 9*start**5/4 + x*(-81*end**5/20 + 81*start**5/20)) + 5*end**5/4 - 5*start**5/4 + x*(-9*end**5/4 + 9*start**5/4 + y*(81*end**5/20 - 81*start**5/20)) + y*(-9*end**5/4 + 9*start**5/4)) + d*(d*(45*end**4/16 - 45*start**4/16 + x*(-81*end**4/16 + 81*start**4/16)) + 25*end**4/8 - 25*start**4/8 + x*(-45*end**4/8 + 45*start**4/8 + y*(81*end**4/8 - 81*start**4/8)) + y*(-45*end**4/8 + 45*start**4/8)) + x*y*(45*end**4/8 - 45*start**4/8 + y*(-81*end**4/16 + 81*start**4/16)) + y*(-25*end**4/8 + 25*start**4/8 + y*(45*end**4/16 - 45*start**4/16))) + d*(d*(d*(5*end**3/4 - 5*start**3/4 + x*(-9*end**3/4 + 9*start**3/4)) + 25*end**3/12 - 25*start**3/12 + x*(-15*end**3/4 + 15*start**3/4 + y*(27*end**3/4 - 27*start**3/4)) + y*(-15*end**3/4 + 15*start**3/4)) + x*y*(15*end**3/2 - 15*start**3/2 + y*(-27*end**3/4 + 27*start**3/4)) + y*(-25*end**3/6 + 25*start**3/6 + y*(15*end**3/4 - 15*start**3/4))) - 5*end**3/6 + 5*start**3/6 + x*(3*end**3/2 - 3*start**3/2 + y**2*(-15*end**3/4 + 15*start**3/4 + y*(9*end**3/4 - 9*start**3/4))) + y**2*(25*end**3/12 - 25*start**3/12 + y*(-5*end**3/4 + 5*start**3/4))) + b*(b*(c*(c*(c*(27*end**5/20 - 27*start**5/20) + d*(81*end**4/16 - 81*start**4/16) + 45*end**4/16 - 45*start**4/16 + y*(-81*end**4/16 + 81*start**4/16)) + d*(d*(27*end**3/4 - 27*start**3/4) + 15*end**3/2 - 15*start**3/2 + y*(-27*end**3/2 + 27*start**3/2)) + y*(-15*end**3/2 + 15*start**3/2 + y*(27*end**3/4 - 27*start**3/4))) + d*(d*(d*(27*end**2/8 - 27*start**2/8) + 45*end**2/8 - 45*start**2/8 + y*(-81*end**2/8 + 81*start**2/8)) + y*(-45*end**2/4 + 45*start**2/4 + y*(81*end**2/8 - 81*start**2/8))) - 9*end**2/4 + 9*start**2/4 + y**2*(45*end**2/8 - 45*start**2/8 + y*(-27*end**2/8 + 27*start**2/8))) + c*(c*(c*(3*end**5/2 - 3*start**5/2 + x*(-27*end**5/10 + 27*start**5/10)) + d*(45*end**4/8 - 45*start**4/8 + x*(-81*end**4/8 + 81*start**4/8)) + 25*end**4/8 - 25*start**4/8 + x*(-45*end**4/8 + 45*start**4/8 + y*(81*end**4/8 - 81*start**4/8)) + y*(-45*end**4/8 + 45*start**4/8)) + d*(d*(15*end**3/2 - 15*start**3/2 + x*(-27*end**3/2 + 27*start**3/2)) + 25*end**3/3 - 25*start**3/3 + x*(-15*end**3 + 15*start**3 + y*(27*end**3 - 27*start**3)) + y*(-15*end**3 + 15*start**3)) + x*y*(15*end**3 - 15*start**3 + y*(-27*end**3/2 + 27*start**3/2)) + y*(-25*end**3/3 + 25*start**3/3 + y*(15*end**3/2 - 15*start**3/2))) + d*(d*(d*(15*end**2/4 - 15*start**2/4 + x*(-27*end**2/4 + 27*start**2/4)) + 25*end**2/4 - 25*start**2/4 + x*(-45*end**2/4 + 45*start**2/4 + y*(81*end**2/4 - 81*start**2/4)) + y*(-45*end**2/4 + 45*start**2/4)) + x*y*(45*end**2/2 - 45*start**2/2 + y*(-81*end**2/4 + 81*start**2/4)) + y*(-25*end**2/2 + 25*start**2/2 + y*(45*end**2/4 - 45*start**2/4))) - 5*end**2/2 + 5*start**2/2 + x*(9*end**2/2 - 9*start**2/2 + y**2*(-45*end**2/4 + 45*start**2/4 + y*(27*end**2/4 - 27*start**2/4))) + y**2*(25*end**2/4 - 25*start**2/4 + y*(-15*end**2/4 + 15*start**2/4))) + c*(c*(c*x*(-3*end**5/2 + 3*start**5/2 + x*(27*end**5/20 - 27*start**5/20)) + d*x*(-45*end**4/8 + 45*start**4/8 + x*(81*end**4/16 - 81*start**4/16)) + x*(-25*end**4/8 + 25*start**4/8 + x*(45*end**4/16 - 45*start**4/16 + y*(-81*end**4/16 + 81*start**4/16)) + y*(45*end**4/8 - 45*start**4/8))) + d*(d*x*(-15*end**3/2 + 15*start**3/2 + x*(27*end**3/4 - 27*start**3/4)) + x*(-25*end**3/3 + 25*start**3/3 + x*(15*end**3/2 - 15*start**3/2 + y*(-27*end**3/2 + 27*start**3/2)) + y*(15*end**3 - 15*start**3))) + x*(x*y*(-15*end**3/2 + 15*start**3/2 + y*(27*end**3/4 - 27*start**3/4)) + y*(25*end**3/3 - 25*start**3/3 + y*(-15*end**3/2 + 15*start**3/2)))) + d*(d*(d*x*(-15*end**2/4 + 15*start**2/4 + x*(27*end**2/8 - 27*start**2/8)) + x*(-25*end**2/4 + 25*start**2/4 + x*(45*end**2/8 - 45*start**2/8 + y*(-81*end**2/8 + 81*start**2/8)) + y*(45*end**2/4 - 45*start**2/4))) + x*(x*y*(-45*end**2/4 + 45*start**2/4 + y*(81*end**2/8 - 81*start**2/8)) + y*(25*end**2/2 - 25*start**2/2 + y*(-45*end**2/4 + 45*start**2/4)))) + x*(5*end**2/2 - 5*start**2/2 + x*(-9*end**2/4 + 9*start**2/4 + y**2*(45*end**2/8 - 45*start**2/8 + y*(-27*end**2/8 + 27*start**2/8))) + y**2*(-25*end**2/4 + 25*start**2/4 + y*(15*end**2/4 - 15*start**2/4)))) + b*(b*(b*(c*(c*(c*(9*end**4/16 - 9*start**4/16) + d*(9*end**3/4 - 9*start**3/4) + 5*end**3/4 - 5*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + d*(d*(27*end**2/8 - 27*start**2/8) + 15*end**2/4 - 15*start**2/4 + y*(-27*end**2/4 + 27*start**2/4)) + y*(-15*end**2/4 + 15*start**2/4 + y*(27*end**2/8 - 27*start**2/8))) + d*(d*(d*(9*end/4 - 9*start/4) + 15*end/4 - 15*start/4 + y*(-27*end/4 + 27*start/4)) + y*(-15*end/2 + 15*start/2 + y*(27*end/4 - 27*start/4))) - 3*end/2 + 3*start/2 + y**2*(15*end/4 - 15*start/4 + y*(-9*end/4 + 9*start/4))) + c*(c*(c*(15*end**4/16 - 15*start**4/16 + x*(-27*end**4/16 + 27*start**4/16)) + d*(15*end**3/4 - 15*start**3/4 + x*(-27*end**3/4 + 27*start**3/4)) + 25*end**3/12 - 25*start**3/12 + x*(-15*end**3/4 + 15*start**3/4 + y*(27*end**3/4 - 27*start**3/4)) + y*(-15*end**3/4 + 15*start**3/4)) + d*(d*(45*end**2/8 - 45*start**2/8 + x*(-81*end**2/8 + 81*start**2/8)) + 25*end**2/4 - 25*start**2/4 + x*(-45*end**2/4 + 45*start**2/4 + y*(81*end**2/4 - 81*start**2/4)) + y*(-45*end**2/4 + 45*start**2/4)) + x*y*(45*end**2/4 - 45*start**2/4 + y*(-81*end**2/8 + 81*start**2/8)) + y*(-25*end**2/4 + 25*start**2/4 + y*(45*end**2/8 - 45*start**2/8))) + d*(d*(d*(15*end/4 - 15*start/4 + x*(-27*end/4 + 27*start/4)) + 25*end/4 - 25*start/4 + x*(-45*end/4 + 45*start/4 + y*(81*end/4 - 81*start/4)) + y*(-45*end/4 + 45*start/4)) + x*y*(45*end/2 - 45*start/2 + y*(-81*end/4 + 81*start/4)) + y*(-25*end/2 + 25*start/2 + y*(45*end/4 - 45*start/4))) - 5*end/2 + 5*start/2 + x*(9*end/2 - 9*start/2 + y**2*(-45*end/4 + 45*start/4 + y*(27*end/4 - 27*start/4))) + y**2*(25*end/4 - 25*start/4 + y*(-15*end/4 + 15*start/4))) + c*(c*(c*x*(-15*end**4/8 + 15*start**4/8 + x*(27*end**4/16 - 27*start**4/16)) + d*x*(-15*end**3/2 + 15*start**3/2 + x*(27*end**3/4 - 27*start**3/4)) + x*(-25*end**3/6 + 25*start**3/6 + x*(15*end**3/4 - 15*start**3/4 + y*(-27*end**3/4 + 27*start**3/4)) + y*(15*end**3/2 - 15*start**3/2))) + d*(d*x*(-45*end**2/4 + 45*start**2/4 + x*(81*end**2/8 - 81*start**2/8)) + x*(-25*end**2/2 + 25*start**2/2 + x*(45*end**2/4 - 45*start**2/4 + y*(-81*end**2/4 + 81*start**2/4)) + y*(45*end**2/2 - 45*start**2/2))) + x*(x*y*(-45*end**2/4 + 45*start**2/4 + y*(81*end**2/8 - 81*start**2/8)) + y*(25*end**2/2 - 25*start**2/2 + y*(-45*end**2/4 + 45*start**2/4)))) + d*(d*(d*x*(-15*end/2 + 15*start/2 + x*(27*end/4 - 27*start/4)) + x*(-25*end/2 + 25*start/2 + x*(45*end/4 - 45*start/4 + y*(-81*end/4 + 81*start/4)) + y*(45*end/2 - 45*start/2))) + x*(x*y*(-45*end/2 + 45*start/2 + y*(81*end/4 - 81*start/4)) + y*(25*end - 25*start + y*(-45*end/2 + 45*start/2)))) + x*(5*end - 5*start + x*(-9*end/2 + 9*start/2 + y**2*(45*end/4 - 45*start/4 + y*(-27*end/4 + 27*start/4))) + y**2*(-25*end/2 + 25*start/2 + y*(15*end/2 - 15*start/2)))) + c*(c*(c*(-3*end**4/8 + 3*start**4/8 + x**2*(15*end**4/16 - 15*start**4/16 + x*(-9*end**4/16 + 9*start**4/16))) + d*(-3*end**3/2 + 3*start**3/2 + x**2*(15*end**3/4 - 15*start**3/4 + x*(-9*end**3/4 + 9*start**3/4))) - 5*end**3/6 + 5*start**3/6 + x**2*(25*end**3/12 - 25*start**3/12 + x*(-5*end**3/4 + 5*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(-15*end**3/4 + 15*start**3/4)) + y*(3*end**3/2 - 3*start**3/2)) + d*(d*(-9*end**2/4 + 9*start**2/4 + x**2*(45*end**2/8 - 45*start**2/8 + x*(-27*end**2/8 + 27*start**2/8))) - 5*end**2/2 + 5*start**2/2 + x**2*(25*end**2/4 - 25*start**2/4 + x*(-15*end**2/4 + 15*start**2/4 + y*(27*end**2/4 - 27*start**2/4)) + y*(-45*end**2/4 + 45*start**2/4)) + y*(9*end**2/2 - 9*start**2/2)) + x**2*(x*y*(15*end**2/4 - 15*start**2/4 + y*(-27*end**2/8 + 27*start**2/8)) + y*(-25*end**2/4 + 25*start**2/4 + y*(45*end**2/8 - 45*start**2/8))) + y*(5*end**2/2 - 5*start**2/2 + y*(-9*end**2/4 + 9*start**2/4))) + d*(d*(d*(-3*end/2 + 3*start/2 + x**2*(15*end/4 - 15*start/4 + x*(-9*end/4 + 9*start/4))) - 5*end/2 + 5*start/2 + x**2*(25*end/4 - 25*start/4 + x*(-15*end/4 + 15*start/4 + y*(27*end/4 - 27*start/4)) + y*(-45*end/4 + 45*start/4)) + y*(9*end/2 - 9*start/2)) + x**2*(x*y*(15*end/2 - 15*start/2 + y*(-27*end/4 + 27*start/4)) + y*(-25*end/2 + 25*start/2 + y*(45*end/4 - 45*start/4))) + y*(5*end - 5*start + y*(-9*end/2 + 9*start/2))) + end - start + x**2*(-5*end/2 + 5*start/2 + x*(3*end/2 - 3*start/2 + y**2*(-15*end/4 + 15*start/4 + y*(9*end/4 - 9*start/4))) + y**2*(25*end/4 - 25*start/4 + y*(-15*end/4 + 15*start/4))) + y**2*(-5*end/2 + 5*start/2 + y*(3*end/2 - 3*start/2))



    return output


def int07(a, b, c, d, x, y, start, end):
    output = end*(-9*b**3*d**3/4 + 27*b**3*d**2*y/4 + 15*b**3*d**2/4 - 27*b**3*d*y**2/4 - 15*b**3*d*y/2 + 9*b**3*y**3/4 + 15*b**3*y**2/4 - 3*b**3/2 + 27*b**2*d**3*x/4 - 15*b**2*d**3/4 - 81*b**2*d**2*x*y/4 - 45*b**2*d**2*x/4 + 45*b**2*d**2*y/4 + 25*b**2*d**2/4 + 81*b**2*d*x*y**2/4 + 45*b**2*d*x*y/2 - 45*b**2*d*y**2/4 - 25*b**2*d*y/2 - 27*b**2*x*y**3/4 - 45*b**2*x*y**2/4 + 9*b**2*x/2 + 15*b**2*y**3/4 + 25*b**2*y**2/4 - 5*b**2/2 - 27*b*d**3*x**2/4 + 15*b*d**3*x/2 + 81*b*d**2*x**2*y/4 + 45*b*d**2*x**2/4 - 45*b*d**2*x*y/2 - 25*b*d**2*x/2 - 81*b*d*x**2*y**2/4 - 45*b*d*x**2*y/2 + 45*b*d*x*y**2/2 + 25*b*d*x*y + 27*b*x**2*y**3/4 + 45*b*x**2*y**2/4 - 9*b*x**2/2 - 15*b*x*y**3/2 - 25*b*x*y**2/2 + 5*b*x + 9*d**3*x**3/4 - 15*d**3*x**2/4 + 3*d**3/2 - 27*d**2*x**3*y/4 - 15*d**2*x**3/4 + 45*d**2*x**2*y/4 + 25*d**2*x**2/4 - 9*d**2*y/2 - 5*d**2/2 + 27*d*x**3*y**2/4 + 15*d*x**3*y/2 - 45*d*x**2*y**2/4 - 25*d*x**2*y/2 + 9*d*y**2/2 + 5*d*y + end*(-27*a*b**2*d**3/8 + 81*a*b**2*d**2*y/8 + 45*a*b**2*d**2/8 - 81*a*b**2*d*y**2/8 - 45*a*b**2*d*y/4 + 27*a*b**2*y**3/8 + 45*a*b**2*y**2/8 - 9*a*b**2/4 + 27*a*b*d**3*x/4 - 15*a*b*d**3/4 - 81*a*b*d**2*x*y/4 - 45*a*b*d**2*x/4 + 45*a*b*d**2*y/4 + 25*a*b*d**2/4 + 81*a*b*d*x*y**2/4 + 45*a*b*d*x*y/2 - 45*a*b*d*y**2/4 - 25*a*b*d*y/2 - 27*a*b*x*y**3/4 - 45*a*b*x*y**2/4 + 9*a*b*x/2 + 15*a*b*y**3/4 + 25*a*b*y**2/4 - 5*a*b/2 - 27*a*d**3*x**2/8 + 15*a*d**3*x/4 + 81*a*d**2*x**2*y/8 + 45*a*d**2*x**2/8 - 45*a*d**2*x*y/4 - 25*a*d**2*x/4 - 81*a*d*x**2*y**2/8 - 45*a*d*x**2*y/4 + 45*a*d*x*y**2/4 + 25*a*d*x*y/2 + 27*a*x**2*y**3/8 + 45*a*x**2*y**2/8 - 9*a*x**2/4 - 15*a*x*y**3/4 - 25*a*x*y**2/4 + 5*a*x/2 - 27*b**3*c*d**2/8 + 27*b**3*c*d*y/4 + 15*b**3*c*d/4 - 27*b**3*c*y**2/8 - 15*b**3*c*y/4 + 81*b**2*c*d**2*x/8 - 45*b**2*c*d**2/8 - 81*b**2*c*d*x*y/4 - 45*b**2*c*d*x/4 + 45*b**2*c*d*y/4 + 25*b**2*c*d/4 + 81*b**2*c*x*y**2/8 + 45*b**2*c*x*y/4 - 45*b**2*c*y**2/8 - 25*b**2*c*y/4 - 81*b*c*d**2*x**2/8 + 45*b*c*d**2*x/4 + 81*b*c*d*x**2*y/4 + 45*b*c*d*x**2/4 - 45*b*c*d*x*y/2 - 25*b*c*d*x/2 - 81*b*c*x**2*y**2/8 - 45*b*c*x**2*y/4 + 45*b*c*x*y**2/4 + 25*b*c*x*y/2 + 27*c*d**2*x**3/8 - 45*c*d**2*x**2/8 + 9*c*d**2/4 - 27*c*d*x**3*y/4 - 15*c*d*x**3/4 + 45*c*d*x**2*y/4 + 25*c*d*x**2/4 - 9*c*d*y/2 - 5*c*d/2 + 27*c*x**3*y**2/8 + 15*c*x**3*y/4 - 45*c*x**2*y**2/8 - 25*c*x**2*y/4 + 9*c*y**2/4 + 5*c*y/2 + end*(-9*a**2*b*d**3/4 + 27*a**2*b*d**2*y/4 + 15*a**2*b*d**2/4 - 27*a**2*b*d*y**2/4 - 15*a**2*b*d*y/2 + 9*a**2*b*y**3/4 + 15*a**2*b*y**2/4 - 3*a**2*b/2 + 9*a**2*d**3*x/4 - 5*a**2*d**3/4 - 27*a**2*d**2*x*y/4 - 15*a**2*d**2*x/4 + 15*a**2*d**2*y/4 + 25*a**2*d**2/12 + 27*a**2*d*x*y**2/4 + 15*a**2*d*x*y/2 - 15*a**2*d*y**2/4 - 25*a**2*d*y/6 - 9*a**2*x*y**3/4 - 15*a**2*x*y**2/4 + 3*a**2*x/2 + 5*a**2*y**3/4 + 25*a**2*y**2/12 - 5*a**2/6 - 27*a*b**2*c*d**2/4 + 27*a*b**2*c*d*y/2 + 15*a*b**2*c*d/2 - 27*a*b**2*c*y**2/4 - 15*a*b**2*c*y/2 + 27*a*b*c*d**2*x/2 - 15*a*b*c*d**2/2 - 27*a*b*c*d*x*y - 15*a*b*c*d*x + 15*a*b*c*d*y + 25*a*b*c*d/3 + 27*a*b*c*x*y**2/2 + 15*a*b*c*x*y - 15*a*b*c*y**2/2 - 25*a*b*c*y/3 - 27*a*c*d**2*x**2/4 + 15*a*c*d**2*x/2 + 27*a*c*d*x**2*y/2 + 15*a*c*d*x**2/2 - 15*a*c*d*x*y - 25*a*c*d*x/3 - 27*a*c*x**2*y**2/4 - 15*a*c*x**2*y/2 + 15*a*c*x*y**2/2 + 25*a*c*x*y/3 - 9*b**3*c**2*d/4 + 9*b**3*c**2*y/4 + 5*b**3*c**2/4 + 27*b**2*c**2*d*x/4 - 15*b**2*c**2*d/4 - 27*b**2*c**2*x*y/4 - 15*b**2*c**2*x/4 + 15*b**2*c**2*y/4 + 25*b**2*c**2/12 - 27*b*c**2*d*x**2/4 + 15*b*c**2*d*x/2 + 27*b*c**2*x**2*y/4 + 15*b*c**2*x**2/4 - 15*b*c**2*x*y/2 - 25*b*c**2*x/6 + 9*c**2*d*x**3/4 - 15*c**2*d*x**2/4 + 3*c**2*d/2 - 9*c**2*x**3*y/4 - 5*c**2*x**3/4 + 15*c**2*x**2*y/4 + 25*c**2*x**2/12 - 3*c**2*y/2 - 5*c**2/6 + end*(-9*a**3*d**3/16 + 27*a**3*d**2*y/16 + 15*a**3*d**2/16 - 27*a**3*d*y**2/16 - 15*a**3*d*y/8 + 9*a**3*y**3/16 + 15*a**3*y**2/16 - 3*a**3/8 - 81*a**2*b*c*d**2/16 + 81*a**2*b*c*d*y/8 + 45*a**2*b*c*d/8 - 81*a**2*b*c*y**2/16 - 45*a**2*b*c*y/8 + 81*a**2*c*d**2*x/16 - 45*a**2*c*d**2/16 - 81*a**2*c*d*x*y/8 - 45*a**2*c*d*x/8 + 45*a**2*c*d*y/8 + 25*a**2*c*d/8 + 81*a**2*c*x*y**2/16 + 45*a**2*c*x*y/8 - 45*a**2*c*y**2/16 - 25*a**2*c*y/8 - 81*a*b**2*c**2*d/16 + 81*a*b**2*c**2*y/16 + 45*a*b**2*c**2/16 + 81*a*b*c**2*d*x/8 - 45*a*b*c**2*d/8 - 81*a*b*c**2*x*y/8 - 45*a*b*c**2*x/8 + 45*a*b*c**2*y/8 + 25*a*b*c**2/8 - 81*a*c**2*d*x**2/16 + 45*a*c**2*d*x/8 + 81*a*c**2*x**2*y/16 + 45*a*c**2*x**2/16 - 45*a*c**2*x*y/8 - 25*a*c**2*x/8 - 9*b**3*c**3/16 + 27*b**2*c**3*x/16 - 15*b**2*c**3/16 - 27*b*c**3*x**2/16 + 15*b*c**3*x/8 + 9*c**3*x**3/16 - 15*c**3*x**2/16 + 3*c**3/8 + end*(-27*a**3*c*d**2/20 + 27*a**3*c*d*y/10 + 3*a**3*c*d/2 - 27*a**3*c*y**2/20 - 3*a**3*c*y/2 - 81*a**2*b*c**2*d/20 + 81*a**2*b*c**2*y/20 + 9*a**2*b*c**2/4 + 81*a**2*c**2*d*x/20 - 9*a**2*c**2*d/4 - 81*a**2*c**2*x*y/20 - 9*a**2*c**2*x/4 + 9*a**2*c**2*y/4 + 5*a**2*c**2/4 - 27*a*b**2*c**3/20 + 27*a*b*c**3*x/10 - 3*a*b*c**3/2 - 27*a*c**3*x**2/20 + 3*a*c**3*x/2 + end*(-9*a**3*c**3*end/28 - 9*a**3*c**2*d/8 + 9*a**3*c**2*y/8 + 5*a**3*c**2/8 - 9*a**2*b*c**3/8 + 9*a**2*c**3*x/8 - 5*a**2*c**3/8))))) - 9*x**3*y**3/4 - 15*x**3*y**2/4 + 3*x**3/2 + 15*x**2*y**3/4 + 25*x**2*y**2/4 - 5*x**2/2 - 3*y**3/2 - 5*y**2/2 + 1) + start*(9*b**3*d**3/4 - 27*b**3*d**2*y/4 - 15*b**3*d**2/4 + 27*b**3*d*y**2/4 + 15*b**3*d*y/2 - 9*b**3*y**3/4 - 15*b**3*y**2/4 + 3*b**3/2 - 27*b**2*d**3*x/4 + 15*b**2*d**3/4 + 81*b**2*d**2*x*y/4 + 45*b**2*d**2*x/4 - 45*b**2*d**2*y/4 - 25*b**2*d**2/4 - 81*b**2*d*x*y**2/4 - 45*b**2*d*x*y/2 + 45*b**2*d*y**2/4 + 25*b**2*d*y/2 + 27*b**2*x*y**3/4 + 45*b**2*x*y**2/4 - 9*b**2*x/2 - 15*b**2*y**3/4 - 25*b**2*y**2/4 + 5*b**2/2 + 27*b*d**3*x**2/4 - 15*b*d**3*x/2 - 81*b*d**2*x**2*y/4 - 45*b*d**2*x**2/4 + 45*b*d**2*x*y/2 + 25*b*d**2*x/2 + 81*b*d*x**2*y**2/4 + 45*b*d*x**2*y/2 - 45*b*d*x*y**2/2 - 25*b*d*x*y - 27*b*x**2*y**3/4 - 45*b*x**2*y**2/4 + 9*b*x**2/2 + 15*b*x*y**3/2 + 25*b*x*y**2/2 - 5*b*x - 9*d**3*x**3/4 + 15*d**3*x**2/4 - 3*d**3/2 + 27*d**2*x**3*y/4 + 15*d**2*x**3/4 - 45*d**2*x**2*y/4 - 25*d**2*x**2/4 + 9*d**2*y/2 + 5*d**2/2 - 27*d*x**3*y**2/4 - 15*d*x**3*y/2 + 45*d*x**2*y**2/4 + 25*d*x**2*y/2 - 9*d*y**2/2 - 5*d*y + start*(27*a*b**2*d**3/8 - 81*a*b**2*d**2*y/8 - 45*a*b**2*d**2/8 + 81*a*b**2*d*y**2/8 + 45*a*b**2*d*y/4 - 27*a*b**2*y**3/8 - 45*a*b**2*y**2/8 + 9*a*b**2/4 - 27*a*b*d**3*x/4 + 15*a*b*d**3/4 + 81*a*b*d**2*x*y/4 + 45*a*b*d**2*x/4 - 45*a*b*d**2*y/4 - 25*a*b*d**2/4 - 81*a*b*d*x*y**2/4 - 45*a*b*d*x*y/2 + 45*a*b*d*y**2/4 + 25*a*b*d*y/2 + 27*a*b*x*y**3/4 + 45*a*b*x*y**2/4 - 9*a*b*x/2 - 15*a*b*y**3/4 - 25*a*b*y**2/4 + 5*a*b/2 + 27*a*d**3*x**2/8 - 15*a*d**3*x/4 - 81*a*d**2*x**2*y/8 - 45*a*d**2*x**2/8 + 45*a*d**2*x*y/4 + 25*a*d**2*x/4 + 81*a*d*x**2*y**2/8 + 45*a*d*x**2*y/4 - 45*a*d*x*y**2/4 - 25*a*d*x*y/2 - 27*a*x**2*y**3/8 - 45*a*x**2*y**2/8 + 9*a*x**2/4 + 15*a*x*y**3/4 + 25*a*x*y**2/4 - 5*a*x/2 + 27*b**3*c*d**2/8 - 27*b**3*c*d*y/4 - 15*b**3*c*d/4 + 27*b**3*c*y**2/8 + 15*b**3*c*y/4 - 81*b**2*c*d**2*x/8 + 45*b**2*c*d**2/8 + 81*b**2*c*d*x*y/4 + 45*b**2*c*d*x/4 - 45*b**2*c*d*y/4 - 25*b**2*c*d/4 - 81*b**2*c*x*y**2/8 - 45*b**2*c*x*y/4 + 45*b**2*c*y**2/8 + 25*b**2*c*y/4 + 81*b*c*d**2*x**2/8 - 45*b*c*d**2*x/4 - 81*b*c*d*x**2*y/4 - 45*b*c*d*x**2/4 + 45*b*c*d*x*y/2 + 25*b*c*d*x/2 + 81*b*c*x**2*y**2/8 + 45*b*c*x**2*y/4 - 45*b*c*x*y**2/4 - 25*b*c*x*y/2 - 27*c*d**2*x**3/8 + 45*c*d**2*x**2/8 - 9*c*d**2/4 + 27*c*d*x**3*y/4 + 15*c*d*x**3/4 - 45*c*d*x**2*y/4 - 25*c*d*x**2/4 + 9*c*d*y/2 + 5*c*d/2 - 27*c*x**3*y**2/8 - 15*c*x**3*y/4 + 45*c*x**2*y**2/8 + 25*c*x**2*y/4 - 9*c*y**2/4 - 5*c*y/2 + start*(9*a**2*b*d**3/4 - 27*a**2*b*d**2*y/4 - 15*a**2*b*d**2/4 + 27*a**2*b*d*y**2/4 + 15*a**2*b*d*y/2 - 9*a**2*b*y**3/4 - 15*a**2*b*y**2/4 + 3*a**2*b/2 - 9*a**2*d**3*x/4 + 5*a**2*d**3/4 + 27*a**2*d**2*x*y/4 + 15*a**2*d**2*x/4 - 15*a**2*d**2*y/4 - 25*a**2*d**2/12 - 27*a**2*d*x*y**2/4 - 15*a**2*d*x*y/2 + 15*a**2*d*y**2/4 + 25*a**2*d*y/6 + 9*a**2*x*y**3/4 + 15*a**2*x*y**2/4 - 3*a**2*x/2 - 5*a**2*y**3/4 - 25*a**2*y**2/12 + 5*a**2/6 + 27*a*b**2*c*d**2/4 - 27*a*b**2*c*d*y/2 - 15*a*b**2*c*d/2 + 27*a*b**2*c*y**2/4 + 15*a*b**2*c*y/2 - 27*a*b*c*d**2*x/2 + 15*a*b*c*d**2/2 + 27*a*b*c*d*x*y + 15*a*b*c*d*x - 15*a*b*c*d*y - 25*a*b*c*d/3 - 27*a*b*c*x*y**2/2 - 15*a*b*c*x*y + 15*a*b*c*y**2/2 + 25*a*b*c*y/3 + 27*a*c*d**2*x**2/4 - 15*a*c*d**2*x/2 - 27*a*c*d*x**2*y/2 - 15*a*c*d*x**2/2 + 15*a*c*d*x*y + 25*a*c*d*x/3 + 27*a*c*x**2*y**2/4 + 15*a*c*x**2*y/2 - 15*a*c*x*y**2/2 - 25*a*c*x*y/3 + 9*b**3*c**2*d/4 - 9*b**3*c**2*y/4 - 5*b**3*c**2/4 - 27*b**2*c**2*d*x/4 + 15*b**2*c**2*d/4 + 27*b**2*c**2*x*y/4 + 15*b**2*c**2*x/4 - 15*b**2*c**2*y/4 - 25*b**2*c**2/12 + 27*b*c**2*d*x**2/4 - 15*b*c**2*d*x/2 - 27*b*c**2*x**2*y/4 - 15*b*c**2*x**2/4 + 15*b*c**2*x*y/2 + 25*b*c**2*x/6 - 9*c**2*d*x**3/4 + 15*c**2*d*x**2/4 - 3*c**2*d/2 + 9*c**2*x**3*y/4 + 5*c**2*x**3/4 - 15*c**2*x**2*y/4 - 25*c**2*x**2/12 + 3*c**2*y/2 + 5*c**2/6 + start*(9*a**3*d**3/16 - 27*a**3*d**2*y/16 - 15*a**3*d**2/16 + 27*a**3*d*y**2/16 + 15*a**3*d*y/8 - 9*a**3*y**3/16 - 15*a**3*y**2/16 + 3*a**3/8 + 81*a**2*b*c*d**2/16 - 81*a**2*b*c*d*y/8 - 45*a**2*b*c*d/8 + 81*a**2*b*c*y**2/16 + 45*a**2*b*c*y/8 - 81*a**2*c*d**2*x/16 + 45*a**2*c*d**2/16 + 81*a**2*c*d*x*y/8 + 45*a**2*c*d*x/8 - 45*a**2*c*d*y/8 - 25*a**2*c*d/8 - 81*a**2*c*x*y**2/16 - 45*a**2*c*x*y/8 + 45*a**2*c*y**2/16 + 25*a**2*c*y/8 + 81*a*b**2*c**2*d/16 - 81*a*b**2*c**2*y/16 - 45*a*b**2*c**2/16 - 81*a*b*c**2*d*x/8 + 45*a*b*c**2*d/8 + 81*a*b*c**2*x*y/8 + 45*a*b*c**2*x/8 - 45*a*b*c**2*y/8 - 25*a*b*c**2/8 + 81*a*c**2*d*x**2/16 - 45*a*c**2*d*x/8 - 81*a*c**2*x**2*y/16 - 45*a*c**2*x**2/16 + 45*a*c**2*x*y/8 + 25*a*c**2*x/8 + 9*b**3*c**3/16 - 27*b**2*c**3*x/16 + 15*b**2*c**3/16 + 27*b*c**3*x**2/16 - 15*b*c**3*x/8 - 9*c**3*x**3/16 + 15*c**3*x**2/16 - 3*c**3/8 + start*(27*a**3*c*d**2/20 - 27*a**3*c*d*y/10 - 3*a**3*c*d/2 + 27*a**3*c*y**2/20 + 3*a**3*c*y/2 + 81*a**2*b*c**2*d/20 - 81*a**2*b*c**2*y/20 - 9*a**2*b*c**2/4 - 81*a**2*c**2*d*x/20 + 9*a**2*c**2*d/4 + 81*a**2*c**2*x*y/20 + 9*a**2*c**2*x/4 - 9*a**2*c**2*y/4 - 5*a**2*c**2/4 + 27*a*b**2*c**3/20 - 27*a*b*c**3*x/10 + 3*a*b*c**3/2 + 27*a*c**3*x**2/20 - 3*a*c**3*x/2 + start*(9*a**3*c**3*start/28 + 9*a**3*c**2*d/8 - 9*a**3*c**2*y/8 - 5*a**3*c**2/8 + 9*a**2*b*c**3/8 - 9*a**2*c**3*x/8 + 5*a**2*c**3/8))))) + 9*x**3*y**3/4 + 15*x**3*y**2/4 - 3*x**3/2 - 15*x**2*y**3/4 - 25*x**2*y**2/4 + 5*x**2/2 + 3*y**3/2 + 5*y**2/2 - 1)


    return output


def int08(a, b, c, d, x, y, start, end):
    output = a*(a*(a*(c*(c*(c*(3*end**7/28 - 3*start**7/28) + d*(3*end**6/8 - 3*start**6/8) - 5*end**6/8 + 5*start**6/8 + y*(-3*end**6/8 + 3*start**6/8)) + d*(d*(9*end**5/20 - 9*start**5/20) - 3*end**5/2 + 3*start**5/2 + y*(-9*end**5/10 + 9*start**5/10)) + 6*end**5/5 - 6*start**5/5 + y*(3*end**5/2 - 3*start**5/2 + y*(9*end**5/20 - 9*start**5/20))) + d*(d*(d*(3*end**4/16 - 3*start**4/16) - 15*end**4/16 + 15*start**4/16 + y*(-9*end**4/16 + 9*start**4/16)) + 3*end**4/2 - 3*start**4/2 + y*(15*end**4/8 - 15*start**4/8 + y*(9*end**4/16 - 9*start**4/16))) - 3*end**4/4 + 3*start**4/4 + y*(-3*end**4/2 + 3*start**4/2 + y*(-15*end**4/16 + 15*start**4/16 + y*(-3*end**4/16 + 3*start**4/16)))) + b*(c*(c*(c*(3*end**6/8 - 3*start**6/8) + d*(27*end**5/20 - 27*start**5/20) - 9*end**5/4 + 9*start**5/4 + y*(-27*end**5/20 + 27*start**5/20)) + d*(d*(27*end**4/16 - 27*start**4/16) - 45*end**4/8 + 45*start**4/8 + y*(-27*end**4/8 + 27*start**4/8)) + 9*end**4/2 - 9*start**4/2 + y*(45*end**4/8 - 45*start**4/8 + y*(27*end**4/16 - 27*start**4/16))) + d*(d*(d*(3*end**3/4 - 3*start**3/4) - 15*end**3/4 + 15*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + 6*end**3 - 6*start**3 + y*(15*end**3/2 - 15*start**3/2 + y*(9*end**3/4 - 9*start**3/4))) - 3*end**3 + 3*start**3 + y*(-6*end**3 + 6*start**3 + y*(-15*end**3/4 + 15*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)))) + c*(c*(c*(5*end**6/24 - 5*start**6/24 + x*(-3*end**6/8 + 3*start**6/8)) + d*(3*end**5/4 - 3*start**5/4 + x*(-27*end**5/20 + 27*start**5/20)) - 5*end**5/4 + 5*start**5/4 + x*(9*end**5/4 - 9*start**5/4 + y*(27*end**5/20 - 27*start**5/20)) + y*(-3*end**5/4 + 3*start**5/4)) + d*(d*(15*end**4/16 - 15*start**4/16 + x*(-27*end**4/16 + 27*start**4/16)) - 25*end**4/8 + 25*start**4/8 + x*(45*end**4/8 - 45*start**4/8 + y*(27*end**4/8 - 27*start**4/8)) + y*(-15*end**4/8 + 15*start**4/8)) + 5*end**4/2 - 5*start**4/2 + x*(-9*end**4/2 + 9*start**4/2 + y*(-45*end**4/8 + 45*start**4/8 + y*(-27*end**4/16 + 27*start**4/16))) + y*(25*end**4/8 - 25*start**4/8 + y*(15*end**4/16 - 15*start**4/16))) + d*(d*(d*(5*end**3/12 - 5*start**3/12 + x*(-3*end**3/4 + 3*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(15*end**3/4 - 15*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(-5*end**3/4 + 5*start**3/4)) + 10*end**3/3 - 10*start**3/3 + x*(-6*end**3 + 6*start**3 + y*(-15*end**3/2 + 15*start**3/2 + y*(-9*end**3/4 + 9*start**3/4))) + y*(25*end**3/6 - 25*start**3/6 + y*(5*end**3/4 - 5*start**3/4))) - 5*end**3/3 + 5*start**3/3 + x*(3*end**3 - 3*start**3 + y*(6*end**3 - 6*start**3 + y*(15*end**3/4 - 15*start**3/4 + y*(3*end**3/4 - 3*start**3/4)))) + y*(-10*end**3/3 + 10*start**3/3 + y*(-25*end**3/12 + 25*start**3/12 + y*(-5*end**3/12 + 5*start**3/12)))) + b*(b*(c*(c*(c*(9*end**5/20 - 9*start**5/20) + d*(27*end**4/16 - 27*start**4/16) - 45*end**4/16 + 45*start**4/16 + y*(-27*end**4/16 + 27*start**4/16)) + d*(d*(9*end**3/4 - 9*start**3/4) - 15*end**3/2 + 15*start**3/2 + y*(-9*end**3/2 + 9*start**3/2)) + 6*end**3 - 6*start**3 + y*(15*end**3/2 - 15*start**3/2 + y*(9*end**3/4 - 9*start**3/4))) + d*(d*(d*(9*end**2/8 - 9*start**2/8) - 45*end**2/8 + 45*start**2/8 + y*(-27*end**2/8 + 27*start**2/8)) + 9*end**2 - 9*start**2 + y*(45*end**2/4 - 45*start**2/4 + y*(27*end**2/8 - 27*start**2/8))) - 9*end**2/2 + 9*start**2/2 + y*(-9*end**2 + 9*start**2 + y*(-45*end**2/8 + 45*start**2/8 + y*(-9*end**2/8 + 9*start**2/8)))) + c*(c*(c*(end**5/2 - start**5/2 + x*(-9*end**5/10 + 9*start**5/10)) + d*(15*end**4/8 - 15*start**4/8 + x*(-27*end**4/8 + 27*start**4/8)) - 25*end**4/8 + 25*start**4/8 + x*(45*end**4/8 - 45*start**4/8 + y*(27*end**4/8 - 27*start**4/8)) + y*(-15*end**4/8 + 15*start**4/8)) + d*(d*(5*end**3/2 - 5*start**3/2 + x*(-9*end**3/2 + 9*start**3/2)) - 25*end**3/3 + 25*start**3/3 + x*(15*end**3 - 15*start**3 + y*(9*end**3 - 9*start**3)) + y*(-5*end**3 + 5*start**3)) + 20*end**3/3 - 20*start**3/3 + x*(-12*end**3 + 12*start**3 + y*(-15*end**3 + 15*start**3 + y*(-9*end**3/2 + 9*start**3/2))) + y*(25*end**3/3 - 25*start**3/3 + y*(5*end**3/2 - 5*start**3/2))) + d*(d*(d*(5*end**2/4 - 5*start**2/4 + x*(-9*end**2/4 + 9*start**2/4)) - 25*end**2/4 + 25*start**2/4 + x*(45*end**2/4 - 45*start**2/4 + y*(27*end**2/4 - 27*start**2/4)) + y*(-15*end**2/4 + 15*start**2/4)) + 10*end**2 - 10*start**2 + x*(-18*end**2 + 18*start**2 + y*(-45*end**2/2 + 45*start**2/2 + y*(-27*end**2/4 + 27*start**2/4))) + y*(25*end**2/2 - 25*start**2/2 + y*(15*end**2/4 - 15*start**2/4))) - 5*end**2 + 5*start**2 + x*(9*end**2 - 9*start**2 + y*(18*end**2 - 18*start**2 + y*(45*end**2/4 - 45*start**2/4 + y*(9*end**2/4 - 9*start**2/4)))) + y*(-10*end**2 + 10*start**2 + y*(-25*end**2/4 + 25*start**2/4 + y*(-5*end**2/4 + 5*start**2/4)))) + c*(c*(c*x*(-end**5/2 + start**5/2 + x*(9*end**5/20 - 9*start**5/20)) + d*x*(-15*end**4/8 + 15*start**4/8 + x*(27*end**4/16 - 27*start**4/16)) + x*(25*end**4/8 - 25*start**4/8 + x*(-45*end**4/16 + 45*start**4/16 + y*(-27*end**4/16 + 27*start**4/16)) + y*(15*end**4/8 - 15*start**4/8))) + d*(d*x*(-5*end**3/2 + 5*start**3/2 + x*(9*end**3/4 - 9*start**3/4)) + x*(25*end**3/3 - 25*start**3/3 + x*(-15*end**3/2 + 15*start**3/2 + y*(-9*end**3/2 + 9*start**3/2)) + y*(5*end**3 - 5*start**3))) + x*(-20*end**3/3 + 20*start**3/3 + x*(6*end**3 - 6*start**3 + y*(15*end**3/2 - 15*start**3/2 + y*(9*end**3/4 - 9*start**3/4))) + y*(-25*end**3/3 + 25*start**3/3 + y*(-5*end**3/2 + 5*start**3/2)))) + d*(d*(d*x*(-5*end**2/4 + 5*start**2/4 + x*(9*end**2/8 - 9*start**2/8)) + x*(25*end**2/4 - 25*start**2/4 + x*(-45*end**2/8 + 45*start**2/8 + y*(-27*end**2/8 + 27*start**2/8)) + y*(15*end**2/4 - 15*start**2/4))) + x*(-10*end**2 + 10*start**2 + x*(9*end**2 - 9*start**2 + y*(45*end**2/4 - 45*start**2/4 + y*(27*end**2/8 - 27*start**2/8))) + y*(-25*end**2/2 + 25*start**2/2 + y*(-15*end**2/4 + 15*start**2/4)))) + x*(5*end**2 - 5*start**2 + x*(-9*end**2/2 + 9*start**2/2 + y*(-9*end**2 + 9*start**2 + y*(-45*end**2/8 + 45*start**2/8 + y*(-9*end**2/8 + 9*start**2/8)))) + y*(10*end**2 - 10*start**2 + y*(25*end**2/4 - 25*start**2/4 + y*(5*end**2/4 - 5*start**2/4))))) + b*(b*(b*(c*(c*(c*(3*end**4/16 - 3*start**4/16) + d*(3*end**3/4 - 3*start**3/4) - 5*end**3/4 + 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)) + d*(d*(9*end**2/8 - 9*start**2/8) - 15*end**2/4 + 15*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)) + 3*end**2 - 3*start**2 + y*(15*end**2/4 - 15*start**2/4 + y*(9*end**2/8 - 9*start**2/8))) + d*(d*(d*(3*end/4 - 3*start/4) - 15*end/4 + 15*start/4 + y*(-9*end/4 + 9*start/4)) + 6*end - 6*start + y*(15*end/2 - 15*start/2 + y*(9*end/4 - 9*start/4))) - 3*end + 3*start + y*(-6*end + 6*start + y*(-15*end/4 + 15*start/4 + y*(-3*end/4 + 3*start/4)))) + c*(c*(c*(5*end**4/16 - 5*start**4/16 + x*(-9*end**4/16 + 9*start**4/16)) + d*(5*end**3/4 - 5*start**3/4 + x*(-9*end**3/4 + 9*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(15*end**3/4 - 15*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(-5*end**3/4 + 5*start**3/4)) + d*(d*(15*end**2/8 - 15*start**2/8 + x*(-27*end**2/8 + 27*start**2/8)) - 25*end**2/4 + 25*start**2/4 + x*(45*end**2/4 - 45*start**2/4 + y*(27*end**2/4 - 27*start**2/4)) + y*(-15*end**2/4 + 15*start**2/4)) + 5*end**2 - 5*start**2 + x*(-9*end**2 + 9*start**2 + y*(-45*end**2/4 + 45*start**2/4 + y*(-27*end**2/8 + 27*start**2/8))) + y*(25*end**2/4 - 25*start**2/4 + y*(15*end**2/8 - 15*start**2/8))) + d*(d*(d*(5*end/4 - 5*start/4 + x*(-9*end/4 + 9*start/4)) - 25*end/4 + 25*start/4 + x*(45*end/4 - 45*start/4 + y*(27*end/4 - 27*start/4)) + y*(-15*end/4 + 15*start/4)) + 10*end - 10*start + x*(-18*end + 18*start + y*(-45*end/2 + 45*start/2 + y*(-27*end/4 + 27*start/4))) + y*(25*end/2 - 25*start/2 + y*(15*end/4 - 15*start/4))) - 5*end + 5*start + x*(9*end - 9*start + y*(18*end - 18*start + y*(45*end/4 - 45*start/4 + y*(9*end/4 - 9*start/4)))) + y*(-10*end + 10*start + y*(-25*end/4 + 25*start/4 + y*(-5*end/4 + 5*start/4)))) + c*(c*(c*x*(-5*end**4/8 + 5*start**4/8 + x*(9*end**4/16 - 9*start**4/16)) + d*x*(-5*end**3/2 + 5*start**3/2 + x*(9*end**3/4 - 9*start**3/4)) + x*(25*end**3/6 - 25*start**3/6 + x*(-15*end**3/4 + 15*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + y*(5*end**3/2 - 5*start**3/2))) + d*(d*x*(-15*end**2/4 + 15*start**2/4 + x*(27*end**2/8 - 27*start**2/8)) + x*(25*end**2/2 - 25*start**2/2 + x*(-45*end**2/4 + 45*start**2/4 + y*(-27*end**2/4 + 27*start**2/4)) + y*(15*end**2/2 - 15*start**2/2))) + x*(-10*end**2 + 10*start**2 + x*(9*end**2 - 9*start**2 + y*(45*end**2/4 - 45*start**2/4 + y*(27*end**2/8 - 27*start**2/8))) + y*(-25*end**2/2 + 25*start**2/2 + y*(-15*end**2/4 + 15*start**2/4)))) + d*(d*(d*x*(-5*end/2 + 5*start/2 + x*(9*end/4 - 9*start/4)) + x*(25*end/2 - 25*start/2 + x*(-45*end/4 + 45*start/4 + y*(-27*end/4 + 27*start/4)) + y*(15*end/2 - 15*start/2))) + x*(-20*end + 20*start + x*(18*end - 18*start + y*(45*end/2 - 45*start/2 + y*(27*end/4 - 27*start/4))) + y*(-25*end + 25*start + y*(-15*end/2 + 15*start/2)))) + x*(10*end - 10*start + x*(-9*end + 9*start + y*(-18*end + 18*start + y*(-45*end/4 + 45*start/4 + y*(-9*end/4 + 9*start/4)))) + y*(20*end - 20*start + y*(25*end/2 - 25*start/2 + y*(5*end/2 - 5*start/2))))) + c*(c*(c*(-end**4/8 + start**4/8 + x**2*(5*end**4/16 - 5*start**4/16 + x*(-3*end**4/16 + 3*start**4/16))) + d*(-end**3/2 + start**3/2 + x**2*(5*end**3/4 - 5*start**3/4 + x*(-3*end**3/4 + 3*start**3/4))) + 5*end**3/6 - 5*start**3/6 + x**2*(-25*end**3/12 + 25*start**3/12 + x*(5*end**3/4 - 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4)) + y*(-5*end**3/4 + 5*start**3/4)) + y*(end**3/2 - start**3/2)) + d*(d*(-3*end**2/4 + 3*start**2/4 + x**2*(15*end**2/8 - 15*start**2/8 + x*(-9*end**2/8 + 9*start**2/8))) + 5*end**2/2 - 5*start**2/2 + x**2*(-25*end**2/4 + 25*start**2/4 + x*(15*end**2/4 - 15*start**2/4 + y*(9*end**2/4 - 9*start**2/4)) + y*(-15*end**2/4 + 15*start**2/4)) + y*(3*end**2/2 - 3*start**2/2)) - 2*end**2 + 2*start**2 + x**2*(5*end**2 - 5*start**2 + x*(-3*end**2 + 3*start**2 + y*(-15*end**2/4 + 15*start**2/4 + y*(-9*end**2/8 + 9*start**2/8))) + y*(25*end**2/4 - 25*start**2/4 + y*(15*end**2/8 - 15*start**2/8))) + y*(-5*end**2/2 + 5*start**2/2 + y*(-3*end**2/4 + 3*start**2/4))) + d*(d*(d*(-end/2 + start/2 + x**2*(5*end/4 - 5*start/4 + x*(-3*end/4 + 3*start/4))) + 5*end/2 - 5*start/2 + x**2*(-25*end/4 + 25*start/4 + x*(15*end/4 - 15*start/4 + y*(9*end/4 - 9*start/4)) + y*(-15*end/4 + 15*start/4)) + y*(3*end/2 - 3*start/2)) - 4*end + 4*start + x**2*(10*end - 10*start + x*(-6*end + 6*start + y*(-15*end/2 + 15*start/2 + y*(-9*end/4 + 9*start/4))) + y*(25*end/2 - 25*start/2 + y*(15*end/4 - 15*start/4))) + y*(-5*end + 5*start + y*(-3*end/2 + 3*start/2))) + 2*end - 2*start + x**2*(-5*end + 5*start + x*(3*end - 3*start + y*(6*end - 6*start + y*(15*end/4 - 15*start/4 + y*(3*end/4 - 3*start/4)))) + y*(-10*end + 10*start + y*(-25*end/4 + 25*start/4 + y*(-5*end/4 + 5*start/4)))) + y*(4*end - 4*start + y*(5*end/2 - 5*start/2 + y*(end/2 - start/2)))


    return output


def int09(a, b, c, d, x, y, start, end):
    output = a*(a*(a*(c*(c*(c*(3*end**7/28 - 3*start**7/28) + d*(3*end**6/8 - 3*start**6/8) + 5*end**6/8 - 5*start**6/8 + y*(-3*end**6/8 + 3*start**6/8)) + d*(d*(9*end**5/20 - 9*start**5/20) + 3*end**5/2 - 3*start**5/2 + y*(-9*end**5/10 + 9*start**5/10)) + 6*end**5/5 - 6*start**5/5 + y*(-3*end**5/2 + 3*start**5/2 + y*(9*end**5/20 - 9*start**5/20))) + d*(d*(d*(3*end**4/16 - 3*start**4/16) + 15*end**4/16 - 15*start**4/16 + y*(-9*end**4/16 + 9*start**4/16)) + 3*end**4/2 - 3*start**4/2 + y*(-15*end**4/8 + 15*start**4/8 + y*(9*end**4/16 - 9*start**4/16))) + 3*end**4/4 - 3*start**4/4 + y*(-3*end**4/2 + 3*start**4/2 + y*(15*end**4/16 - 15*start**4/16 + y*(-3*end**4/16 + 3*start**4/16)))) + b*(c*(c*(c*(3*end**6/8 - 3*start**6/8) + d*(27*end**5/20 - 27*start**5/20) + 9*end**5/4 - 9*start**5/4 + y*(-27*end**5/20 + 27*start**5/20)) + d*(d*(27*end**4/16 - 27*start**4/16) + 45*end**4/8 - 45*start**4/8 + y*(-27*end**4/8 + 27*start**4/8)) + 9*end**4/2 - 9*start**4/2 + y*(-45*end**4/8 + 45*start**4/8 + y*(27*end**4/16 - 27*start**4/16))) + d*(d*(d*(3*end**3/4 - 3*start**3/4) + 15*end**3/4 - 15*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + 6*end**3 - 6*start**3 + y*(-15*end**3/2 + 15*start**3/2 + y*(9*end**3/4 - 9*start**3/4))) + 3*end**3 - 3*start**3 + y*(-6*end**3 + 6*start**3 + y*(15*end**3/4 - 15*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)))) + c*(c*(c*(-5*end**6/24 + 5*start**6/24 + x*(-3*end**6/8 + 3*start**6/8)) + d*(-3*end**5/4 + 3*start**5/4 + x*(-27*end**5/20 + 27*start**5/20)) - 5*end**5/4 + 5*start**5/4 + x*(-9*end**5/4 + 9*start**5/4 + y*(27*end**5/20 - 27*start**5/20)) + y*(3*end**5/4 - 3*start**5/4)) + d*(d*(-15*end**4/16 + 15*start**4/16 + x*(-27*end**4/16 + 27*start**4/16)) - 25*end**4/8 + 25*start**4/8 + x*(-45*end**4/8 + 45*start**4/8 + y*(27*end**4/8 - 27*start**4/8)) + y*(15*end**4/8 - 15*start**4/8)) - 5*end**4/2 + 5*start**4/2 + x*(-9*end**4/2 + 9*start**4/2 + y*(45*end**4/8 - 45*start**4/8 + y*(-27*end**4/16 + 27*start**4/16))) + y*(25*end**4/8 - 25*start**4/8 + y*(-15*end**4/16 + 15*start**4/16))) + d*(d*(d*(-5*end**3/12 + 5*start**3/12 + x*(-3*end**3/4 + 3*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(-15*end**3/4 + 15*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(5*end**3/4 - 5*start**3/4)) - 10*end**3/3 + 10*start**3/3 + x*(-6*end**3 + 6*start**3 + y*(15*end**3/2 - 15*start**3/2 + y*(-9*end**3/4 + 9*start**3/4))) + y*(25*end**3/6 - 25*start**3/6 + y*(-5*end**3/4 + 5*start**3/4))) - 5*end**3/3 + 5*start**3/3 + x*(-3*end**3 + 3*start**3 + y*(6*end**3 - 6*start**3 + y*(-15*end**3/4 + 15*start**3/4 + y*(3*end**3/4 - 3*start**3/4)))) + y*(10*end**3/3 - 10*start**3/3 + y*(-25*end**3/12 + 25*start**3/12 + y*(5*end**3/12 - 5*start**3/12)))) + b*(b*(c*(c*(c*(9*end**5/20 - 9*start**5/20) + d*(27*end**4/16 - 27*start**4/16) + 45*end**4/16 - 45*start**4/16 + y*(-27*end**4/16 + 27*start**4/16)) + d*(d*(9*end**3/4 - 9*start**3/4) + 15*end**3/2 - 15*start**3/2 + y*(-9*end**3/2 + 9*start**3/2)) + 6*end**3 - 6*start**3 + y*(-15*end**3/2 + 15*start**3/2 + y*(9*end**3/4 - 9*start**3/4))) + d*(d*(d*(9*end**2/8 - 9*start**2/8) + 45*end**2/8 - 45*start**2/8 + y*(-27*end**2/8 + 27*start**2/8)) + 9*end**2 - 9*start**2 + y*(-45*end**2/4 + 45*start**2/4 + y*(27*end**2/8 - 27*start**2/8))) + 9*end**2/2 - 9*start**2/2 + y*(-9*end**2 + 9*start**2 + y*(45*end**2/8 - 45*start**2/8 + y*(-9*end**2/8 + 9*start**2/8)))) + c*(c*(c*(-end**5/2 + start**5/2 + x*(-9*end**5/10 + 9*start**5/10)) + d*(-15*end**4/8 + 15*start**4/8 + x*(-27*end**4/8 + 27*start**4/8)) - 25*end**4/8 + 25*start**4/8 + x*(-45*end**4/8 + 45*start**4/8 + y*(27*end**4/8 - 27*start**4/8)) + y*(15*end**4/8 - 15*start**4/8)) + d*(d*(-5*end**3/2 + 5*start**3/2 + x*(-9*end**3/2 + 9*start**3/2)) - 25*end**3/3 + 25*start**3/3 + x*(-15*end**3 + 15*start**3 + y*(9*end**3 - 9*start**3)) + y*(5*end**3 - 5*start**3)) - 20*end**3/3 + 20*start**3/3 + x*(-12*end**3 + 12*start**3 + y*(15*end**3 - 15*start**3 + y*(-9*end**3/2 + 9*start**3/2))) + y*(25*end**3/3 - 25*start**3/3 + y*(-5*end**3/2 + 5*start**3/2))) + d*(d*(d*(-5*end**2/4 + 5*start**2/4 + x*(-9*end**2/4 + 9*start**2/4)) - 25*end**2/4 + 25*start**2/4 + x*(-45*end**2/4 + 45*start**2/4 + y*(27*end**2/4 - 27*start**2/4)) + y*(15*end**2/4 - 15*start**2/4)) - 10*end**2 + 10*start**2 + x*(-18*end**2 + 18*start**2 + y*(45*end**2/2 - 45*start**2/2 + y*(-27*end**2/4 + 27*start**2/4))) + y*(25*end**2/2 - 25*start**2/2 + y*(-15*end**2/4 + 15*start**2/4))) - 5*end**2 + 5*start**2 + x*(-9*end**2 + 9*start**2 + y*(18*end**2 - 18*start**2 + y*(-45*end**2/4 + 45*start**2/4 + y*(9*end**2/4 - 9*start**2/4)))) + y*(10*end**2 - 10*start**2 + y*(-25*end**2/4 + 25*start**2/4 + y*(5*end**2/4 - 5*start**2/4)))) + c*(c*(c*x*(end**5/2 - start**5/2 + x*(9*end**5/20 - 9*start**5/20)) + d*x*(15*end**4/8 - 15*start**4/8 + x*(27*end**4/16 - 27*start**4/16)) + x*(25*end**4/8 - 25*start**4/8 + x*(45*end**4/16 - 45*start**4/16 + y*(-27*end**4/16 + 27*start**4/16)) + y*(-15*end**4/8 + 15*start**4/8))) + d*(d*x*(5*end**3/2 - 5*start**3/2 + x*(9*end**3/4 - 9*start**3/4)) + x*(25*end**3/3 - 25*start**3/3 + x*(15*end**3/2 - 15*start**3/2 + y*(-9*end**3/2 + 9*start**3/2)) + y*(-5*end**3 + 5*start**3))) + x*(20*end**3/3 - 20*start**3/3 + x*(6*end**3 - 6*start**3 + y*(-15*end**3/2 + 15*start**3/2 + y*(9*end**3/4 - 9*start**3/4))) + y*(-25*end**3/3 + 25*start**3/3 + y*(5*end**3/2 - 5*start**3/2)))) + d*(d*(d*x*(5*end**2/4 - 5*start**2/4 + x*(9*end**2/8 - 9*start**2/8)) + x*(25*end**2/4 - 25*start**2/4 + x*(45*end**2/8 - 45*start**2/8 + y*(-27*end**2/8 + 27*start**2/8)) + y*(-15*end**2/4 + 15*start**2/4))) + x*(10*end**2 - 10*start**2 + x*(9*end**2 - 9*start**2 + y*(-45*end**2/4 + 45*start**2/4 + y*(27*end**2/8 - 27*start**2/8))) + y*(-25*end**2/2 + 25*start**2/2 + y*(15*end**2/4 - 15*start**2/4)))) + x*(5*end**2 - 5*start**2 + x*(9*end**2/2 - 9*start**2/2 + y*(-9*end**2 + 9*start**2 + y*(45*end**2/8 - 45*start**2/8 + y*(-9*end**2/8 + 9*start**2/8)))) + y*(-10*end**2 + 10*start**2 + y*(25*end**2/4 - 25*start**2/4 + y*(-5*end**2/4 + 5*start**2/4))))) + b*(b*(b*(c*(c*(c*(3*end**4/16 - 3*start**4/16) + d*(3*end**3/4 - 3*start**3/4) + 5*end**3/4 - 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)) + d*(d*(9*end**2/8 - 9*start**2/8) + 15*end**2/4 - 15*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)) + 3*end**2 - 3*start**2 + y*(-15*end**2/4 + 15*start**2/4 + y*(9*end**2/8 - 9*start**2/8))) + d*(d*(d*(3*end/4 - 3*start/4) + 15*end/4 - 15*start/4 + y*(-9*end/4 + 9*start/4)) + 6*end - 6*start + y*(-15*end/2 + 15*start/2 + y*(9*end/4 - 9*start/4))) + 3*end - 3*start + y*(-6*end + 6*start + y*(15*end/4 - 15*start/4 + y*(-3*end/4 + 3*start/4)))) + c*(c*(c*(-5*end**4/16 + 5*start**4/16 + x*(-9*end**4/16 + 9*start**4/16)) + d*(-5*end**3/4 + 5*start**3/4 + x*(-9*end**3/4 + 9*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(-15*end**3/4 + 15*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(5*end**3/4 - 5*start**3/4)) + d*(d*(-15*end**2/8 + 15*start**2/8 + x*(-27*end**2/8 + 27*start**2/8)) - 25*end**2/4 + 25*start**2/4 + x*(-45*end**2/4 + 45*start**2/4 + y*(27*end**2/4 - 27*start**2/4)) + y*(15*end**2/4 - 15*start**2/4)) - 5*end**2 + 5*start**2 + x*(-9*end**2 + 9*start**2 + y*(45*end**2/4 - 45*start**2/4 + y*(-27*end**2/8 + 27*start**2/8))) + y*(25*end**2/4 - 25*start**2/4 + y*(-15*end**2/8 + 15*start**2/8))) + d*(d*(d*(-5*end/4 + 5*start/4 + x*(-9*end/4 + 9*start/4)) - 25*end/4 + 25*start/4 + x*(-45*end/4 + 45*start/4 + y*(27*end/4 - 27*start/4)) + y*(15*end/4 - 15*start/4)) - 10*end + 10*start + x*(-18*end + 18*start + y*(45*end/2 - 45*start/2 + y*(-27*end/4 + 27*start/4))) + y*(25*end/2 - 25*start/2 + y*(-15*end/4 + 15*start/4))) - 5*end + 5*start + x*(-9*end + 9*start + y*(18*end - 18*start + y*(-45*end/4 + 45*start/4 + y*(9*end/4 - 9*start/4)))) + y*(10*end - 10*start + y*(-25*end/4 + 25*start/4 + y*(5*end/4 - 5*start/4)))) + c*(c*(c*x*(5*end**4/8 - 5*start**4/8 + x*(9*end**4/16 - 9*start**4/16)) + d*x*(5*end**3/2 - 5*start**3/2 + x*(9*end**3/4 - 9*start**3/4)) + x*(25*end**3/6 - 25*start**3/6 + x*(15*end**3/4 - 15*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + y*(-5*end**3/2 + 5*start**3/2))) + d*(d*x*(15*end**2/4 - 15*start**2/4 + x*(27*end**2/8 - 27*start**2/8)) + x*(25*end**2/2 - 25*start**2/2 + x*(45*end**2/4 - 45*start**2/4 + y*(-27*end**2/4 + 27*start**2/4)) + y*(-15*end**2/2 + 15*start**2/2))) + x*(10*end**2 - 10*start**2 + x*(9*end**2 - 9*start**2 + y*(-45*end**2/4 + 45*start**2/4 + y*(27*end**2/8 - 27*start**2/8))) + y*(-25*end**2/2 + 25*start**2/2 + y*(15*end**2/4 - 15*start**2/4)))) + d*(d*(d*x*(5*end/2 - 5*start/2 + x*(9*end/4 - 9*start/4)) + x*(25*end/2 - 25*start/2 + x*(45*end/4 - 45*start/4 + y*(-27*end/4 + 27*start/4)) + y*(-15*end/2 + 15*start/2))) + x*(20*end - 20*start + x*(18*end - 18*start + y*(-45*end/2 + 45*start/2 + y*(27*end/4 - 27*start/4))) + y*(-25*end + 25*start + y*(15*end/2 - 15*start/2)))) + x*(10*end - 10*start + x*(9*end - 9*start + y*(-18*end + 18*start + y*(45*end/4 - 45*start/4 + y*(-9*end/4 + 9*start/4)))) + y*(-20*end + 20*start + y*(25*end/2 - 25*start/2 + y*(-5*end/2 + 5*start/2))))) + c*(c*(c*(end**4/8 - start**4/8 + x**2*(-5*end**4/16 + 5*start**4/16 + x*(-3*end**4/16 + 3*start**4/16))) + d*(end**3/2 - start**3/2 + x**2*(-5*end**3/4 + 5*start**3/4 + x*(-3*end**3/4 + 3*start**3/4))) + 5*end**3/6 - 5*start**3/6 + x**2*(-25*end**3/12 + 25*start**3/12 + x*(-5*end**3/4 + 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4)) + y*(5*end**3/4 - 5*start**3/4)) + y*(-end**3/2 + start**3/2)) + d*(d*(3*end**2/4 - 3*start**2/4 + x**2*(-15*end**2/8 + 15*start**2/8 + x*(-9*end**2/8 + 9*start**2/8))) + 5*end**2/2 - 5*start**2/2 + x**2*(-25*end**2/4 + 25*start**2/4 + x*(-15*end**2/4 + 15*start**2/4 + y*(9*end**2/4 - 9*start**2/4)) + y*(15*end**2/4 - 15*start**2/4)) + y*(-3*end**2/2 + 3*start**2/2)) + 2*end**2 - 2*start**2 + x**2*(-5*end**2 + 5*start**2 + x*(-3*end**2 + 3*start**2 + y*(15*end**2/4 - 15*start**2/4 + y*(-9*end**2/8 + 9*start**2/8))) + y*(25*end**2/4 - 25*start**2/4 + y*(-15*end**2/8 + 15*start**2/8))) + y*(-5*end**2/2 + 5*start**2/2 + y*(3*end**2/4 - 3*start**2/4))) + d*(d*(d*(end/2 - start/2 + x**2*(-5*end/4 + 5*start/4 + x*(-3*end/4 + 3*start/4))) + 5*end/2 - 5*start/2 + x**2*(-25*end/4 + 25*start/4 + x*(-15*end/4 + 15*start/4 + y*(9*end/4 - 9*start/4)) + y*(15*end/4 - 15*start/4)) + y*(-3*end/2 + 3*start/2)) + 4*end - 4*start + x**2*(-10*end + 10*start + x*(-6*end + 6*start + y*(15*end/2 - 15*start/2 + y*(-9*end/4 + 9*start/4))) + y*(25*end/2 - 25*start/2 + y*(-15*end/4 + 15*start/4))) + y*(-5*end + 5*start + y*(3*end/2 - 3*start/2))) + 2*end - 2*start + x**2*(-5*end + 5*start + x*(-3*end + 3*start + y*(6*end - 6*start + y*(-15*end/4 + 15*start/4 + y*(3*end/4 - 3*start/4)))) + y*(10*end - 10*start + y*(-25*end/4 + 25*start/4 + y*(5*end/4 - 5*start/4)))) + y*(-4*end + 4*start + y*(5*end/2 - 5*start/2 + y*(-end/2 + start/2)))


    return output


def int10(a, b, c, d, x, y, start, end):
    output = a*(a*(a*(c*(c*(c*(-9*end**7/28 + 9*start**7/28) + d*(-9*end**6/8 + 9*start**6/8) - 5*end**6/8 + 5*start**6/8 + y*(9*end**6/8 - 9*start**6/8)) + d*(d*(-27*end**5/20 + 27*start**5/20) - 3*end**5/2 + 3*start**5/2 + y*(27*end**5/10 - 27*start**5/10)) + y*(3*end**5/2 - 3*start**5/2 + y*(-27*end**5/20 + 27*start**5/20))) + d*(d*(d*(-9*end**4/16 + 9*start**4/16) - 15*end**4/16 + 15*start**4/16 + y*(27*end**4/16 - 27*start**4/16)) + y*(15*end**4/8 - 15*start**4/8 + y*(-27*end**4/16 + 27*start**4/16))) + 3*end**4/8 - 3*start**4/8 + y**2*(-15*end**4/16 + 15*start**4/16 + y*(9*end**4/16 - 9*start**4/16))) + b*(c*(c*(c*(-9*end**6/8 + 9*start**6/8) + d*(-81*end**5/20 + 81*start**5/20) - 9*end**5/4 + 9*start**5/4 + y*(81*end**5/20 - 81*start**5/20)) + d*(d*(-81*end**4/16 + 81*start**4/16) - 45*end**4/8 + 45*start**4/8 + y*(81*end**4/8 - 81*start**4/8)) + y*(45*end**4/8 - 45*start**4/8 + y*(-81*end**4/16 + 81*start**4/16))) + d*(d*(d*(-9*end**3/4 + 9*start**3/4) - 15*end**3/4 + 15*start**3/4 + y*(27*end**3/4 - 27*start**3/4)) + y*(15*end**3/2 - 15*start**3/2 + y*(-27*end**3/4 + 27*start**3/4))) + 3*end**3/2 - 3*start**3/2 + y**2*(-15*end**3/4 + 15*start**3/4 + y*(9*end**3/4 - 9*start**3/4))) + c*(c*(c*(5*end**6/8 - 5*start**6/8 + x*(9*end**6/8 - 9*start**6/8)) + d*(9*end**5/4 - 9*start**5/4 + x*(81*end**5/20 - 81*start**5/20)) + 5*end**5/4 - 5*start**5/4 + x*(9*end**5/4 - 9*start**5/4 + y*(-81*end**5/20 + 81*start**5/20)) + y*(-9*end**5/4 + 9*start**5/4)) + d*(d*(45*end**4/16 - 45*start**4/16 + x*(81*end**4/16 - 81*start**4/16)) + 25*end**4/8 - 25*start**4/8 + x*(45*end**4/8 - 45*start**4/8 + y*(-81*end**4/8 + 81*start**4/8)) + y*(-45*end**4/8 + 45*start**4/8)) + x*y*(-45*end**4/8 + 45*start**4/8 + y*(81*end**4/16 - 81*start**4/16)) + y*(-25*end**4/8 + 25*start**4/8 + y*(45*end**4/16 - 45*start**4/16))) + d*(d*(d*(5*end**3/4 - 5*start**3/4 + x*(9*end**3/4 - 9*start**3/4)) + 25*end**3/12 - 25*start**3/12 + x*(15*end**3/4 - 15*start**3/4 + y*(-27*end**3/4 + 27*start**3/4)) + y*(-15*end**3/4 + 15*start**3/4)) + x*y*(-15*end**3/2 + 15*start**3/2 + y*(27*end**3/4 - 27*start**3/4)) + y*(-25*end**3/6 + 25*start**3/6 + y*(15*end**3/4 - 15*start**3/4))) - 5*end**3/6 + 5*start**3/6 + x*(-3*end**3/2 + 3*start**3/2 + y**2*(15*end**3/4 - 15*start**3/4 + y*(-9*end**3/4 + 9*start**3/4))) + y**2*(25*end**3/12 - 25*start**3/12 + y*(-5*end**3/4 + 5*start**3/4))) + b*(b*(c*(c*(c*(-27*end**5/20 + 27*start**5/20) + d*(-81*end**4/16 + 81*start**4/16) - 45*end**4/16 + 45*start**4/16 + y*(81*end**4/16 - 81*start**4/16)) + d*(d*(-27*end**3/4 + 27*start**3/4) - 15*end**3/2 + 15*start**3/2 + y*(27*end**3/2 - 27*start**3/2)) + y*(15*end**3/2 - 15*start**3/2 + y*(-27*end**3/4 + 27*start**3/4))) + d*(d*(d*(-27*end**2/8 + 27*start**2/8) - 45*end**2/8 + 45*start**2/8 + y*(81*end**2/8 - 81*start**2/8)) + y*(45*end**2/4 - 45*start**2/4 + y*(-81*end**2/8 + 81*start**2/8))) + 9*end**2/4 - 9*start**2/4 + y**2*(-45*end**2/8 + 45*start**2/8 + y*(27*end**2/8 - 27*start**2/8))) + c*(c*(c*(3*end**5/2 - 3*start**5/2 + x*(27*end**5/10 - 27*start**5/10)) + d*(45*end**4/8 - 45*start**4/8 + x*(81*end**4/8 - 81*start**4/8)) + 25*end**4/8 - 25*start**4/8 + x*(45*end**4/8 - 45*start**4/8 + y*(-81*end**4/8 + 81*start**4/8)) + y*(-45*end**4/8 + 45*start**4/8)) + d*(d*(15*end**3/2 - 15*start**3/2 + x*(27*end**3/2 - 27*start**3/2)) + 25*end**3/3 - 25*start**3/3 + x*(15*end**3 - 15*start**3 + y*(-27*end**3 + 27*start**3)) + y*(-15*end**3 + 15*start**3)) + x*y*(-15*end**3 + 15*start**3 + y*(27*end**3/2 - 27*start**3/2)) + y*(-25*end**3/3 + 25*start**3/3 + y*(15*end**3/2 - 15*start**3/2))) + d*(d*(d*(15*end**2/4 - 15*start**2/4 + x*(27*end**2/4 - 27*start**2/4)) + 25*end**2/4 - 25*start**2/4 + x*(45*end**2/4 - 45*start**2/4 + y*(-81*end**2/4 + 81*start**2/4)) + y*(-45*end**2/4 + 45*start**2/4)) + x*y*(-45*end**2/2 + 45*start**2/2 + y*(81*end**2/4 - 81*start**2/4)) + y*(-25*end**2/2 + 25*start**2/2 + y*(45*end**2/4 - 45*start**2/4))) - 5*end**2/2 + 5*start**2/2 + x*(-9*end**2/2 + 9*start**2/2 + y**2*(45*end**2/4 - 45*start**2/4 + y*(-27*end**2/4 + 27*start**2/4))) + y**2*(25*end**2/4 - 25*start**2/4 + y*(-15*end**2/4 + 15*start**2/4))) + c*(c*(c*x*(-3*end**5/2 + 3*start**5/2 + x*(-27*end**5/20 + 27*start**5/20)) + d*x*(-45*end**4/8 + 45*start**4/8 + x*(-81*end**4/16 + 81*start**4/16)) + x*(-25*end**4/8 + 25*start**4/8 + x*(-45*end**4/16 + 45*start**4/16 + y*(81*end**4/16 - 81*start**4/16)) + y*(45*end**4/8 - 45*start**4/8))) + d*(d*x*(-15*end**3/2 + 15*start**3/2 + x*(-27*end**3/4 + 27*start**3/4)) + x*(-25*end**3/3 + 25*start**3/3 + x*(-15*end**3/2 + 15*start**3/2 + y*(27*end**3/2 - 27*start**3/2)) + y*(15*end**3 - 15*start**3))) + x*(x*y*(15*end**3/2 - 15*start**3/2 + y*(-27*end**3/4 + 27*start**3/4)) + y*(25*end**3/3 - 25*start**3/3 + y*(-15*end**3/2 + 15*start**3/2)))) + d*(d*(d*x*(-15*end**2/4 + 15*start**2/4 + x*(-27*end**2/8 + 27*start**2/8)) + x*(-25*end**2/4 + 25*start**2/4 + x*(-45*end**2/8 + 45*start**2/8 + y*(81*end**2/8 - 81*start**2/8)) + y*(45*end**2/4 - 45*start**2/4))) + x*(x*y*(45*end**2/4 - 45*start**2/4 + y*(-81*end**2/8 + 81*start**2/8)) + y*(25*end**2/2 - 25*start**2/2 + y*(-45*end**2/4 + 45*start**2/4)))) + x*(5*end**2/2 - 5*start**2/2 + x*(9*end**2/4 - 9*start**2/4 + y**2*(-45*end**2/8 + 45*start**2/8 + y*(27*end**2/8 - 27*start**2/8))) + y**2*(-25*end**2/4 + 25*start**2/4 + y*(15*end**2/4 - 15*start**2/4)))) + b*(b*(b*(c*(c*(c*(-9*end**4/16 + 9*start**4/16) + d*(-9*end**3/4 + 9*start**3/4) - 5*end**3/4 + 5*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + d*(d*(-27*end**2/8 + 27*start**2/8) - 15*end**2/4 + 15*start**2/4 + y*(27*end**2/4 - 27*start**2/4)) + y*(15*end**2/4 - 15*start**2/4 + y*(-27*end**2/8 + 27*start**2/8))) + d*(d*(d*(-9*end/4 + 9*start/4) - 15*end/4 + 15*start/4 + y*(27*end/4 - 27*start/4)) + y*(15*end/2 - 15*start/2 + y*(-27*end/4 + 27*start/4))) + 3*end/2 - 3*start/2 + y**2*(-15*end/4 + 15*start/4 + y*(9*end/4 - 9*start/4))) + c*(c*(c*(15*end**4/16 - 15*start**4/16 + x*(27*end**4/16 - 27*start**4/16)) + d*(15*end**3/4 - 15*start**3/4 + x*(27*end**3/4 - 27*start**3/4)) + 25*end**3/12 - 25*start**3/12 + x*(15*end**3/4 - 15*start**3/4 + y*(-27*end**3/4 + 27*start**3/4)) + y*(-15*end**3/4 + 15*start**3/4)) + d*(d*(45*end**2/8 - 45*start**2/8 + x*(81*end**2/8 - 81*start**2/8)) + 25*end**2/4 - 25*start**2/4 + x*(45*end**2/4 - 45*start**2/4 + y*(-81*end**2/4 + 81*start**2/4)) + y*(-45*end**2/4 + 45*start**2/4)) + x*y*(-45*end**2/4 + 45*start**2/4 + y*(81*end**2/8 - 81*start**2/8)) + y*(-25*end**2/4 + 25*start**2/4 + y*(45*end**2/8 - 45*start**2/8))) + d*(d*(d*(15*end/4 - 15*start/4 + x*(27*end/4 - 27*start/4)) + 25*end/4 - 25*start/4 + x*(45*end/4 - 45*start/4 + y*(-81*end/4 + 81*start/4)) + y*(-45*end/4 + 45*start/4)) + x*y*(-45*end/2 + 45*start/2 + y*(81*end/4 - 81*start/4)) + y*(-25*end/2 + 25*start/2 + y*(45*end/4 - 45*start/4))) - 5*end/2 + 5*start/2 + x*(-9*end/2 + 9*start/2 + y**2*(45*end/4 - 45*start/4 + y*(-27*end/4 + 27*start/4))) + y**2*(25*end/4 - 25*start/4 + y*(-15*end/4 + 15*start/4))) + c*(c*(c*x*(-15*end**4/8 + 15*start**4/8 + x*(-27*end**4/16 + 27*start**4/16)) + d*x*(-15*end**3/2 + 15*start**3/2 + x*(-27*end**3/4 + 27*start**3/4)) + x*(-25*end**3/6 + 25*start**3/6 + x*(-15*end**3/4 + 15*start**3/4 + y*(27*end**3/4 - 27*start**3/4)) + y*(15*end**3/2 - 15*start**3/2))) + d*(d*x*(-45*end**2/4 + 45*start**2/4 + x*(-81*end**2/8 + 81*start**2/8)) + x*(-25*end**2/2 + 25*start**2/2 + x*(-45*end**2/4 + 45*start**2/4 + y*(81*end**2/4 - 81*start**2/4)) + y*(45*end**2/2 - 45*start**2/2))) + x*(x*y*(45*end**2/4 - 45*start**2/4 + y*(-81*end**2/8 + 81*start**2/8)) + y*(25*end**2/2 - 25*start**2/2 + y*(-45*end**2/4 + 45*start**2/4)))) + d*(d*(d*x*(-15*end/2 + 15*start/2 + x*(-27*end/4 + 27*start/4)) + x*(-25*end/2 + 25*start/2 + x*(-45*end/4 + 45*start/4 + y*(81*end/4 - 81*start/4)) + y*(45*end/2 - 45*start/2))) + x*(x*y*(45*end/2 - 45*start/2 + y*(-81*end/4 + 81*start/4)) + y*(25*end - 25*start + y*(-45*end/2 + 45*start/2)))) + x*(5*end - 5*start + x*(9*end/2 - 9*start/2 + y**2*(-45*end/4 + 45*start/4 + y*(27*end/4 - 27*start/4))) + y**2*(-25*end/2 + 25*start/2 + y*(15*end/2 - 15*start/2)))) + c*(c*(c*(-3*end**4/8 + 3*start**4/8 + x**2*(15*end**4/16 - 15*start**4/16 + x*(9*end**4/16 - 9*start**4/16))) + d*(-3*end**3/2 + 3*start**3/2 + x**2*(15*end**3/4 - 15*start**3/4 + x*(9*end**3/4 - 9*start**3/4))) - 5*end**3/6 + 5*start**3/6 + x**2*(25*end**3/12 - 25*start**3/12 + x*(5*end**3/4 - 5*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + y*(-15*end**3/4 + 15*start**3/4)) + y*(3*end**3/2 - 3*start**3/2)) + d*(d*(-9*end**2/4 + 9*start**2/4 + x**2*(45*end**2/8 - 45*start**2/8 + x*(27*end**2/8 - 27*start**2/8))) - 5*end**2/2 + 5*start**2/2 + x**2*(25*end**2/4 - 25*start**2/4 + x*(15*end**2/4 - 15*start**2/4 + y*(-27*end**2/4 + 27*start**2/4)) + y*(-45*end**2/4 + 45*start**2/4)) + y*(9*end**2/2 - 9*start**2/2)) + x**2*(x*y*(-15*end**2/4 + 15*start**2/4 + y*(27*end**2/8 - 27*start**2/8)) + y*(-25*end**2/4 + 25*start**2/4 + y*(45*end**2/8 - 45*start**2/8))) + y*(5*end**2/2 - 5*start**2/2 + y*(-9*end**2/4 + 9*start**2/4))) + d*(d*(d*(-3*end/2 + 3*start/2 + x**2*(15*end/4 - 15*start/4 + x*(9*end/4 - 9*start/4))) - 5*end/2 + 5*start/2 + x**2*(25*end/4 - 25*start/4 + x*(15*end/4 - 15*start/4 + y*(-27*end/4 + 27*start/4)) + y*(-45*end/4 + 45*start/4)) + y*(9*end/2 - 9*start/2)) + x**2*(x*y*(-15*end/2 + 15*start/2 + y*(27*end/4 - 27*start/4)) + y*(-25*end/2 + 25*start/2 + y*(45*end/4 - 45*start/4))) + y*(5*end - 5*start + y*(-9*end/2 + 9*start/2))) + end - start + x**2*(-5*end/2 + 5*start/2 + x*(-3*end/2 + 3*start/2 + y**2*(15*end/4 - 15*start/4 + y*(-9*end/4 + 9*start/4))) + y**2*(25*end/4 - 25*start/4 + y*(-15*end/4 + 15*start/4))) + y**2*(-5*end/2 + 5*start/2 + y*(3*end/2 - 3*start/2))


    return output


def int11(a, b, c, d, x, y, start, end):
    output = a*(a*(a*(c*(c*(c*(9*end**7/28 - 9*start**7/28) + d*(9*end**6/8 - 9*start**6/8) - 5*end**6/8 + 5*start**6/8 + y*(-9*end**6/8 + 9*start**6/8)) + d*(d*(27*end**5/20 - 27*start**5/20) - 3*end**5/2 + 3*start**5/2 + y*(-27*end**5/10 + 27*start**5/10)) + y*(3*end**5/2 - 3*start**5/2 + y*(27*end**5/20 - 27*start**5/20))) + d*(d*(d*(9*end**4/16 - 9*start**4/16) - 15*end**4/16 + 15*start**4/16 + y*(-27*end**4/16 + 27*start**4/16)) + y*(15*end**4/8 - 15*start**4/8 + y*(27*end**4/16 - 27*start**4/16))) + 3*end**4/8 - 3*start**4/8 + y**2*(-15*end**4/16 + 15*start**4/16 + y*(-9*end**4/16 + 9*start**4/16))) + b*(c*(c*(c*(9*end**6/8 - 9*start**6/8) + d*(81*end**5/20 - 81*start**5/20) - 9*end**5/4 + 9*start**5/4 + y*(-81*end**5/20 + 81*start**5/20)) + d*(d*(81*end**4/16 - 81*start**4/16) - 45*end**4/8 + 45*start**4/8 + y*(-81*end**4/8 + 81*start**4/8)) + y*(45*end**4/8 - 45*start**4/8 + y*(81*end**4/16 - 81*start**4/16))) + d*(d*(d*(9*end**3/4 - 9*start**3/4) - 15*end**3/4 + 15*start**3/4 + y*(-27*end**3/4 + 27*start**3/4)) + y*(15*end**3/2 - 15*start**3/2 + y*(27*end**3/4 - 27*start**3/4))) + 3*end**3/2 - 3*start**3/2 + y**2*(-15*end**3/4 + 15*start**3/4 + y*(-9*end**3/4 + 9*start**3/4))) + c*(c*(c*(-5*end**6/8 + 5*start**6/8 + x*(-9*end**6/8 + 9*start**6/8)) + d*(-9*end**5/4 + 9*start**5/4 + x*(-81*end**5/20 + 81*start**5/20)) + 5*end**5/4 - 5*start**5/4 + x*(9*end**5/4 - 9*start**5/4 + y*(81*end**5/20 - 81*start**5/20)) + y*(9*end**5/4 - 9*start**5/4)) + d*(d*(-45*end**4/16 + 45*start**4/16 + x*(-81*end**4/16 + 81*start**4/16)) + 25*end**4/8 - 25*start**4/8 + x*(45*end**4/8 - 45*start**4/8 + y*(81*end**4/8 - 81*start**4/8)) + y*(45*end**4/8 - 45*start**4/8)) + x*y*(-45*end**4/8 + 45*start**4/8 + y*(-81*end**4/16 + 81*start**4/16)) + y*(-25*end**4/8 + 25*start**4/8 + y*(-45*end**4/16 + 45*start**4/16))) + d*(d*(d*(-5*end**3/4 + 5*start**3/4 + x*(-9*end**3/4 + 9*start**3/4)) + 25*end**3/12 - 25*start**3/12 + x*(15*end**3/4 - 15*start**3/4 + y*(27*end**3/4 - 27*start**3/4)) + y*(15*end**3/4 - 15*start**3/4)) + x*y*(-15*end**3/2 + 15*start**3/2 + y*(-27*end**3/4 + 27*start**3/4)) + y*(-25*end**3/6 + 25*start**3/6 + y*(-15*end**3/4 + 15*start**3/4))) - 5*end**3/6 + 5*start**3/6 + x*(-3*end**3/2 + 3*start**3/2 + y**2*(15*end**3/4 - 15*start**3/4 + y*(9*end**3/4 - 9*start**3/4))) + y**2*(25*end**3/12 - 25*start**3/12 + y*(5*end**3/4 - 5*start**3/4))) + b*(b*(c*(c*(c*(27*end**5/20 - 27*start**5/20) + d*(81*end**4/16 - 81*start**4/16) - 45*end**4/16 + 45*start**4/16 + y*(-81*end**4/16 + 81*start**4/16)) + d*(d*(27*end**3/4 - 27*start**3/4) - 15*end**3/2 + 15*start**3/2 + y*(-27*end**3/2 + 27*start**3/2)) + y*(15*end**3/2 - 15*start**3/2 + y*(27*end**3/4 - 27*start**3/4))) + d*(d*(d*(27*end**2/8 - 27*start**2/8) - 45*end**2/8 + 45*start**2/8 + y*(-81*end**2/8 + 81*start**2/8)) + y*(45*end**2/4 - 45*start**2/4 + y*(81*end**2/8 - 81*start**2/8))) + 9*end**2/4 - 9*start**2/4 + y**2*(-45*end**2/8 + 45*start**2/8 + y*(-27*end**2/8 + 27*start**2/8))) + c*(c*(c*(-3*end**5/2 + 3*start**5/2 + x*(-27*end**5/10 + 27*start**5/10)) + d*(-45*end**4/8 + 45*start**4/8 + x*(-81*end**4/8 + 81*start**4/8)) + 25*end**4/8 - 25*start**4/8 + x*(45*end**4/8 - 45*start**4/8 + y*(81*end**4/8 - 81*start**4/8)) + y*(45*end**4/8 - 45*start**4/8)) + d*(d*(-15*end**3/2 + 15*start**3/2 + x*(-27*end**3/2 + 27*start**3/2)) + 25*end**3/3 - 25*start**3/3 + x*(15*end**3 - 15*start**3 + y*(27*end**3 - 27*start**3)) + y*(15*end**3 - 15*start**3)) + x*y*(-15*end**3 + 15*start**3 + y*(-27*end**3/2 + 27*start**3/2)) + y*(-25*end**3/3 + 25*start**3/3 + y*(-15*end**3/2 + 15*start**3/2))) + d*(d*(d*(-15*end**2/4 + 15*start**2/4 + x*(-27*end**2/4 + 27*start**2/4)) + 25*end**2/4 - 25*start**2/4 + x*(45*end**2/4 - 45*start**2/4 + y*(81*end**2/4 - 81*start**2/4)) + y*(45*end**2/4 - 45*start**2/4)) + x*y*(-45*end**2/2 + 45*start**2/2 + y*(-81*end**2/4 + 81*start**2/4)) + y*(-25*end**2/2 + 25*start**2/2 + y*(-45*end**2/4 + 45*start**2/4))) - 5*end**2/2 + 5*start**2/2 + x*(-9*end**2/2 + 9*start**2/2 + y**2*(45*end**2/4 - 45*start**2/4 + y*(27*end**2/4 - 27*start**2/4))) + y**2*(25*end**2/4 - 25*start**2/4 + y*(15*end**2/4 - 15*start**2/4))) + c*(c*(c*x*(3*end**5/2 - 3*start**5/2 + x*(27*end**5/20 - 27*start**5/20)) + d*x*(45*end**4/8 - 45*start**4/8 + x*(81*end**4/16 - 81*start**4/16)) + x*(-25*end**4/8 + 25*start**4/8 + x*(-45*end**4/16 + 45*start**4/16 + y*(-81*end**4/16 + 81*start**4/16)) + y*(-45*end**4/8 + 45*start**4/8))) + d*(d*x*(15*end**3/2 - 15*start**3/2 + x*(27*end**3/4 - 27*start**3/4)) + x*(-25*end**3/3 + 25*start**3/3 + x*(-15*end**3/2 + 15*start**3/2 + y*(-27*end**3/2 + 27*start**3/2)) + y*(-15*end**3 + 15*start**3))) + x*(x*y*(15*end**3/2 - 15*start**3/2 + y*(27*end**3/4 - 27*start**3/4)) + y*(25*end**3/3 - 25*start**3/3 + y*(15*end**3/2 - 15*start**3/2)))) + d*(d*(d*x*(15*end**2/4 - 15*start**2/4 + x*(27*end**2/8 - 27*start**2/8)) + x*(-25*end**2/4 + 25*start**2/4 + x*(-45*end**2/8 + 45*start**2/8 + y*(-81*end**2/8 + 81*start**2/8)) + y*(-45*end**2/4 + 45*start**2/4))) + x*(x*y*(45*end**2/4 - 45*start**2/4 + y*(81*end**2/8 - 81*start**2/8)) + y*(25*end**2/2 - 25*start**2/2 + y*(45*end**2/4 - 45*start**2/4)))) + x*(5*end**2/2 - 5*start**2/2 + x*(9*end**2/4 - 9*start**2/4 + y**2*(-45*end**2/8 + 45*start**2/8 + y*(-27*end**2/8 + 27*start**2/8))) + y**2*(-25*end**2/4 + 25*start**2/4 + y*(-15*end**2/4 + 15*start**2/4)))) + b*(b*(b*(c*(c*(c*(9*end**4/16 - 9*start**4/16) + d*(9*end**3/4 - 9*start**3/4) - 5*end**3/4 + 5*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + d*(d*(27*end**2/8 - 27*start**2/8) - 15*end**2/4 + 15*start**2/4 + y*(-27*end**2/4 + 27*start**2/4)) + y*(15*end**2/4 - 15*start**2/4 + y*(27*end**2/8 - 27*start**2/8))) + d*(d*(d*(9*end/4 - 9*start/4) - 15*end/4 + 15*start/4 + y*(-27*end/4 + 27*start/4)) + y*(15*end/2 - 15*start/2 + y*(27*end/4 - 27*start/4))) + 3*end/2 - 3*start/2 + y**2*(-15*end/4 + 15*start/4 + y*(-9*end/4 + 9*start/4))) + c*(c*(c*(-15*end**4/16 + 15*start**4/16 + x*(-27*end**4/16 + 27*start**4/16)) + d*(-15*end**3/4 + 15*start**3/4 + x*(-27*end**3/4 + 27*start**3/4)) + 25*end**3/12 - 25*start**3/12 + x*(15*end**3/4 - 15*start**3/4 + y*(27*end**3/4 - 27*start**3/4)) + y*(15*end**3/4 - 15*start**3/4)) + d*(d*(-45*end**2/8 + 45*start**2/8 + x*(-81*end**2/8 + 81*start**2/8)) + 25*end**2/4 - 25*start**2/4 + x*(45*end**2/4 - 45*start**2/4 + y*(81*end**2/4 - 81*start**2/4)) + y*(45*end**2/4 - 45*start**2/4)) + x*y*(-45*end**2/4 + 45*start**2/4 + y*(-81*end**2/8 + 81*start**2/8)) + y*(-25*end**2/4 + 25*start**2/4 + y*(-45*end**2/8 + 45*start**2/8))) + d*(d*(d*(-15*end/4 + 15*start/4 + x*(-27*end/4 + 27*start/4)) + 25*end/4 - 25*start/4 + x*(45*end/4 - 45*start/4 + y*(81*end/4 - 81*start/4)) + y*(45*end/4 - 45*start/4)) + x*y*(-45*end/2 + 45*start/2 + y*(-81*end/4 + 81*start/4)) + y*(-25*end/2 + 25*start/2 + y*(-45*end/4 + 45*start/4))) - 5*end/2 + 5*start/2 + x*(-9*end/2 + 9*start/2 + y**2*(45*end/4 - 45*start/4 + y*(27*end/4 - 27*start/4))) + y**2*(25*end/4 - 25*start/4 + y*(15*end/4 - 15*start/4))) + c*(c*(c*x*(15*end**4/8 - 15*start**4/8 + x*(27*end**4/16 - 27*start**4/16)) + d*x*(15*end**3/2 - 15*start**3/2 + x*(27*end**3/4 - 27*start**3/4)) + x*(-25*end**3/6 + 25*start**3/6 + x*(-15*end**3/4 + 15*start**3/4 + y*(-27*end**3/4 + 27*start**3/4)) + y*(-15*end**3/2 + 15*start**3/2))) + d*(d*x*(45*end**2/4 - 45*start**2/4 + x*(81*end**2/8 - 81*start**2/8)) + x*(-25*end**2/2 + 25*start**2/2 + x*(-45*end**2/4 + 45*start**2/4 + y*(-81*end**2/4 + 81*start**2/4)) + y*(-45*end**2/2 + 45*start**2/2))) + x*(x*y*(45*end**2/4 - 45*start**2/4 + y*(81*end**2/8 - 81*start**2/8)) + y*(25*end**2/2 - 25*start**2/2 + y*(45*end**2/4 - 45*start**2/4)))) + d*(d*(d*x*(15*end/2 - 15*start/2 + x*(27*end/4 - 27*start/4)) + x*(-25*end/2 + 25*start/2 + x*(-45*end/4 + 45*start/4 + y*(-81*end/4 + 81*start/4)) + y*(-45*end/2 + 45*start/2))) + x*(x*y*(45*end/2 - 45*start/2 + y*(81*end/4 - 81*start/4)) + y*(25*end - 25*start + y*(45*end/2 - 45*start/2)))) + x*(5*end - 5*start + x*(9*end/2 - 9*start/2 + y**2*(-45*end/4 + 45*start/4 + y*(-27*end/4 + 27*start/4))) + y**2*(-25*end/2 + 25*start/2 + y*(-15*end/2 + 15*start/2)))) + c*(c*(c*(3*end**4/8 - 3*start**4/8 + x**2*(-15*end**4/16 + 15*start**4/16 + x*(-9*end**4/16 + 9*start**4/16))) + d*(3*end**3/2 - 3*start**3/2 + x**2*(-15*end**3/4 + 15*start**3/4 + x*(-9*end**3/4 + 9*start**3/4))) - 5*end**3/6 + 5*start**3/6 + x**2*(25*end**3/12 - 25*start**3/12 + x*(5*end**3/4 - 5*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(15*end**3/4 - 15*start**3/4)) + y*(-3*end**3/2 + 3*start**3/2)) + d*(d*(9*end**2/4 - 9*start**2/4 + x**2*(-45*end**2/8 + 45*start**2/8 + x*(-27*end**2/8 + 27*start**2/8))) - 5*end**2/2 + 5*start**2/2 + x**2*(25*end**2/4 - 25*start**2/4 + x*(15*end**2/4 - 15*start**2/4 + y*(27*end**2/4 - 27*start**2/4)) + y*(45*end**2/4 - 45*start**2/4)) + y*(-9*end**2/2 + 9*start**2/2)) + x**2*(x*y*(-15*end**2/4 + 15*start**2/4 + y*(-27*end**2/8 + 27*start**2/8)) + y*(-25*end**2/4 + 25*start**2/4 + y*(-45*end**2/8 + 45*start**2/8))) + y*(5*end**2/2 - 5*start**2/2 + y*(9*end**2/4 - 9*start**2/4))) + d*(d*(d*(3*end/2 - 3*start/2 + x**2*(-15*end/4 + 15*start/4 + x*(-9*end/4 + 9*start/4))) - 5*end/2 + 5*start/2 + x**2*(25*end/4 - 25*start/4 + x*(15*end/4 - 15*start/4 + y*(27*end/4 - 27*start/4)) + y*(45*end/4 - 45*start/4)) + y*(-9*end/2 + 9*start/2)) + x**2*(x*y*(-15*end/2 + 15*start/2 + y*(-27*end/4 + 27*start/4)) + y*(-25*end/2 + 25*start/2 + y*(-45*end/4 + 45*start/4))) + y*(5*end - 5*start + y*(9*end/2 - 9*start/2))) + end - start + x**2*(-5*end/2 + 5*start/2 + x*(-3*end/2 + 3*start/2 + y**2*(15*end/4 - 15*start/4 + y*(9*end/4 - 9*start/4))) + y**2*(25*end/4 - 25*start/4 + y*(15*end/4 - 15*start/4))) + y**2*(-5*end/2 + 5*start/2 + y*(-3*end/2 + 3*start/2))



    return output


def int12(a, b, c, d, x, y, start, end):
    output = a*(a*(a*(c*(c*(c*(-3*end**7/28 + 3*start**7/28) + d*(-3*end**6/8 + 3*start**6/8) + 5*end**6/8 - 5*start**6/8 + y*(3*end**6/8 - 3*start**6/8)) + d*(d*(-9*end**5/20 + 9*start**5/20) + 3*end**5/2 - 3*start**5/2 + y*(9*end**5/10 - 9*start**5/10)) - 6*end**5/5 + 6*start**5/5 + y*(-3*end**5/2 + 3*start**5/2 + y*(-9*end**5/20 + 9*start**5/20))) + d*(d*(d*(-3*end**4/16 + 3*start**4/16) + 15*end**4/16 - 15*start**4/16 + y*(9*end**4/16 - 9*start**4/16)) - 3*end**4/2 + 3*start**4/2 + y*(-15*end**4/8 + 15*start**4/8 + y*(-9*end**4/16 + 9*start**4/16))) + 3*end**4/4 - 3*start**4/4 + y*(3*end**4/2 - 3*start**4/2 + y*(15*end**4/16 - 15*start**4/16 + y*(3*end**4/16 - 3*start**4/16)))) + b*(c*(c*(c*(-3*end**6/8 + 3*start**6/8) + d*(-27*end**5/20 + 27*start**5/20) + 9*end**5/4 - 9*start**5/4 + y*(27*end**5/20 - 27*start**5/20)) + d*(d*(-27*end**4/16 + 27*start**4/16) + 45*end**4/8 - 45*start**4/8 + y*(27*end**4/8 - 27*start**4/8)) - 9*end**4/2 + 9*start**4/2 + y*(-45*end**4/8 + 45*start**4/8 + y*(-27*end**4/16 + 27*start**4/16))) + d*(d*(d*(-3*end**3/4 + 3*start**3/4) + 15*end**3/4 - 15*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) - 6*end**3 + 6*start**3 + y*(-15*end**3/2 + 15*start**3/2 + y*(-9*end**3/4 + 9*start**3/4))) + 3*end**3 - 3*start**3 + y*(6*end**3 - 6*start**3 + y*(15*end**3/4 - 15*start**3/4 + y*(3*end**3/4 - 3*start**3/4)))) + c*(c*(c*(5*end**6/24 - 5*start**6/24 + x*(3*end**6/8 - 3*start**6/8)) + d*(3*end**5/4 - 3*start**5/4 + x*(27*end**5/20 - 27*start**5/20)) - 5*end**5/4 + 5*start**5/4 + x*(-9*end**5/4 + 9*start**5/4 + y*(-27*end**5/20 + 27*start**5/20)) + y*(-3*end**5/4 + 3*start**5/4)) + d*(d*(15*end**4/16 - 15*start**4/16 + x*(27*end**4/16 - 27*start**4/16)) - 25*end**4/8 + 25*start**4/8 + x*(-45*end**4/8 + 45*start**4/8 + y*(-27*end**4/8 + 27*start**4/8)) + y*(-15*end**4/8 + 15*start**4/8)) + 5*end**4/2 - 5*start**4/2 + x*(9*end**4/2 - 9*start**4/2 + y*(45*end**4/8 - 45*start**4/8 + y*(27*end**4/16 - 27*start**4/16))) + y*(25*end**4/8 - 25*start**4/8 + y*(15*end**4/16 - 15*start**4/16))) + d*(d*(d*(5*end**3/12 - 5*start**3/12 + x*(3*end**3/4 - 3*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(-15*end**3/4 + 15*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + y*(-5*end**3/4 + 5*start**3/4)) + 10*end**3/3 - 10*start**3/3 + x*(6*end**3 - 6*start**3 + y*(15*end**3/2 - 15*start**3/2 + y*(9*end**3/4 - 9*start**3/4))) + y*(25*end**3/6 - 25*start**3/6 + y*(5*end**3/4 - 5*start**3/4))) - 5*end**3/3 + 5*start**3/3 + x*(-3*end**3 + 3*start**3 + y*(-6*end**3 + 6*start**3 + y*(-15*end**3/4 + 15*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)))) + y*(-10*end**3/3 + 10*start**3/3 + y*(-25*end**3/12 + 25*start**3/12 + y*(-5*end**3/12 + 5*start**3/12)))) + b*(b*(c*(c*(c*(-9*end**5/20 + 9*start**5/20) + d*(-27*end**4/16 + 27*start**4/16) + 45*end**4/16 - 45*start**4/16 + y*(27*end**4/16 - 27*start**4/16)) + d*(d*(-9*end**3/4 + 9*start**3/4) + 15*end**3/2 - 15*start**3/2 + y*(9*end**3/2 - 9*start**3/2)) - 6*end**3 + 6*start**3 + y*(-15*end**3/2 + 15*start**3/2 + y*(-9*end**3/4 + 9*start**3/4))) + d*(d*(d*(-9*end**2/8 + 9*start**2/8) + 45*end**2/8 - 45*start**2/8 + y*(27*end**2/8 - 27*start**2/8)) - 9*end**2 + 9*start**2 + y*(-45*end**2/4 + 45*start**2/4 + y*(-27*end**2/8 + 27*start**2/8))) + 9*end**2/2 - 9*start**2/2 + y*(9*end**2 - 9*start**2 + y*(45*end**2/8 - 45*start**2/8 + y*(9*end**2/8 - 9*start**2/8)))) + c*(c*(c*(end**5/2 - start**5/2 + x*(9*end**5/10 - 9*start**5/10)) + d*(15*end**4/8 - 15*start**4/8 + x*(27*end**4/8 - 27*start**4/8)) - 25*end**4/8 + 25*start**4/8 + x*(-45*end**4/8 + 45*start**4/8 + y*(-27*end**4/8 + 27*start**4/8)) + y*(-15*end**4/8 + 15*start**4/8)) + d*(d*(5*end**3/2 - 5*start**3/2 + x*(9*end**3/2 - 9*start**3/2)) - 25*end**3/3 + 25*start**3/3 + x*(-15*end**3 + 15*start**3 + y*(-9*end**3 + 9*start**3)) + y*(-5*end**3 + 5*start**3)) + 20*end**3/3 - 20*start**3/3 + x*(12*end**3 - 12*start**3 + y*(15*end**3 - 15*start**3 + y*(9*end**3/2 - 9*start**3/2))) + y*(25*end**3/3 - 25*start**3/3 + y*(5*end**3/2 - 5*start**3/2))) + d*(d*(d*(5*end**2/4 - 5*start**2/4 + x*(9*end**2/4 - 9*start**2/4)) - 25*end**2/4 + 25*start**2/4 + x*(-45*end**2/4 + 45*start**2/4 + y*(-27*end**2/4 + 27*start**2/4)) + y*(-15*end**2/4 + 15*start**2/4)) + 10*end**2 - 10*start**2 + x*(18*end**2 - 18*start**2 + y*(45*end**2/2 - 45*start**2/2 + y*(27*end**2/4 - 27*start**2/4))) + y*(25*end**2/2 - 25*start**2/2 + y*(15*end**2/4 - 15*start**2/4))) - 5*end**2 + 5*start**2 + x*(-9*end**2 + 9*start**2 + y*(-18*end**2 + 18*start**2 + y*(-45*end**2/4 + 45*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)))) + y*(-10*end**2 + 10*start**2 + y*(-25*end**2/4 + 25*start**2/4 + y*(-5*end**2/4 + 5*start**2/4)))) + c*(c*(c*x*(-end**5/2 + start**5/2 + x*(-9*end**5/20 + 9*start**5/20)) + d*x*(-15*end**4/8 + 15*start**4/8 + x*(-27*end**4/16 + 27*start**4/16)) + x*(25*end**4/8 - 25*start**4/8 + x*(45*end**4/16 - 45*start**4/16 + y*(27*end**4/16 - 27*start**4/16)) + y*(15*end**4/8 - 15*start**4/8))) + d*(d*x*(-5*end**3/2 + 5*start**3/2 + x*(-9*end**3/4 + 9*start**3/4)) + x*(25*end**3/3 - 25*start**3/3 + x*(15*end**3/2 - 15*start**3/2 + y*(9*end**3/2 - 9*start**3/2)) + y*(5*end**3 - 5*start**3))) + x*(-20*end**3/3 + 20*start**3/3 + x*(-6*end**3 + 6*start**3 + y*(-15*end**3/2 + 15*start**3/2 + y*(-9*end**3/4 + 9*start**3/4))) + y*(-25*end**3/3 + 25*start**3/3 + y*(-5*end**3/2 + 5*start**3/2)))) + d*(d*(d*x*(-5*end**2/4 + 5*start**2/4 + x*(-9*end**2/8 + 9*start**2/8)) + x*(25*end**2/4 - 25*start**2/4 + x*(45*end**2/8 - 45*start**2/8 + y*(27*end**2/8 - 27*start**2/8)) + y*(15*end**2/4 - 15*start**2/4))) + x*(-10*end**2 + 10*start**2 + x*(-9*end**2 + 9*start**2 + y*(-45*end**2/4 + 45*start**2/4 + y*(-27*end**2/8 + 27*start**2/8))) + y*(-25*end**2/2 + 25*start**2/2 + y*(-15*end**2/4 + 15*start**2/4)))) + x*(5*end**2 - 5*start**2 + x*(9*end**2/2 - 9*start**2/2 + y*(9*end**2 - 9*start**2 + y*(45*end**2/8 - 45*start**2/8 + y*(9*end**2/8 - 9*start**2/8)))) + y*(10*end**2 - 10*start**2 + y*(25*end**2/4 - 25*start**2/4 + y*(5*end**2/4 - 5*start**2/4))))) + b*(b*(b*(c*(c*(c*(-3*end**4/16 + 3*start**4/16) + d*(-3*end**3/4 + 3*start**3/4) + 5*end**3/4 - 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4)) + d*(d*(-9*end**2/8 + 9*start**2/8) + 15*end**2/4 - 15*start**2/4 + y*(9*end**2/4 - 9*start**2/4)) - 3*end**2 + 3*start**2 + y*(-15*end**2/4 + 15*start**2/4 + y*(-9*end**2/8 + 9*start**2/8))) + d*(d*(d*(-3*end/4 + 3*start/4) + 15*end/4 - 15*start/4 + y*(9*end/4 - 9*start/4)) - 6*end + 6*start + y*(-15*end/2 + 15*start/2 + y*(-9*end/4 + 9*start/4))) + 3*end - 3*start + y*(6*end - 6*start + y*(15*end/4 - 15*start/4 + y*(3*end/4 - 3*start/4)))) + c*(c*(c*(5*end**4/16 - 5*start**4/16 + x*(9*end**4/16 - 9*start**4/16)) + d*(5*end**3/4 - 5*start**3/4 + x*(9*end**3/4 - 9*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(-15*end**3/4 + 15*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + y*(-5*end**3/4 + 5*start**3/4)) + d*(d*(15*end**2/8 - 15*start**2/8 + x*(27*end**2/8 - 27*start**2/8)) - 25*end**2/4 + 25*start**2/4 + x*(-45*end**2/4 + 45*start**2/4 + y*(-27*end**2/4 + 27*start**2/4)) + y*(-15*end**2/4 + 15*start**2/4)) + 5*end**2 - 5*start**2 + x*(9*end**2 - 9*start**2 + y*(45*end**2/4 - 45*start**2/4 + y*(27*end**2/8 - 27*start**2/8))) + y*(25*end**2/4 - 25*start**2/4 + y*(15*end**2/8 - 15*start**2/8))) + d*(d*(d*(5*end/4 - 5*start/4 + x*(9*end/4 - 9*start/4)) - 25*end/4 + 25*start/4 + x*(-45*end/4 + 45*start/4 + y*(-27*end/4 + 27*start/4)) + y*(-15*end/4 + 15*start/4)) + 10*end - 10*start + x*(18*end - 18*start + y*(45*end/2 - 45*start/2 + y*(27*end/4 - 27*start/4))) + y*(25*end/2 - 25*start/2 + y*(15*end/4 - 15*start/4))) - 5*end + 5*start + x*(-9*end + 9*start + y*(-18*end + 18*start + y*(-45*end/4 + 45*start/4 + y*(-9*end/4 + 9*start/4)))) + y*(-10*end + 10*start + y*(-25*end/4 + 25*start/4 + y*(-5*end/4 + 5*start/4)))) + c*(c*(c*x*(-5*end**4/8 + 5*start**4/8 + x*(-9*end**4/16 + 9*start**4/16)) + d*x*(-5*end**3/2 + 5*start**3/2 + x*(-9*end**3/4 + 9*start**3/4)) + x*(25*end**3/6 - 25*start**3/6 + x*(15*end**3/4 - 15*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(5*end**3/2 - 5*start**3/2))) + d*(d*x*(-15*end**2/4 + 15*start**2/4 + x*(-27*end**2/8 + 27*start**2/8)) + x*(25*end**2/2 - 25*start**2/2 + x*(45*end**2/4 - 45*start**2/4 + y*(27*end**2/4 - 27*start**2/4)) + y*(15*end**2/2 - 15*start**2/2))) + x*(-10*end**2 + 10*start**2 + x*(-9*end**2 + 9*start**2 + y*(-45*end**2/4 + 45*start**2/4 + y*(-27*end**2/8 + 27*start**2/8))) + y*(-25*end**2/2 + 25*start**2/2 + y*(-15*end**2/4 + 15*start**2/4)))) + d*(d*(d*x*(-5*end/2 + 5*start/2 + x*(-9*end/4 + 9*start/4)) + x*(25*end/2 - 25*start/2 + x*(45*end/4 - 45*start/4 + y*(27*end/4 - 27*start/4)) + y*(15*end/2 - 15*start/2))) + x*(-20*end + 20*start + x*(-18*end + 18*start + y*(-45*end/2 + 45*start/2 + y*(-27*end/4 + 27*start/4))) + y*(-25*end + 25*start + y*(-15*end/2 + 15*start/2)))) + x*(10*end - 10*start + x*(9*end - 9*start + y*(18*end - 18*start + y*(45*end/4 - 45*start/4 + y*(9*end/4 - 9*start/4)))) + y*(20*end - 20*start + y*(25*end/2 - 25*start/2 + y*(5*end/2 - 5*start/2))))) + c*(c*(c*(-end**4/8 + start**4/8 + x**2*(5*end**4/16 - 5*start**4/16 + x*(3*end**4/16 - 3*start**4/16))) + d*(-end**3/2 + start**3/2 + x**2*(5*end**3/4 - 5*start**3/4 + x*(3*end**3/4 - 3*start**3/4))) + 5*end**3/6 - 5*start**3/6 + x**2*(-25*end**3/12 + 25*start**3/12 + x*(-5*end**3/4 + 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)) + y*(-5*end**3/4 + 5*start**3/4)) + y*(end**3/2 - start**3/2)) + d*(d*(-3*end**2/4 + 3*start**2/4 + x**2*(15*end**2/8 - 15*start**2/8 + x*(9*end**2/8 - 9*start**2/8))) + 5*end**2/2 - 5*start**2/2 + x**2*(-25*end**2/4 + 25*start**2/4 + x*(-15*end**2/4 + 15*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)) + y*(-15*end**2/4 + 15*start**2/4)) + y*(3*end**2/2 - 3*start**2/2)) - 2*end**2 + 2*start**2 + x**2*(5*end**2 - 5*start**2 + x*(3*end**2 - 3*start**2 + y*(15*end**2/4 - 15*start**2/4 + y*(9*end**2/8 - 9*start**2/8))) + y*(25*end**2/4 - 25*start**2/4 + y*(15*end**2/8 - 15*start**2/8))) + y*(-5*end**2/2 + 5*start**2/2 + y*(-3*end**2/4 + 3*start**2/4))) + d*(d*(d*(-end/2 + start/2 + x**2*(5*end/4 - 5*start/4 + x*(3*end/4 - 3*start/4))) + 5*end/2 - 5*start/2 + x**2*(-25*end/4 + 25*start/4 + x*(-15*end/4 + 15*start/4 + y*(-9*end/4 + 9*start/4)) + y*(-15*end/4 + 15*start/4)) + y*(3*end/2 - 3*start/2)) - 4*end + 4*start + x**2*(10*end - 10*start + x*(6*end - 6*start + y*(15*end/2 - 15*start/2 + y*(9*end/4 - 9*start/4))) + y*(25*end/2 - 25*start/2 + y*(15*end/4 - 15*start/4))) + y*(-5*end + 5*start + y*(-3*end/2 + 3*start/2))) + 2*end - 2*start + x**2*(-5*end + 5*start + x*(-3*end + 3*start + y*(-6*end + 6*start + y*(-15*end/4 + 15*start/4 + y*(-3*end/4 + 3*start/4)))) + y*(-10*end + 10*start + y*(-25*end/4 + 25*start/4 + y*(-5*end/4 + 5*start/4)))) + y*(4*end - 4*start + y*(5*end/2 - 5*start/2 + y*(end/2 - start/2)))



    return output


def int13(a, b, c, d, x, y, start, end):
    output = a*(a*(a*(c*(c*(c*(-end**7/28 + start**7/28) + d*(-end**6/8 + start**6/8) - 5*end**6/24 + 5*start**6/24 + y*(end**6/8 - start**6/8)) + d*(d*(-3*end**5/20 + 3*start**5/20) - end**5/2 + start**5/2 + y*(3*end**5/10 - 3*start**5/10)) - 2*end**5/5 + 2*start**5/5 + y*(end**5/2 - start**5/2 + y*(-3*end**5/20 + 3*start**5/20))) + d*(d*(d*(-end**4/16 + start**4/16) - 5*end**4/16 + 5*start**4/16 + y*(3*end**4/16 - 3*start**4/16)) - end**4/2 + start**4/2 + y*(5*end**4/8 - 5*start**4/8 + y*(-3*end**4/16 + 3*start**4/16))) - end**4/4 + start**4/4 + y*(end**4/2 - start**4/2 + y*(-5*end**4/16 + 5*start**4/16 + y*(end**4/16 - start**4/16)))) + b*(c*(c*(c*(-end**6/8 + start**6/8) + d*(-9*end**5/20 + 9*start**5/20) - 3*end**5/4 + 3*start**5/4 + y*(9*end**5/20 - 9*start**5/20)) + d*(d*(-9*end**4/16 + 9*start**4/16) - 15*end**4/8 + 15*start**4/8 + y*(9*end**4/8 - 9*start**4/8)) - 3*end**4/2 + 3*start**4/2 + y*(15*end**4/8 - 15*start**4/8 + y*(-9*end**4/16 + 9*start**4/16))) + d*(d*(d*(-end**3/4 + start**3/4) - 5*end**3/4 + 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4)) - 2*end**3 + 2*start**3 + y*(5*end**3/2 - 5*start**3/2 + y*(-3*end**3/4 + 3*start**3/4))) - end**3 + start**3 + y*(2*end**3 - 2*start**3 + y*(-5*end**3/4 + 5*start**3/4 + y*(end**3/4 - start**3/4)))) + c*(c*(c*(5*end**6/24 - 5*start**6/24 + x*(end**6/8 - start**6/8)) + d*(3*end**5/4 - 3*start**5/4 + x*(9*end**5/20 - 9*start**5/20)) + 5*end**5/4 - 5*start**5/4 + x*(3*end**5/4 - 3*start**5/4 + y*(-9*end**5/20 + 9*start**5/20)) + y*(-3*end**5/4 + 3*start**5/4)) + d*(d*(15*end**4/16 - 15*start**4/16 + x*(9*end**4/16 - 9*start**4/16)) + 25*end**4/8 - 25*start**4/8 + x*(15*end**4/8 - 15*start**4/8 + y*(-9*end**4/8 + 9*start**4/8)) + y*(-15*end**4/8 + 15*start**4/8)) + 5*end**4/2 - 5*start**4/2 + x*(3*end**4/2 - 3*start**4/2 + y*(-15*end**4/8 + 15*start**4/8 + y*(9*end**4/16 - 9*start**4/16))) + y*(-25*end**4/8 + 25*start**4/8 + y*(15*end**4/16 - 15*start**4/16))) + d*(d*(d*(5*end**3/12 - 5*start**3/12 + x*(end**3/4 - start**3/4)) + 25*end**3/12 - 25*start**3/12 + x*(5*end**3/4 - 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)) + y*(-5*end**3/4 + 5*start**3/4)) + 10*end**3/3 - 10*start**3/3 + x*(2*end**3 - 2*start**3 + y*(-5*end**3/2 + 5*start**3/2 + y*(3*end**3/4 - 3*start**3/4))) + y*(-25*end**3/6 + 25*start**3/6 + y*(5*end**3/4 - 5*start**3/4))) + 5*end**3/3 - 5*start**3/3 + x*(end**3 - start**3 + y*(-2*end**3 + 2*start**3 + y*(5*end**3/4 - 5*start**3/4 + y*(-end**3/4 + start**3/4)))) + y*(-10*end**3/3 + 10*start**3/3 + y*(25*end**3/12 - 25*start**3/12 + y*(-5*end**3/12 + 5*start**3/12)))) + b*(b*(c*(c*(c*(-3*end**5/20 + 3*start**5/20) + d*(-9*end**4/16 + 9*start**4/16) - 15*end**4/16 + 15*start**4/16 + y*(9*end**4/16 - 9*start**4/16)) + d*(d*(-3*end**3/4 + 3*start**3/4) - 5*end**3/2 + 5*start**3/2 + y*(3*end**3/2 - 3*start**3/2)) - 2*end**3 + 2*start**3 + y*(5*end**3/2 - 5*start**3/2 + y*(-3*end**3/4 + 3*start**3/4))) + d*(d*(d*(-3*end**2/8 + 3*start**2/8) - 15*end**2/8 + 15*start**2/8 + y*(9*end**2/8 - 9*start**2/8)) - 3*end**2 + 3*start**2 + y*(15*end**2/4 - 15*start**2/4 + y*(-9*end**2/8 + 9*start**2/8))) - 3*end**2/2 + 3*start**2/2 + y*(3*end**2 - 3*start**2 + y*(-15*end**2/8 + 15*start**2/8 + y*(3*end**2/8 - 3*start**2/8)))) + c*(c*(c*(end**5/2 - start**5/2 + x*(3*end**5/10 - 3*start**5/10)) + d*(15*end**4/8 - 15*start**4/8 + x*(9*end**4/8 - 9*start**4/8)) + 25*end**4/8 - 25*start**4/8 + x*(15*end**4/8 - 15*start**4/8 + y*(-9*end**4/8 + 9*start**4/8)) + y*(-15*end**4/8 + 15*start**4/8)) + d*(d*(5*end**3/2 - 5*start**3/2 + x*(3*end**3/2 - 3*start**3/2)) + 25*end**3/3 - 25*start**3/3 + x*(5*end**3 - 5*start**3 + y*(-3*end**3 + 3*start**3)) + y*(-5*end**3 + 5*start**3)) + 20*end**3/3 - 20*start**3/3 + x*(4*end**3 - 4*start**3 + y*(-5*end**3 + 5*start**3 + y*(3*end**3/2 - 3*start**3/2))) + y*(-25*end**3/3 + 25*start**3/3 + y*(5*end**3/2 - 5*start**3/2))) + d*(d*(d*(5*end**2/4 - 5*start**2/4 + x*(3*end**2/4 - 3*start**2/4)) + 25*end**2/4 - 25*start**2/4 + x*(15*end**2/4 - 15*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)) + y*(-15*end**2/4 + 15*start**2/4)) + 10*end**2 - 10*start**2 + x*(6*end**2 - 6*start**2 + y*(-15*end**2/2 + 15*start**2/2 + y*(9*end**2/4 - 9*start**2/4))) + y*(-25*end**2/2 + 25*start**2/2 + y*(15*end**2/4 - 15*start**2/4))) + 5*end**2 - 5*start**2 + x*(3*end**2 - 3*start**2 + y*(-6*end**2 + 6*start**2 + y*(15*end**2/4 - 15*start**2/4 + y*(-3*end**2/4 + 3*start**2/4)))) + y*(-10*end**2 + 10*start**2 + y*(25*end**2/4 - 25*start**2/4 + y*(-5*end**2/4 + 5*start**2/4)))) + c*(c*(c*(-2*end**5/5 + 2*start**5/5 + x*(-end**5/2 + start**5/2 + x*(-3*end**5/20 + 3*start**5/20))) + d*(-3*end**4/2 + 3*start**4/2 + x*(-15*end**4/8 + 15*start**4/8 + x*(-9*end**4/16 + 9*start**4/16))) - 5*end**4/2 + 5*start**4/2 + x*(-25*end**4/8 + 25*start**4/8 + x*(-15*end**4/16 + 15*start**4/16 + y*(9*end**4/16 - 9*start**4/16)) + y*(15*end**4/8 - 15*start**4/8)) + y*(3*end**4/2 - 3*start**4/2)) + d*(d*(-2*end**3 + 2*start**3 + x*(-5*end**3/2 + 5*start**3/2 + x*(-3*end**3/4 + 3*start**3/4))) - 20*end**3/3 + 20*start**3/3 + x*(-25*end**3/3 + 25*start**3/3 + x*(-5*end**3/2 + 5*start**3/2 + y*(3*end**3/2 - 3*start**3/2)) + y*(5*end**3 - 5*start**3)) + y*(4*end**3 - 4*start**3)) - 16*end**3/3 + 16*start**3/3 + x*(-20*end**3/3 + 20*start**3/3 + x*(-2*end**3 + 2*start**3 + y*(5*end**3/2 - 5*start**3/2 + y*(-3*end**3/4 + 3*start**3/4))) + y*(25*end**3/3 - 25*start**3/3 + y*(-5*end**3/2 + 5*start**3/2))) + y*(20*end**3/3 - 20*start**3/3 + y*(-2*end**3 + 2*start**3))) + d*(d*(d*(-end**2 + start**2 + x*(-5*end**2/4 + 5*start**2/4 + x*(-3*end**2/8 + 3*start**2/8))) - 5*end**2 + 5*start**2 + x*(-25*end**2/4 + 25*start**2/4 + x*(-15*end**2/8 + 15*start**2/8 + y*(9*end**2/8 - 9*start**2/8)) + y*(15*end**2/4 - 15*start**2/4)) + y*(3*end**2 - 3*start**2)) - 8*end**2 + 8*start**2 + x*(-10*end**2 + 10*start**2 + x*(-3*end**2 + 3*start**2 + y*(15*end**2/4 - 15*start**2/4 + y*(-9*end**2/8 + 9*start**2/8))) + y*(25*end**2/2 - 25*start**2/2 + y*(-15*end**2/4 + 15*start**2/4))) + y*(10*end**2 - 10*start**2 + y*(-3*end**2 + 3*start**2))) - 4*end**2 + 4*start**2 + x*(-5*end**2 + 5*start**2 + x*(-3*end**2/2 + 3*start**2/2 + y*(3*end**2 - 3*start**2 + y*(-15*end**2/8 + 15*start**2/8 + y*(3*end**2/8 - 3*start**2/8)))) + y*(10*end**2 - 10*start**2 + y*(-25*end**2/4 + 25*start**2/4 + y*(5*end**2/4 - 5*start**2/4)))) + y*(8*end**2 - 8*start**2 + y*(-5*end**2 + 5*start**2 + y*(end**2 - start**2)))) + b*(b*(b*(c*(c*(c*(-end**4/16 + start**4/16) + d*(-end**3/4 + start**3/4) - 5*end**3/12 + 5*start**3/12 + y*(end**3/4 - start**3/4)) + d*(d*(-3*end**2/8 + 3*start**2/8) - 5*end**2/4 + 5*start**2/4 + y*(3*end**2/4 - 3*start**2/4)) - end**2 + start**2 + y*(5*end**2/4 - 5*start**2/4 + y*(-3*end**2/8 + 3*start**2/8))) + d*(d*(d*(-end/4 + start/4) - 5*end/4 + 5*start/4 + y*(3*end/4 - 3*start/4)) - 2*end + 2*start + y*(5*end/2 - 5*start/2 + y*(-3*end/4 + 3*start/4))) - end + start + y*(2*end - 2*start + y*(-5*end/4 + 5*start/4 + y*(end/4 - start/4)))) + c*(c*(c*(5*end**4/16 - 5*start**4/16 + x*(3*end**4/16 - 3*start**4/16)) + d*(5*end**3/4 - 5*start**3/4 + x*(3*end**3/4 - 3*start**3/4)) + 25*end**3/12 - 25*start**3/12 + x*(5*end**3/4 - 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)) + y*(-5*end**3/4 + 5*start**3/4)) + d*(d*(15*end**2/8 - 15*start**2/8 + x*(9*end**2/8 - 9*start**2/8)) + 25*end**2/4 - 25*start**2/4 + x*(15*end**2/4 - 15*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)) + y*(-15*end**2/4 + 15*start**2/4)) + 5*end**2 - 5*start**2 + x*(3*end**2 - 3*start**2 + y*(-15*end**2/4 + 15*start**2/4 + y*(9*end**2/8 - 9*start**2/8))) + y*(-25*end**2/4 + 25*start**2/4 + y*(15*end**2/8 - 15*start**2/8))) + d*(d*(d*(5*end/4 - 5*start/4 + x*(3*end/4 - 3*start/4)) + 25*end/4 - 25*start/4 + x*(15*end/4 - 15*start/4 + y*(-9*end/4 + 9*start/4)) + y*(-15*end/4 + 15*start/4)) + 10*end - 10*start + x*(6*end - 6*start + y*(-15*end/2 + 15*start/2 + y*(9*end/4 - 9*start/4))) + y*(-25*end/2 + 25*start/2 + y*(15*end/4 - 15*start/4))) + 5*end - 5*start + x*(3*end - 3*start + y*(-6*end + 6*start + y*(15*end/4 - 15*start/4 + y*(-3*end/4 + 3*start/4)))) + y*(-10*end + 10*start + y*(25*end/4 - 25*start/4 + y*(-5*end/4 + 5*start/4)))) + c*(c*(c*(-end**4/2 + start**4/2 + x*(-5*end**4/8 + 5*start**4/8 + x*(-3*end**4/16 + 3*start**4/16))) + d*(-2*end**3 + 2*start**3 + x*(-5*end**3/2 + 5*start**3/2 + x*(-3*end**3/4 + 3*start**3/4))) - 10*end**3/3 + 10*start**3/3 + x*(-25*end**3/6 + 25*start**3/6 + x*(-5*end**3/4 + 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4)) + y*(5*end**3/2 - 5*start**3/2)) + y*(2*end**3 - 2*start**3)) + d*(d*(-3*end**2 + 3*start**2 + x*(-15*end**2/4 + 15*start**2/4 + x*(-9*end**2/8 + 9*start**2/8))) - 10*end**2 + 10*start**2 + x*(-25*end**2/2 + 25*start**2/2 + x*(-15*end**2/4 + 15*start**2/4 + y*(9*end**2/4 - 9*start**2/4)) + y*(15*end**2/2 - 15*start**2/2)) + y*(6*end**2 - 6*start**2)) - 8*end**2 + 8*start**2 + x*(-10*end**2 + 10*start**2 + x*(-3*end**2 + 3*start**2 + y*(15*end**2/4 - 15*start**2/4 + y*(-9*end**2/8 + 9*start**2/8))) + y*(25*end**2/2 - 25*start**2/2 + y*(-15*end**2/4 + 15*start**2/4))) + y*(10*end**2 - 10*start**2 + y*(-3*end**2 + 3*start**2))) + d*(d*(d*(-2*end + 2*start + x*(-5*end/2 + 5*start/2 + x*(-3*end/4 + 3*start/4))) - 10*end + 10*start + x*(-25*end/2 + 25*start/2 + x*(-15*end/4 + 15*start/4 + y*(9*end/4 - 9*start/4)) + y*(15*end/2 - 15*start/2)) + y*(6*end - 6*start)) - 16*end + 16*start + x*(-20*end + 20*start + x*(-6*end + 6*start + y*(15*end/2 - 15*start/2 + y*(-9*end/4 + 9*start/4))) + y*(25*end - 25*start + y*(-15*end/2 + 15*start/2))) + y*(20*end - 20*start + y*(-6*end + 6*start))) - 8*end + 8*start + x*(-10*end + 10*start + x*(-3*end + 3*start + y*(6*end - 6*start + y*(-15*end/4 + 15*start/4 + y*(3*end/4 - 3*start/4)))) + y*(20*end - 20*start + y*(-25*end/2 + 25*start/2 + y*(5*end/2 - 5*start/2)))) + y*(16*end - 16*start + y*(-10*end + 10*start + y*(2*end - 2*start)))) + c*(c*(c*(end**4/4 - start**4/4 + x*(end**4/2 - start**4/2 + x*(5*end**4/16 - 5*start**4/16 + x*(end**4/16 - start**4/16)))) + d*(end**3 - start**3 + x*(2*end**3 - 2*start**3 + x*(5*end**3/4 - 5*start**3/4 + x*(end**3/4 - start**3/4)))) + 5*end**3/3 - 5*start**3/3 + x*(10*end**3/3 - 10*start**3/3 + x*(25*end**3/12 - 25*start**3/12 + x*(5*end**3/12 - 5*start**3/12 + y*(-end**3/4 + start**3/4)) + y*(-5*end**3/4 + 5*start**3/4)) + y*(-2*end**3 + 2*start**3)) + y*(-end**3 + start**3)) + d*(d*(3*end**2/2 - 3*start**2/2 + x*(3*end**2 - 3*start**2 + x*(15*end**2/8 - 15*start**2/8 + x*(3*end**2/8 - 3*start**2/8)))) + 5*end**2 - 5*start**2 + x*(10*end**2 - 10*start**2 + x*(25*end**2/4 - 25*start**2/4 + x*(5*end**2/4 - 5*start**2/4 + y*(-3*end**2/4 + 3*start**2/4)) + y*(-15*end**2/4 + 15*start**2/4)) + y*(-6*end**2 + 6*start**2)) + y*(-3*end**2 + 3*start**2)) + 4*end**2 - 4*start**2 + x*(8*end**2 - 8*start**2 + x*(5*end**2 - 5*start**2 + x*(end**2 - start**2 + y*(-5*end**2/4 + 5*start**2/4 + y*(3*end**2/8 - 3*start**2/8))) + y*(-25*end**2/4 + 25*start**2/4 + y*(15*end**2/8 - 15*start**2/8))) + y*(-10*end**2 + 10*start**2 + y*(3*end**2 - 3*start**2))) + y*(-5*end**2 + 5*start**2 + y*(3*end**2/2 - 3*start**2/2))) + d*(d*(d*(end - start + x*(2*end - 2*start + x*(5*end/4 - 5*start/4 + x*(end/4 - start/4)))) + 5*end - 5*start + x*(10*end - 10*start + x*(25*end/4 - 25*start/4 + x*(5*end/4 - 5*start/4 + y*(-3*end/4 + 3*start/4)) + y*(-15*end/4 + 15*start/4)) + y*(-6*end + 6*start)) + y*(-3*end + 3*start)) + 8*end - 8*start + x*(16*end - 16*start + x*(10*end - 10*start + x*(2*end - 2*start + y*(-5*end/2 + 5*start/2 + y*(3*end/4 - 3*start/4))) + y*(-25*end/2 + 25*start/2 + y*(15*end/4 - 15*start/4))) + y*(-20*end + 20*start + y*(6*end - 6*start))) + y*(-10*end + 10*start + y*(3*end - 3*start))) + 4*end - 4*start + x*(8*end - 8*start + x*(5*end - 5*start + x*(end - start + y*(-2*end + 2*start + y*(5*end/4 - 5*start/4 + y*(-end/4 + start/4)))) + y*(-10*end + 10*start + y*(25*end/4 - 25*start/4 + y*(-5*end/4 + 5*start/4)))) + y*(-16*end + 16*start + y*(10*end - 10*start + y*(-2*end + 2*start)))) + y*(-8*end + 8*start + y*(5*end - 5*start + y*(-end + start)))


    return output


def int14(a, b, c, d, x, y, start, end):
    output = a*(a*(a*(c*(c*(c*(3*end**7/28 - 3*start**7/28) + d*(3*end**6/8 - 3*start**6/8) + 5*end**6/24 - 5*start**6/24 + y*(-3*end**6/8 + 3*start**6/8)) + d*(d*(9*end**5/20 - 9*start**5/20) + end**5/2 - start**5/2 + y*(-9*end**5/10 + 9*start**5/10)) + y*(-end**5/2 + start**5/2 + y*(9*end**5/20 - 9*start**5/20))) + d*(d*(d*(3*end**4/16 - 3*start**4/16) + 5*end**4/16 - 5*start**4/16 + y*(-9*end**4/16 + 9*start**4/16)) + y*(-5*end**4/8 + 5*start**4/8 + y*(9*end**4/16 - 9*start**4/16))) - end**4/8 + start**4/8 + y**2*(5*end**4/16 - 5*start**4/16 + y*(-3*end**4/16 + 3*start**4/16))) + b*(c*(c*(c*(3*end**6/8 - 3*start**6/8) + d*(27*end**5/20 - 27*start**5/20) + 3*end**5/4 - 3*start**5/4 + y*(-27*end**5/20 + 27*start**5/20)) + d*(d*(27*end**4/16 - 27*start**4/16) + 15*end**4/8 - 15*start**4/8 + y*(-27*end**4/8 + 27*start**4/8)) + y*(-15*end**4/8 + 15*start**4/8 + y*(27*end**4/16 - 27*start**4/16))) + d*(d*(d*(3*end**3/4 - 3*start**3/4) + 5*end**3/4 - 5*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + y*(-5*end**3/2 + 5*start**3/2 + y*(9*end**3/4 - 9*start**3/4))) - end**3/2 + start**3/2 + y**2*(5*end**3/4 - 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4))) + c*(c*(c*(-5*end**6/8 + 5*start**6/8 + x*(-3*end**6/8 + 3*start**6/8)) + d*(-9*end**5/4 + 9*start**5/4 + x*(-27*end**5/20 + 27*start**5/20)) - 5*end**5/4 + 5*start**5/4 + x*(-3*end**5/4 + 3*start**5/4 + y*(27*end**5/20 - 27*start**5/20)) + y*(9*end**5/4 - 9*start**5/4)) + d*(d*(-45*end**4/16 + 45*start**4/16 + x*(-27*end**4/16 + 27*start**4/16)) - 25*end**4/8 + 25*start**4/8 + x*(-15*end**4/8 + 15*start**4/8 + y*(27*end**4/8 - 27*start**4/8)) + y*(45*end**4/8 - 45*start**4/8)) + x*y*(15*end**4/8 - 15*start**4/8 + y*(-27*end**4/16 + 27*start**4/16)) + y*(25*end**4/8 - 25*start**4/8 + y*(-45*end**4/16 + 45*start**4/16))) + d*(d*(d*(-5*end**3/4 + 5*start**3/4 + x*(-3*end**3/4 + 3*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(-5*end**3/4 + 5*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(15*end**3/4 - 15*start**3/4)) + x*y*(5*end**3/2 - 5*start**3/2 + y*(-9*end**3/4 + 9*start**3/4)) + y*(25*end**3/6 - 25*start**3/6 + y*(-15*end**3/4 + 15*start**3/4))) + 5*end**3/6 - 5*start**3/6 + x*(end**3/2 - start**3/2 + y**2*(-5*end**3/4 + 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4))) + y**2*(-25*end**3/12 + 25*start**3/12 + y*(5*end**3/4 - 5*start**3/4))) + b*(b*(c*(c*(c*(9*end**5/20 - 9*start**5/20) + d*(27*end**4/16 - 27*start**4/16) + 15*end**4/16 - 15*start**4/16 + y*(-27*end**4/16 + 27*start**4/16)) + d*(d*(9*end**3/4 - 9*start**3/4) + 5*end**3/2 - 5*start**3/2 + y*(-9*end**3/2 + 9*start**3/2)) + y*(-5*end**3/2 + 5*start**3/2 + y*(9*end**3/4 - 9*start**3/4))) + d*(d*(d*(9*end**2/8 - 9*start**2/8) + 15*end**2/8 - 15*start**2/8 + y*(-27*end**2/8 + 27*start**2/8)) + y*(-15*end**2/4 + 15*start**2/4 + y*(27*end**2/8 - 27*start**2/8))) - 3*end**2/4 + 3*start**2/4 + y**2*(15*end**2/8 - 15*start**2/8 + y*(-9*end**2/8 + 9*start**2/8))) + c*(c*(c*(-3*end**5/2 + 3*start**5/2 + x*(-9*end**5/10 + 9*start**5/10)) + d*(-45*end**4/8 + 45*start**4/8 + x*(-27*end**4/8 + 27*start**4/8)) - 25*end**4/8 + 25*start**4/8 + x*(-15*end**4/8 + 15*start**4/8 + y*(27*end**4/8 - 27*start**4/8)) + y*(45*end**4/8 - 45*start**4/8)) + d*(d*(-15*end**3/2 + 15*start**3/2 + x*(-9*end**3/2 + 9*start**3/2)) - 25*end**3/3 + 25*start**3/3 + x*(-5*end**3 + 5*start**3 + y*(9*end**3 - 9*start**3)) + y*(15*end**3 - 15*start**3)) + x*y*(5*end**3 - 5*start**3 + y*(-9*end**3/2 + 9*start**3/2)) + y*(25*end**3/3 - 25*start**3/3 + y*(-15*end**3/2 + 15*start**3/2))) + d*(d*(d*(-15*end**2/4 + 15*start**2/4 + x*(-9*end**2/4 + 9*start**2/4)) - 25*end**2/4 + 25*start**2/4 + x*(-15*end**2/4 + 15*start**2/4 + y*(27*end**2/4 - 27*start**2/4)) + y*(45*end**2/4 - 45*start**2/4)) + x*y*(15*end**2/2 - 15*start**2/2 + y*(-27*end**2/4 + 27*start**2/4)) + y*(25*end**2/2 - 25*start**2/2 + y*(-45*end**2/4 + 45*start**2/4))) + 5*end**2/2 - 5*start**2/2 + x*(3*end**2/2 - 3*start**2/2 + y**2*(-15*end**2/4 + 15*start**2/4 + y*(9*end**2/4 - 9*start**2/4))) + y**2*(-25*end**2/4 + 25*start**2/4 + y*(15*end**2/4 - 15*start**2/4))) + c*(c*(c*(6*end**5/5 - 6*start**5/5 + x*(3*end**5/2 - 3*start**5/2 + x*(9*end**5/20 - 9*start**5/20))) + d*(9*end**4/2 - 9*start**4/2 + x*(45*end**4/8 - 45*start**4/8 + x*(27*end**4/16 - 27*start**4/16))) + 5*end**4/2 - 5*start**4/2 + x*(25*end**4/8 - 25*start**4/8 + x*(15*end**4/16 - 15*start**4/16 + y*(-27*end**4/16 + 27*start**4/16)) + y*(-45*end**4/8 + 45*start**4/8)) + y*(-9*end**4/2 + 9*start**4/2)) + d*(d*(6*end**3 - 6*start**3 + x*(15*end**3/2 - 15*start**3/2 + x*(9*end**3/4 - 9*start**3/4))) + 20*end**3/3 - 20*start**3/3 + x*(25*end**3/3 - 25*start**3/3 + x*(5*end**3/2 - 5*start**3/2 + y*(-9*end**3/2 + 9*start**3/2)) + y*(-15*end**3 + 15*start**3)) + y*(-12*end**3 + 12*start**3)) + x*(x*y*(-5*end**3/2 + 5*start**3/2 + y*(9*end**3/4 - 9*start**3/4)) + y*(-25*end**3/3 + 25*start**3/3 + y*(15*end**3/2 - 15*start**3/2))) + y*(-20*end**3/3 + 20*start**3/3 + y*(6*end**3 - 6*start**3))) + d*(d*(d*(3*end**2 - 3*start**2 + x*(15*end**2/4 - 15*start**2/4 + x*(9*end**2/8 - 9*start**2/8))) + 5*end**2 - 5*start**2 + x*(25*end**2/4 - 25*start**2/4 + x*(15*end**2/8 - 15*start**2/8 + y*(-27*end**2/8 + 27*start**2/8)) + y*(-45*end**2/4 + 45*start**2/4)) + y*(-9*end**2 + 9*start**2)) + x*(x*y*(-15*end**2/4 + 15*start**2/4 + y*(27*end**2/8 - 27*start**2/8)) + y*(-25*end**2/2 + 25*start**2/2 + y*(45*end**2/4 - 45*start**2/4))) + y*(-10*end**2 + 10*start**2 + y*(9*end**2 - 9*start**2))) - 2*end**2 + 2*start**2 + x*(-5*end**2/2 + 5*start**2/2 + x*(-3*end**2/4 + 3*start**2/4 + y**2*(15*end**2/8 - 15*start**2/8 + y*(-9*end**2/8 + 9*start**2/8))) + y**2*(25*end**2/4 - 25*start**2/4 + y*(-15*end**2/4 + 15*start**2/4))) + y**2*(5*end**2 - 5*start**2 + y*(-3*end**2 + 3*start**2))) + b*(b*(b*(c*(c*(c*(3*end**4/16 - 3*start**4/16) + d*(3*end**3/4 - 3*start**3/4) + 5*end**3/12 - 5*start**3/12 + y*(-3*end**3/4 + 3*start**3/4)) + d*(d*(9*end**2/8 - 9*start**2/8) + 5*end**2/4 - 5*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)) + y*(-5*end**2/4 + 5*start**2/4 + y*(9*end**2/8 - 9*start**2/8))) + d*(d*(d*(3*end/4 - 3*start/4) + 5*end/4 - 5*start/4 + y*(-9*end/4 + 9*start/4)) + y*(-5*end/2 + 5*start/2 + y*(9*end/4 - 9*start/4))) - end/2 + start/2 + y**2*(5*end/4 - 5*start/4 + y*(-3*end/4 + 3*start/4))) + c*(c*(c*(-15*end**4/16 + 15*start**4/16 + x*(-9*end**4/16 + 9*start**4/16)) + d*(-15*end**3/4 + 15*start**3/4 + x*(-9*end**3/4 + 9*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(-5*end**3/4 + 5*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(15*end**3/4 - 15*start**3/4)) + d*(d*(-45*end**2/8 + 45*start**2/8 + x*(-27*end**2/8 + 27*start**2/8)) - 25*end**2/4 + 25*start**2/4 + x*(-15*end**2/4 + 15*start**2/4 + y*(27*end**2/4 - 27*start**2/4)) + y*(45*end**2/4 - 45*start**2/4)) + x*y*(15*end**2/4 - 15*start**2/4 + y*(-27*end**2/8 + 27*start**2/8)) + y*(25*end**2/4 - 25*start**2/4 + y*(-45*end**2/8 + 45*start**2/8))) + d*(d*(d*(-15*end/4 + 15*start/4 + x*(-9*end/4 + 9*start/4)) - 25*end/4 + 25*start/4 + x*(-15*end/4 + 15*start/4 + y*(27*end/4 - 27*start/4)) + y*(45*end/4 - 45*start/4)) + x*y*(15*end/2 - 15*start/2 + y*(-27*end/4 + 27*start/4)) + y*(25*end/2 - 25*start/2 + y*(-45*end/4 + 45*start/4))) + 5*end/2 - 5*start/2 + x*(3*end/2 - 3*start/2 + y**2*(-15*end/4 + 15*start/4 + y*(9*end/4 - 9*start/4))) + y**2*(-25*end/4 + 25*start/4 + y*(15*end/4 - 15*start/4))) + c*(c*(c*(3*end**4/2 - 3*start**4/2 + x*(15*end**4/8 - 15*start**4/8 + x*(9*end**4/16 - 9*start**4/16))) + d*(6*end**3 - 6*start**3 + x*(15*end**3/2 - 15*start**3/2 + x*(9*end**3/4 - 9*start**3/4))) + 10*end**3/3 - 10*start**3/3 + x*(25*end**3/6 - 25*start**3/6 + x*(5*end**3/4 - 5*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + y*(-15*end**3/2 + 15*start**3/2)) + y*(-6*end**3 + 6*start**3)) + d*(d*(9*end**2 - 9*start**2 + x*(45*end**2/4 - 45*start**2/4 + x*(27*end**2/8 - 27*start**2/8))) + 10*end**2 - 10*start**2 + x*(25*end**2/2 - 25*start**2/2 + x*(15*end**2/4 - 15*start**2/4 + y*(-27*end**2/4 + 27*start**2/4)) + y*(-45*end**2/2 + 45*start**2/2)) + y*(-18*end**2 + 18*start**2)) + x*(x*y*(-15*end**2/4 + 15*start**2/4 + y*(27*end**2/8 - 27*start**2/8)) + y*(-25*end**2/2 + 25*start**2/2 + y*(45*end**2/4 - 45*start**2/4))) + y*(-10*end**2 + 10*start**2 + y*(9*end**2 - 9*start**2))) + d*(d*(d*(6*end - 6*start + x*(15*end/2 - 15*start/2 + x*(9*end/4 - 9*start/4))) + 10*end - 10*start + x*(25*end/2 - 25*start/2 + x*(15*end/4 - 15*start/4 + y*(-27*end/4 + 27*start/4)) + y*(-45*end/2 + 45*start/2)) + y*(-18*end + 18*start)) + x*(x*y*(-15*end/2 + 15*start/2 + y*(27*end/4 - 27*start/4)) + y*(-25*end + 25*start + y*(45*end/2 - 45*start/2))) + y*(-20*end + 20*start + y*(18*end - 18*start))) - 4*end + 4*start + x*(-5*end + 5*start + x*(-3*end/2 + 3*start/2 + y**2*(15*end/4 - 15*start/4 + y*(-9*end/4 + 9*start/4))) + y**2*(25*end/2 - 25*start/2 + y*(-15*end/2 + 15*start/2))) + y**2*(10*end - 10*start + y*(-6*end + 6*start))) + c*(c*(c*(-3*end**4/4 + 3*start**4/4 + x*(-3*end**4/2 + 3*start**4/2 + x*(-15*end**4/16 + 15*start**4/16 + x*(-3*end**4/16 + 3*start**4/16)))) + d*(-3*end**3 + 3*start**3 + x*(-6*end**3 + 6*start**3 + x*(-15*end**3/4 + 15*start**3/4 + x*(-3*end**3/4 + 3*start**3/4)))) - 5*end**3/3 + 5*start**3/3 + x*(-10*end**3/3 + 10*start**3/3 + x*(-25*end**3/12 + 25*start**3/12 + x*(-5*end**3/12 + 5*start**3/12 + y*(3*end**3/4 - 3*start**3/4)) + y*(15*end**3/4 - 15*start**3/4)) + y*(6*end**3 - 6*start**3)) + y*(3*end**3 - 3*start**3)) + d*(d*(-9*end**2/2 + 9*start**2/2 + x*(-9*end**2 + 9*start**2 + x*(-45*end**2/8 + 45*start**2/8 + x*(-9*end**2/8 + 9*start**2/8)))) - 5*end**2 + 5*start**2 + x*(-10*end**2 + 10*start**2 + x*(-25*end**2/4 + 25*start**2/4 + x*(-5*end**2/4 + 5*start**2/4 + y*(9*end**2/4 - 9*start**2/4)) + y*(45*end**2/4 - 45*start**2/4)) + y*(18*end**2 - 18*start**2)) + y*(9*end**2 - 9*start**2)) + x*(x*(x*y*(5*end**2/4 - 5*start**2/4 + y*(-9*end**2/8 + 9*start**2/8)) + y*(25*end**2/4 - 25*start**2/4 + y*(-45*end**2/8 + 45*start**2/8))) + y*(10*end**2 - 10*start**2 + y*(-9*end**2 + 9*start**2))) + y*(5*end**2 - 5*start**2 + y*(-9*end**2/2 + 9*start**2/2))) + d*(d*(d*(-3*end + 3*start + x*(-6*end + 6*start + x*(-15*end/4 + 15*start/4 + x*(-3*end/4 + 3*start/4)))) - 5*end + 5*start + x*(-10*end + 10*start + x*(-25*end/4 + 25*start/4 + x*(-5*end/4 + 5*start/4 + y*(9*end/4 - 9*start/4)) + y*(45*end/4 - 45*start/4)) + y*(18*end - 18*start)) + y*(9*end - 9*start)) + x*(x*(x*y*(5*end/2 - 5*start/2 + y*(-9*end/4 + 9*start/4)) + y*(25*end/2 - 25*start/2 + y*(-45*end/4 + 45*start/4))) + y*(20*end - 20*start + y*(-18*end + 18*start))) + y*(10*end - 10*start + y*(-9*end + 9*start))) + 2*end - 2*start + x*(4*end - 4*start + x*(5*end/2 - 5*start/2 + x*(end/2 - start/2 + y**2*(-5*end/4 + 5*start/4 + y*(3*end/4 - 3*start/4))) + y**2*(-25*end/4 + 25*start/4 + y*(15*end/4 - 15*start/4))) + y**2*(-10*end + 10*start + y*(6*end - 6*start))) + y**2*(-5*end + 5*start + y*(3*end - 3*start))


    return output


def int15(a, b, c, d, x, y, start, end):
    output = a*(a*(a*(c*(c*(c*(-3*end**7/28 + 3*start**7/28) + d*(-3*end**6/8 + 3*start**6/8) + 5*end**6/24 - 5*start**6/24 + y*(3*end**6/8 - 3*start**6/8)) + d*(d*(-9*end**5/20 + 9*start**5/20) + end**5/2 - start**5/2 + y*(9*end**5/10 - 9*start**5/10)) + y*(-end**5/2 + start**5/2 + y*(-9*end**5/20 + 9*start**5/20))) + d*(d*(d*(-3*end**4/16 + 3*start**4/16) + 5*end**4/16 - 5*start**4/16 + y*(9*end**4/16 - 9*start**4/16)) + y*(-5*end**4/8 + 5*start**4/8 + y*(-9*end**4/16 + 9*start**4/16))) - end**4/8 + start**4/8 + y**2*(5*end**4/16 - 5*start**4/16 + y*(3*end**4/16 - 3*start**4/16))) + b*(c*(c*(c*(-3*end**6/8 + 3*start**6/8) + d*(-27*end**5/20 + 27*start**5/20) + 3*end**5/4 - 3*start**5/4 + y*(27*end**5/20 - 27*start**5/20)) + d*(d*(-27*end**4/16 + 27*start**4/16) + 15*end**4/8 - 15*start**4/8 + y*(27*end**4/8 - 27*start**4/8)) + y*(-15*end**4/8 + 15*start**4/8 + y*(-27*end**4/16 + 27*start**4/16))) + d*(d*(d*(-3*end**3/4 + 3*start**3/4) + 5*end**3/4 - 5*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(-5*end**3/2 + 5*start**3/2 + y*(-9*end**3/4 + 9*start**3/4))) - end**3/2 + start**3/2 + y**2*(5*end**3/4 - 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4))) + c*(c*(c*(5*end**6/8 - 5*start**6/8 + x*(3*end**6/8 - 3*start**6/8)) + d*(9*end**5/4 - 9*start**5/4 + x*(27*end**5/20 - 27*start**5/20)) - 5*end**5/4 + 5*start**5/4 + x*(-3*end**5/4 + 3*start**5/4 + y*(-27*end**5/20 + 27*start**5/20)) + y*(-9*end**5/4 + 9*start**5/4)) + d*(d*(45*end**4/16 - 45*start**4/16 + x*(27*end**4/16 - 27*start**4/16)) - 25*end**4/8 + 25*start**4/8 + x*(-15*end**4/8 + 15*start**4/8 + y*(-27*end**4/8 + 27*start**4/8)) + y*(-45*end**4/8 + 45*start**4/8)) + x*y*(15*end**4/8 - 15*start**4/8 + y*(27*end**4/16 - 27*start**4/16)) + y*(25*end**4/8 - 25*start**4/8 + y*(45*end**4/16 - 45*start**4/16))) + d*(d*(d*(5*end**3/4 - 5*start**3/4 + x*(3*end**3/4 - 3*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(-5*end**3/4 + 5*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + y*(-15*end**3/4 + 15*start**3/4)) + x*y*(5*end**3/2 - 5*start**3/2 + y*(9*end**3/4 - 9*start**3/4)) + y*(25*end**3/6 - 25*start**3/6 + y*(15*end**3/4 - 15*start**3/4))) + 5*end**3/6 - 5*start**3/6 + x*(end**3/2 - start**3/2 + y**2*(-5*end**3/4 + 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4))) + y**2*(-25*end**3/12 + 25*start**3/12 + y*(-5*end**3/4 + 5*start**3/4))) + b*(b*(c*(c*(c*(-9*end**5/20 + 9*start**5/20) + d*(-27*end**4/16 + 27*start**4/16) + 15*end**4/16 - 15*start**4/16 + y*(27*end**4/16 - 27*start**4/16)) + d*(d*(-9*end**3/4 + 9*start**3/4) + 5*end**3/2 - 5*start**3/2 + y*(9*end**3/2 - 9*start**3/2)) + y*(-5*end**3/2 + 5*start**3/2 + y*(-9*end**3/4 + 9*start**3/4))) + d*(d*(d*(-9*end**2/8 + 9*start**2/8) + 15*end**2/8 - 15*start**2/8 + y*(27*end**2/8 - 27*start**2/8)) + y*(-15*end**2/4 + 15*start**2/4 + y*(-27*end**2/8 + 27*start**2/8))) - 3*end**2/4 + 3*start**2/4 + y**2*(15*end**2/8 - 15*start**2/8 + y*(9*end**2/8 - 9*start**2/8))) + c*(c*(c*(3*end**5/2 - 3*start**5/2 + x*(9*end**5/10 - 9*start**5/10)) + d*(45*end**4/8 - 45*start**4/8 + x*(27*end**4/8 - 27*start**4/8)) - 25*end**4/8 + 25*start**4/8 + x*(-15*end**4/8 + 15*start**4/8 + y*(-27*end**4/8 + 27*start**4/8)) + y*(-45*end**4/8 + 45*start**4/8)) + d*(d*(15*end**3/2 - 15*start**3/2 + x*(9*end**3/2 - 9*start**3/2)) - 25*end**3/3 + 25*start**3/3 + x*(-5*end**3 + 5*start**3 + y*(-9*end**3 + 9*start**3)) + y*(-15*end**3 + 15*start**3)) + x*y*(5*end**3 - 5*start**3 + y*(9*end**3/2 - 9*start**3/2)) + y*(25*end**3/3 - 25*start**3/3 + y*(15*end**3/2 - 15*start**3/2))) + d*(d*(d*(15*end**2/4 - 15*start**2/4 + x*(9*end**2/4 - 9*start**2/4)) - 25*end**2/4 + 25*start**2/4 + x*(-15*end**2/4 + 15*start**2/4 + y*(-27*end**2/4 + 27*start**2/4)) + y*(-45*end**2/4 + 45*start**2/4)) + x*y*(15*end**2/2 - 15*start**2/2 + y*(27*end**2/4 - 27*start**2/4)) + y*(25*end**2/2 - 25*start**2/2 + y*(45*end**2/4 - 45*start**2/4))) + 5*end**2/2 - 5*start**2/2 + x*(3*end**2/2 - 3*start**2/2 + y**2*(-15*end**2/4 + 15*start**2/4 + y*(-9*end**2/4 + 9*start**2/4))) + y**2*(-25*end**2/4 + 25*start**2/4 + y*(-15*end**2/4 + 15*start**2/4))) + c*(c*(c*(-6*end**5/5 + 6*start**5/5 + x*(-3*end**5/2 + 3*start**5/2 + x*(-9*end**5/20 + 9*start**5/20))) + d*(-9*end**4/2 + 9*start**4/2 + x*(-45*end**4/8 + 45*start**4/8 + x*(-27*end**4/16 + 27*start**4/16))) + 5*end**4/2 - 5*start**4/2 + x*(25*end**4/8 - 25*start**4/8 + x*(15*end**4/16 - 15*start**4/16 + y*(27*end**4/16 - 27*start**4/16)) + y*(45*end**4/8 - 45*start**4/8)) + y*(9*end**4/2 - 9*start**4/2)) + d*(d*(-6*end**3 + 6*start**3 + x*(-15*end**3/2 + 15*start**3/2 + x*(-9*end**3/4 + 9*start**3/4))) + 20*end**3/3 - 20*start**3/3 + x*(25*end**3/3 - 25*start**3/3 + x*(5*end**3/2 - 5*start**3/2 + y*(9*end**3/2 - 9*start**3/2)) + y*(15*end**3 - 15*start**3)) + y*(12*end**3 - 12*start**3)) + x*(x*y*(-5*end**3/2 + 5*start**3/2 + y*(-9*end**3/4 + 9*start**3/4)) + y*(-25*end**3/3 + 25*start**3/3 + y*(-15*end**3/2 + 15*start**3/2))) + y*(-20*end**3/3 + 20*start**3/3 + y*(-6*end**3 + 6*start**3))) + d*(d*(d*(-3*end**2 + 3*start**2 + x*(-15*end**2/4 + 15*start**2/4 + x*(-9*end**2/8 + 9*start**2/8))) + 5*end**2 - 5*start**2 + x*(25*end**2/4 - 25*start**2/4 + x*(15*end**2/8 - 15*start**2/8 + y*(27*end**2/8 - 27*start**2/8)) + y*(45*end**2/4 - 45*start**2/4)) + y*(9*end**2 - 9*start**2)) + x*(x*y*(-15*end**2/4 + 15*start**2/4 + y*(-27*end**2/8 + 27*start**2/8)) + y*(-25*end**2/2 + 25*start**2/2 + y*(-45*end**2/4 + 45*start**2/4))) + y*(-10*end**2 + 10*start**2 + y*(-9*end**2 + 9*start**2))) - 2*end**2 + 2*start**2 + x*(-5*end**2/2 + 5*start**2/2 + x*(-3*end**2/4 + 3*start**2/4 + y**2*(15*end**2/8 - 15*start**2/8 + y*(9*end**2/8 - 9*start**2/8))) + y**2*(25*end**2/4 - 25*start**2/4 + y*(15*end**2/4 - 15*start**2/4))) + y**2*(5*end**2 - 5*start**2 + y*(3*end**2 - 3*start**2))) + b*(b*(b*(c*(c*(c*(-3*end**4/16 + 3*start**4/16) + d*(-3*end**3/4 + 3*start**3/4) + 5*end**3/12 - 5*start**3/12 + y*(3*end**3/4 - 3*start**3/4)) + d*(d*(-9*end**2/8 + 9*start**2/8) + 5*end**2/4 - 5*start**2/4 + y*(9*end**2/4 - 9*start**2/4)) + y*(-5*end**2/4 + 5*start**2/4 + y*(-9*end**2/8 + 9*start**2/8))) + d*(d*(d*(-3*end/4 + 3*start/4) + 5*end/4 - 5*start/4 + y*(9*end/4 - 9*start/4)) + y*(-5*end/2 + 5*start/2 + y*(-9*end/4 + 9*start/4))) - end/2 + start/2 + y**2*(5*end/4 - 5*start/4 + y*(3*end/4 - 3*start/4))) + c*(c*(c*(15*end**4/16 - 15*start**4/16 + x*(9*end**4/16 - 9*start**4/16)) + d*(15*end**3/4 - 15*start**3/4 + x*(9*end**3/4 - 9*start**3/4)) - 25*end**3/12 + 25*start**3/12 + x*(-5*end**3/4 + 5*start**3/4 + y*(-9*end**3/4 + 9*start**3/4)) + y*(-15*end**3/4 + 15*start**3/4)) + d*(d*(45*end**2/8 - 45*start**2/8 + x*(27*end**2/8 - 27*start**2/8)) - 25*end**2/4 + 25*start**2/4 + x*(-15*end**2/4 + 15*start**2/4 + y*(-27*end**2/4 + 27*start**2/4)) + y*(-45*end**2/4 + 45*start**2/4)) + x*y*(15*end**2/4 - 15*start**2/4 + y*(27*end**2/8 - 27*start**2/8)) + y*(25*end**2/4 - 25*start**2/4 + y*(45*end**2/8 - 45*start**2/8))) + d*(d*(d*(15*end/4 - 15*start/4 + x*(9*end/4 - 9*start/4)) - 25*end/4 + 25*start/4 + x*(-15*end/4 + 15*start/4 + y*(-27*end/4 + 27*start/4)) + y*(-45*end/4 + 45*start/4)) + x*y*(15*end/2 - 15*start/2 + y*(27*end/4 - 27*start/4)) + y*(25*end/2 - 25*start/2 + y*(45*end/4 - 45*start/4))) + 5*end/2 - 5*start/2 + x*(3*end/2 - 3*start/2 + y**2*(-15*end/4 + 15*start/4 + y*(-9*end/4 + 9*start/4))) + y**2*(-25*end/4 + 25*start/4 + y*(-15*end/4 + 15*start/4))) + c*(c*(c*(-3*end**4/2 + 3*start**4/2 + x*(-15*end**4/8 + 15*start**4/8 + x*(-9*end**4/16 + 9*start**4/16))) + d*(-6*end**3 + 6*start**3 + x*(-15*end**3/2 + 15*start**3/2 + x*(-9*end**3/4 + 9*start**3/4))) + 10*end**3/3 - 10*start**3/3 + x*(25*end**3/6 - 25*start**3/6 + x*(5*end**3/4 - 5*start**3/4 + y*(9*end**3/4 - 9*start**3/4)) + y*(15*end**3/2 - 15*start**3/2)) + y*(6*end**3 - 6*start**3)) + d*(d*(-9*end**2 + 9*start**2 + x*(-45*end**2/4 + 45*start**2/4 + x*(-27*end**2/8 + 27*start**2/8))) + 10*end**2 - 10*start**2 + x*(25*end**2/2 - 25*start**2/2 + x*(15*end**2/4 - 15*start**2/4 + y*(27*end**2/4 - 27*start**2/4)) + y*(45*end**2/2 - 45*start**2/2)) + y*(18*end**2 - 18*start**2)) + x*(x*y*(-15*end**2/4 + 15*start**2/4 + y*(-27*end**2/8 + 27*start**2/8)) + y*(-25*end**2/2 + 25*start**2/2 + y*(-45*end**2/4 + 45*start**2/4))) + y*(-10*end**2 + 10*start**2 + y*(-9*end**2 + 9*start**2))) + d*(d*(d*(-6*end + 6*start + x*(-15*end/2 + 15*start/2 + x*(-9*end/4 + 9*start/4))) + 10*end - 10*start + x*(25*end/2 - 25*start/2 + x*(15*end/4 - 15*start/4 + y*(27*end/4 - 27*start/4)) + y*(45*end/2 - 45*start/2)) + y*(18*end - 18*start)) + x*(x*y*(-15*end/2 + 15*start/2 + y*(-27*end/4 + 27*start/4)) + y*(-25*end + 25*start + y*(-45*end/2 + 45*start/2))) + y*(-20*end + 20*start + y*(-18*end + 18*start))) - 4*end + 4*start + x*(-5*end + 5*start + x*(-3*end/2 + 3*start/2 + y**2*(15*end/4 - 15*start/4 + y*(9*end/4 - 9*start/4))) + y**2*(25*end/2 - 25*start/2 + y*(15*end/2 - 15*start/2))) + y**2*(10*end - 10*start + y*(6*end - 6*start))) + c*(c*(c*(3*end**4/4 - 3*start**4/4 + x*(3*end**4/2 - 3*start**4/2 + x*(15*end**4/16 - 15*start**4/16 + x*(3*end**4/16 - 3*start**4/16)))) + d*(3*end**3 - 3*start**3 + x*(6*end**3 - 6*start**3 + x*(15*end**3/4 - 15*start**3/4 + x*(3*end**3/4 - 3*start**3/4)))) - 5*end**3/3 + 5*start**3/3 + x*(-10*end**3/3 + 10*start**3/3 + x*(-25*end**3/12 + 25*start**3/12 + x*(-5*end**3/12 + 5*start**3/12 + y*(-3*end**3/4 + 3*start**3/4)) + y*(-15*end**3/4 + 15*start**3/4)) + y*(-6*end**3 + 6*start**3)) + y*(-3*end**3 + 3*start**3)) + d*(d*(9*end**2/2 - 9*start**2/2 + x*(9*end**2 - 9*start**2 + x*(45*end**2/8 - 45*start**2/8 + x*(9*end**2/8 - 9*start**2/8)))) - 5*end**2 + 5*start**2 + x*(-10*end**2 + 10*start**2 + x*(-25*end**2/4 + 25*start**2/4 + x*(-5*end**2/4 + 5*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)) + y*(-45*end**2/4 + 45*start**2/4)) + y*(-18*end**2 + 18*start**2)) + y*(-9*end**2 + 9*start**2)) + x*(x*(x*y*(5*end**2/4 - 5*start**2/4 + y*(9*end**2/8 - 9*start**2/8)) + y*(25*end**2/4 - 25*start**2/4 + y*(45*end**2/8 - 45*start**2/8))) + y*(10*end**2 - 10*start**2 + y*(9*end**2 - 9*start**2))) + y*(5*end**2 - 5*start**2 + y*(9*end**2/2 - 9*start**2/2))) + d*(d*(d*(3*end - 3*start + x*(6*end - 6*start + x*(15*end/4 - 15*start/4 + x*(3*end/4 - 3*start/4)))) - 5*end + 5*start + x*(-10*end + 10*start + x*(-25*end/4 + 25*start/4 + x*(-5*end/4 + 5*start/4 + y*(-9*end/4 + 9*start/4)) + y*(-45*end/4 + 45*start/4)) + y*(-18*end + 18*start)) + y*(-9*end + 9*start)) + x*(x*(x*y*(5*end/2 - 5*start/2 + y*(9*end/4 - 9*start/4)) + y*(25*end/2 - 25*start/2 + y*(45*end/4 - 45*start/4))) + y*(20*end - 20*start + y*(18*end - 18*start))) + y*(10*end - 10*start + y*(9*end - 9*start))) + 2*end - 2*start + x*(4*end - 4*start + x*(5*end/2 - 5*start/2 + x*(end/2 - start/2 + y**2*(-5*end/4 + 5*start/4 + y*(-3*end/4 + 3*start/4))) + y**2*(-25*end/4 + 25*start/4 + y*(-15*end/4 + 15*start/4))) + y**2*(-10*end + 10*start + y*(-6*end + 6*start))) + y**2*(-5*end + 5*start + y*(-3*end + 3*start))


    return output


def int16(a, b, c, d, x, y, start, end):
    output = a*(a*(a*(c*(c*(c*(end**7/28 - start**7/28) + d*(end**6/8 - start**6/8) - 5*end**6/24 + 5*start**6/24 + y*(-end**6/8 + start**6/8)) + d*(d*(3*end**5/20 - 3*start**5/20) - end**5/2 + start**5/2 + y*(-3*end**5/10 + 3*start**5/10)) + 2*end**5/5 - 2*start**5/5 + y*(end**5/2 - start**5/2 + y*(3*end**5/20 - 3*start**5/20))) + d*(d*(d*(end**4/16 - start**4/16) - 5*end**4/16 + 5*start**4/16 + y*(-3*end**4/16 + 3*start**4/16)) + end**4/2 - start**4/2 + y*(5*end**4/8 - 5*start**4/8 + y*(3*end**4/16 - 3*start**4/16))) - end**4/4 + start**4/4 + y*(-end**4/2 + start**4/2 + y*(-5*end**4/16 + 5*start**4/16 + y*(-end**4/16 + start**4/16)))) + b*(c*(c*(c*(end**6/8 - start**6/8) + d*(9*end**5/20 - 9*start**5/20) - 3*end**5/4 + 3*start**5/4 + y*(-9*end**5/20 + 9*start**5/20)) + d*(d*(9*end**4/16 - 9*start**4/16) - 15*end**4/8 + 15*start**4/8 + y*(-9*end**4/8 + 9*start**4/8)) + 3*end**4/2 - 3*start**4/2 + y*(15*end**4/8 - 15*start**4/8 + y*(9*end**4/16 - 9*start**4/16))) + d*(d*(d*(end**3/4 - start**3/4) - 5*end**3/4 + 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)) + 2*end**3 - 2*start**3 + y*(5*end**3/2 - 5*start**3/2 + y*(3*end**3/4 - 3*start**3/4))) - end**3 + start**3 + y*(-2*end**3 + 2*start**3 + y*(-5*end**3/4 + 5*start**3/4 + y*(-end**3/4 + start**3/4)))) + c*(c*(c*(-5*end**6/24 + 5*start**6/24 + x*(-end**6/8 + start**6/8)) + d*(-3*end**5/4 + 3*start**5/4 + x*(-9*end**5/20 + 9*start**5/20)) + 5*end**5/4 - 5*start**5/4 + x*(3*end**5/4 - 3*start**5/4 + y*(9*end**5/20 - 9*start**5/20)) + y*(3*end**5/4 - 3*start**5/4)) + d*(d*(-15*end**4/16 + 15*start**4/16 + x*(-9*end**4/16 + 9*start**4/16)) + 25*end**4/8 - 25*start**4/8 + x*(15*end**4/8 - 15*start**4/8 + y*(9*end**4/8 - 9*start**4/8)) + y*(15*end**4/8 - 15*start**4/8)) - 5*end**4/2 + 5*start**4/2 + x*(-3*end**4/2 + 3*start**4/2 + y*(-15*end**4/8 + 15*start**4/8 + y*(-9*end**4/16 + 9*start**4/16))) + y*(-25*end**4/8 + 25*start**4/8 + y*(-15*end**4/16 + 15*start**4/16))) + d*(d*(d*(-5*end**3/12 + 5*start**3/12 + x*(-end**3/4 + start**3/4)) + 25*end**3/12 - 25*start**3/12 + x*(5*end**3/4 - 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4)) + y*(5*end**3/4 - 5*start**3/4)) - 10*end**3/3 + 10*start**3/3 + x*(-2*end**3 + 2*start**3 + y*(-5*end**3/2 + 5*start**3/2 + y*(-3*end**3/4 + 3*start**3/4))) + y*(-25*end**3/6 + 25*start**3/6 + y*(-5*end**3/4 + 5*start**3/4))) + 5*end**3/3 - 5*start**3/3 + x*(end**3 - start**3 + y*(2*end**3 - 2*start**3 + y*(5*end**3/4 - 5*start**3/4 + y*(end**3/4 - start**3/4)))) + y*(10*end**3/3 - 10*start**3/3 + y*(25*end**3/12 - 25*start**3/12 + y*(5*end**3/12 - 5*start**3/12)))) + b*(b*(c*(c*(c*(3*end**5/20 - 3*start**5/20) + d*(9*end**4/16 - 9*start**4/16) - 15*end**4/16 + 15*start**4/16 + y*(-9*end**4/16 + 9*start**4/16)) + d*(d*(3*end**3/4 - 3*start**3/4) - 5*end**3/2 + 5*start**3/2 + y*(-3*end**3/2 + 3*start**3/2)) + 2*end**3 - 2*start**3 + y*(5*end**3/2 - 5*start**3/2 + y*(3*end**3/4 - 3*start**3/4))) + d*(d*(d*(3*end**2/8 - 3*start**2/8) - 15*end**2/8 + 15*start**2/8 + y*(-9*end**2/8 + 9*start**2/8)) + 3*end**2 - 3*start**2 + y*(15*end**2/4 - 15*start**2/4 + y*(9*end**2/8 - 9*start**2/8))) - 3*end**2/2 + 3*start**2/2 + y*(-3*end**2 + 3*start**2 + y*(-15*end**2/8 + 15*start**2/8 + y*(-3*end**2/8 + 3*start**2/8)))) + c*(c*(c*(-end**5/2 + start**5/2 + x*(-3*end**5/10 + 3*start**5/10)) + d*(-15*end**4/8 + 15*start**4/8 + x*(-9*end**4/8 + 9*start**4/8)) + 25*end**4/8 - 25*start**4/8 + x*(15*end**4/8 - 15*start**4/8 + y*(9*end**4/8 - 9*start**4/8)) + y*(15*end**4/8 - 15*start**4/8)) + d*(d*(-5*end**3/2 + 5*start**3/2 + x*(-3*end**3/2 + 3*start**3/2)) + 25*end**3/3 - 25*start**3/3 + x*(5*end**3 - 5*start**3 + y*(3*end**3 - 3*start**3)) + y*(5*end**3 - 5*start**3)) - 20*end**3/3 + 20*start**3/3 + x*(-4*end**3 + 4*start**3 + y*(-5*end**3 + 5*start**3 + y*(-3*end**3/2 + 3*start**3/2))) + y*(-25*end**3/3 + 25*start**3/3 + y*(-5*end**3/2 + 5*start**3/2))) + d*(d*(d*(-5*end**2/4 + 5*start**2/4 + x*(-3*end**2/4 + 3*start**2/4)) + 25*end**2/4 - 25*start**2/4 + x*(15*end**2/4 - 15*start**2/4 + y*(9*end**2/4 - 9*start**2/4)) + y*(15*end**2/4 - 15*start**2/4)) - 10*end**2 + 10*start**2 + x*(-6*end**2 + 6*start**2 + y*(-15*end**2/2 + 15*start**2/2 + y*(-9*end**2/4 + 9*start**2/4))) + y*(-25*end**2/2 + 25*start**2/2 + y*(-15*end**2/4 + 15*start**2/4))) + 5*end**2 - 5*start**2 + x*(3*end**2 - 3*start**2 + y*(6*end**2 - 6*start**2 + y*(15*end**2/4 - 15*start**2/4 + y*(3*end**2/4 - 3*start**2/4)))) + y*(10*end**2 - 10*start**2 + y*(25*end**2/4 - 25*start**2/4 + y*(5*end**2/4 - 5*start**2/4)))) + c*(c*(c*(2*end**5/5 - 2*start**5/5 + x*(end**5/2 - start**5/2 + x*(3*end**5/20 - 3*start**5/20))) + d*(3*end**4/2 - 3*start**4/2 + x*(15*end**4/8 - 15*start**4/8 + x*(9*end**4/16 - 9*start**4/16))) - 5*end**4/2 + 5*start**4/2 + x*(-25*end**4/8 + 25*start**4/8 + x*(-15*end**4/16 + 15*start**4/16 + y*(-9*end**4/16 + 9*start**4/16)) + y*(-15*end**4/8 + 15*start**4/8)) + y*(-3*end**4/2 + 3*start**4/2)) + d*(d*(2*end**3 - 2*start**3 + x*(5*end**3/2 - 5*start**3/2 + x*(3*end**3/4 - 3*start**3/4))) - 20*end**3/3 + 20*start**3/3 + x*(-25*end**3/3 + 25*start**3/3 + x*(-5*end**3/2 + 5*start**3/2 + y*(-3*end**3/2 + 3*start**3/2)) + y*(-5*end**3 + 5*start**3)) + y*(-4*end**3 + 4*start**3)) + 16*end**3/3 - 16*start**3/3 + x*(20*end**3/3 - 20*start**3/3 + x*(2*end**3 - 2*start**3 + y*(5*end**3/2 - 5*start**3/2 + y*(3*end**3/4 - 3*start**3/4))) + y*(25*end**3/3 - 25*start**3/3 + y*(5*end**3/2 - 5*start**3/2))) + y*(20*end**3/3 - 20*start**3/3 + y*(2*end**3 - 2*start**3))) + d*(d*(d*(end**2 - start**2 + x*(5*end**2/4 - 5*start**2/4 + x*(3*end**2/8 - 3*start**2/8))) - 5*end**2 + 5*start**2 + x*(-25*end**2/4 + 25*start**2/4 + x*(-15*end**2/8 + 15*start**2/8 + y*(-9*end**2/8 + 9*start**2/8)) + y*(-15*end**2/4 + 15*start**2/4)) + y*(-3*end**2 + 3*start**2)) + 8*end**2 - 8*start**2 + x*(10*end**2 - 10*start**2 + x*(3*end**2 - 3*start**2 + y*(15*end**2/4 - 15*start**2/4 + y*(9*end**2/8 - 9*start**2/8))) + y*(25*end**2/2 - 25*start**2/2 + y*(15*end**2/4 - 15*start**2/4))) + y*(10*end**2 - 10*start**2 + y*(3*end**2 - 3*start**2))) - 4*end**2 + 4*start**2 + x*(-5*end**2 + 5*start**2 + x*(-3*end**2/2 + 3*start**2/2 + y*(-3*end**2 + 3*start**2 + y*(-15*end**2/8 + 15*start**2/8 + y*(-3*end**2/8 + 3*start**2/8)))) + y*(-10*end**2 + 10*start**2 + y*(-25*end**2/4 + 25*start**2/4 + y*(-5*end**2/4 + 5*start**2/4)))) + y*(-8*end**2 + 8*start**2 + y*(-5*end**2 + 5*start**2 + y*(-end**2 + start**2)))) + b*(b*(b*(c*(c*(c*(end**4/16 - start**4/16) + d*(end**3/4 - start**3/4) - 5*end**3/12 + 5*start**3/12 + y*(-end**3/4 + start**3/4)) + d*(d*(3*end**2/8 - 3*start**2/8) - 5*end**2/4 + 5*start**2/4 + y*(-3*end**2/4 + 3*start**2/4)) + end**2 - start**2 + y*(5*end**2/4 - 5*start**2/4 + y*(3*end**2/8 - 3*start**2/8))) + d*(d*(d*(end/4 - start/4) - 5*end/4 + 5*start/4 + y*(-3*end/4 + 3*start/4)) + 2*end - 2*start + y*(5*end/2 - 5*start/2 + y*(3*end/4 - 3*start/4))) - end + start + y*(-2*end + 2*start + y*(-5*end/4 + 5*start/4 + y*(-end/4 + start/4)))) + c*(c*(c*(-5*end**4/16 + 5*start**4/16 + x*(-3*end**4/16 + 3*start**4/16)) + d*(-5*end**3/4 + 5*start**3/4 + x*(-3*end**3/4 + 3*start**3/4)) + 25*end**3/12 - 25*start**3/12 + x*(5*end**3/4 - 5*start**3/4 + y*(3*end**3/4 - 3*start**3/4)) + y*(5*end**3/4 - 5*start**3/4)) + d*(d*(-15*end**2/8 + 15*start**2/8 + x*(-9*end**2/8 + 9*start**2/8)) + 25*end**2/4 - 25*start**2/4 + x*(15*end**2/4 - 15*start**2/4 + y*(9*end**2/4 - 9*start**2/4)) + y*(15*end**2/4 - 15*start**2/4)) - 5*end**2 + 5*start**2 + x*(-3*end**2 + 3*start**2 + y*(-15*end**2/4 + 15*start**2/4 + y*(-9*end**2/8 + 9*start**2/8))) + y*(-25*end**2/4 + 25*start**2/4 + y*(-15*end**2/8 + 15*start**2/8))) + d*(d*(d*(-5*end/4 + 5*start/4 + x*(-3*end/4 + 3*start/4)) + 25*end/4 - 25*start/4 + x*(15*end/4 - 15*start/4 + y*(9*end/4 - 9*start/4)) + y*(15*end/4 - 15*start/4)) - 10*end + 10*start + x*(-6*end + 6*start + y*(-15*end/2 + 15*start/2 + y*(-9*end/4 + 9*start/4))) + y*(-25*end/2 + 25*start/2 + y*(-15*end/4 + 15*start/4))) + 5*end - 5*start + x*(3*end - 3*start + y*(6*end - 6*start + y*(15*end/4 - 15*start/4 + y*(3*end/4 - 3*start/4)))) + y*(10*end - 10*start + y*(25*end/4 - 25*start/4 + y*(5*end/4 - 5*start/4)))) + c*(c*(c*(end**4/2 - start**4/2 + x*(5*end**4/8 - 5*start**4/8 + x*(3*end**4/16 - 3*start**4/16))) + d*(2*end**3 - 2*start**3 + x*(5*end**3/2 - 5*start**3/2 + x*(3*end**3/4 - 3*start**3/4))) - 10*end**3/3 + 10*start**3/3 + x*(-25*end**3/6 + 25*start**3/6 + x*(-5*end**3/4 + 5*start**3/4 + y*(-3*end**3/4 + 3*start**3/4)) + y*(-5*end**3/2 + 5*start**3/2)) + y*(-2*end**3 + 2*start**3)) + d*(d*(3*end**2 - 3*start**2 + x*(15*end**2/4 - 15*start**2/4 + x*(9*end**2/8 - 9*start**2/8))) - 10*end**2 + 10*start**2 + x*(-25*end**2/2 + 25*start**2/2 + x*(-15*end**2/4 + 15*start**2/4 + y*(-9*end**2/4 + 9*start**2/4)) + y*(-15*end**2/2 + 15*start**2/2)) + y*(-6*end**2 + 6*start**2)) + 8*end**2 - 8*start**2 + x*(10*end**2 - 10*start**2 + x*(3*end**2 - 3*start**2 + y*(15*end**2/4 - 15*start**2/4 + y*(9*end**2/8 - 9*start**2/8))) + y*(25*end**2/2 - 25*start**2/2 + y*(15*end**2/4 - 15*start**2/4))) + y*(10*end**2 - 10*start**2 + y*(3*end**2 - 3*start**2))) + d*(d*(d*(2*end - 2*start + x*(5*end/2 - 5*start/2 + x*(3*end/4 - 3*start/4))) - 10*end + 10*start + x*(-25*end/2 + 25*start/2 + x*(-15*end/4 + 15*start/4 + y*(-9*end/4 + 9*start/4)) + y*(-15*end/2 + 15*start/2)) + y*(-6*end + 6*start)) + 16*end - 16*start + x*(20*end - 20*start + x*(6*end - 6*start + y*(15*end/2 - 15*start/2 + y*(9*end/4 - 9*start/4))) + y*(25*end - 25*start + y*(15*end/2 - 15*start/2))) + y*(20*end - 20*start + y*(6*end - 6*start))) - 8*end + 8*start + x*(-10*end + 10*start + x*(-3*end + 3*start + y*(-6*end + 6*start + y*(-15*end/4 + 15*start/4 + y*(-3*end/4 + 3*start/4)))) + y*(-20*end + 20*start + y*(-25*end/2 + 25*start/2 + y*(-5*end/2 + 5*start/2)))) + y*(-16*end + 16*start + y*(-10*end + 10*start + y*(-2*end + 2*start)))) + c*(c*(c*(-end**4/4 + start**4/4 + x*(-end**4/2 + start**4/2 + x*(-5*end**4/16 + 5*start**4/16 + x*(-end**4/16 + start**4/16)))) + d*(-end**3 + start**3 + x*(-2*end**3 + 2*start**3 + x*(-5*end**3/4 + 5*start**3/4 + x*(-end**3/4 + start**3/4)))) + 5*end**3/3 - 5*start**3/3 + x*(10*end**3/3 - 10*start**3/3 + x*(25*end**3/12 - 25*start**3/12 + x*(5*end**3/12 - 5*start**3/12 + y*(end**3/4 - start**3/4)) + y*(5*end**3/4 - 5*start**3/4)) + y*(2*end**3 - 2*start**3)) + y*(end**3 - start**3)) + d*(d*(-3*end**2/2 + 3*start**2/2 + x*(-3*end**2 + 3*start**2 + x*(-15*end**2/8 + 15*start**2/8 + x*(-3*end**2/8 + 3*start**2/8)))) + 5*end**2 - 5*start**2 + x*(10*end**2 - 10*start**2 + x*(25*end**2/4 - 25*start**2/4 + x*(5*end**2/4 - 5*start**2/4 + y*(3*end**2/4 - 3*start**2/4)) + y*(15*end**2/4 - 15*start**2/4)) + y*(6*end**2 - 6*start**2)) + y*(3*end**2 - 3*start**2)) - 4*end**2 + 4*start**2 + x*(-8*end**2 + 8*start**2 + x*(-5*end**2 + 5*start**2 + x*(-end**2 + start**2 + y*(-5*end**2/4 + 5*start**2/4 + y*(-3*end**2/8 + 3*start**2/8))) + y*(-25*end**2/4 + 25*start**2/4 + y*(-15*end**2/8 + 15*start**2/8))) + y*(-10*end**2 + 10*start**2 + y*(-3*end**2 + 3*start**2))) + y*(-5*end**2 + 5*start**2 + y*(-3*end**2/2 + 3*start**2/2))) + d*(d*(d*(-end + start + x*(-2*end + 2*start + x*(-5*end/4 + 5*start/4 + x*(-end/4 + start/4)))) + 5*end - 5*start + x*(10*end - 10*start + x*(25*end/4 - 25*start/4 + x*(5*end/4 - 5*start/4 + y*(3*end/4 - 3*start/4)) + y*(15*end/4 - 15*start/4)) + y*(6*end - 6*start)) + y*(3*end - 3*start)) - 8*end + 8*start + x*(-16*end + 16*start + x*(-10*end + 10*start + x*(-2*end + 2*start + y*(-5*end/2 + 5*start/2 + y*(-3*end/4 + 3*start/4))) + y*(-25*end/2 + 25*start/2 + y*(-15*end/4 + 15*start/4))) + y*(-20*end + 20*start + y*(-6*end + 6*start))) + y*(-10*end + 10*start + y*(-3*end + 3*start))) + 4*end - 4*start + x*(8*end - 8*start + x*(5*end - 5*start + x*(end - start + y*(2*end - 2*start + y*(5*end/4 - 5*start/4 + y*(end/4 - start/4)))) + y*(10*end - 10*start + y*(25*end/4 - 25*start/4 + y*(5*end/4 - 5*start/4)))) + y*(16*end - 16*start + y*(10*end - 10*start + y*(2*end - 2*start)))) + y*(8*end - 8*start + y*(5*end - 5*start + y*(end - start)))


    return output
